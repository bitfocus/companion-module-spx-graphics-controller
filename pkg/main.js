/*! For license information please see main.js.LICENSE.txt */
(()=>{var __webpack_modules__={"./actions.js":module=>{eval("module.exports = {\n\t// Define and expose available actions to SPX\n\tinitActions: function () {\n\t\tlet self = this;\n\t\tlet actions = {};\n\n\t\tactions.play = {\n\t\t\tname: \"Start focused item\",\n\t\t\toptions: [],\n\t\t\tcallback: function (action) {\n\t\t\t\tself.doAction(action)\n\t\t\t}\n\t\t};\n\n\t\tactions.play_ID = {\n\t\t\tname: 'Start item by ID',\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'textinput',\n\t\t\t\t\tlabel: 'ID',\n\t\t\t\t\tid: 'id',\n\t\t\t\t\tdefault: '0123456789',\n\t\t\t\t},\n\t\t\t],\n\t\t\tcallback: function (action) {\n\t\t\t\tself.doAction(action)\n\t\t\t}\n\t\t};\n\n\n\t\tactions.continue = {\n\t\t\tname: 'Continue focused item',\n\t\t\toptions: [],\n\t\t\tcallback: function (action) {\n\t\t\t\tself.doAction(action)\n\t\t\t},\n\t\t}\n\n\t\tactions.continue_ID = {\n\t\t\tname: 'Continue item by ID',\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'textinput',\n\t\t\t\t\tlabel: 'ID',\n\t\t\t\t\tid: 'id',\n\t\t\t\t\tdefault: '0123456789',\n\t\t\t\t},\n\t\t\t],\n\t\t\tcallback: function (action) {\n\t\t\t\tself.doAction(action)\n\t\t\t},\n\t\t}\n\n\t\tactions.stop = {\n\t\t\tname: 'Stop focused item',\n\t\t\toptions: [],\n\t\t\tcallback: function (action) {\n\t\t\t\tself.doAction(action)\n\t\t\t},\n\t\t}\n\n\t\tactions.stop_ID = {\n\t\t\tname: 'Stop item by ID',\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'textinput',\n\t\t\t\t\tlabel: 'ID',\n\t\t\t\t\tid: 'id',\n\t\t\t\t\tdefault: '0123456789',\n\t\t\t\t},\n\t\t\t],\n\t\t\tcallback: function (action) {\n\t\t\t\tself.doAction(action)\n\t\t\t},\n\t\t}\n\n\t\tactions.focusFirst = {\n\t\t\tname: 'Focus on the first item',\n\t\t\toptions: [],\n\t\t\tcallback: function (action) {\n\t\t\t\tself.doAction(action)\n\t\t\t},\n\t\t}\n\n\t\tactions.focusNext = {\n\t\t\tname: 'Focus on the next item',\n\t\t\toptions: [],\n\t\t\tcallback: function (action) {\n\t\t\t\tself.doAction(action)\n\t\t\t},\n\t\t}\n\n\t\tactions.focusPrevious = {\n\t\t\tname: 'Focus on the previous item',\n\t\t\toptions: [],\n\t\t\tcallback: function (action) {\n\t\t\t\tself.doAction(action)\n\t\t\t},\n\t\t}\n\n\t\tactions.focusLast = {\n\t\t\tname: 'Focus on the last item',\n\t\t\toptions: [],\n\t\t\tcallback: function (action) {\n\t\t\t\tself.doAction(action)\n\t\t\t},\n\t\t}\n\n\t\tactions.stopAllLayers = {\n\t\t\tname: 'Stop all layers',\n\t\t\toptions: [],\n\t\t\tcallback: function (action) {\n\t\t\t\tself.doAction(action)\n\t\t\t},\n\t\t}\n\n\t\tactions.openRundown = {\n\t\t\tname: 'Open rundown',\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'textinput',\n\t\t\t\t\tlabel: 'project/file',\n\t\t\t\t\tid: 'rundown',\n\t\t\t\t\tdefault: 'MyFirstProject/MyFirstRundown',\n\t\t\t\t},\n\t\t\t],\n\t\t\tcallback: function (action) {\n\t\t\t\tself.doAction(action)\n\t\t\t},\n\t\t}\n\n\n\t\tactions.controlRundownItem = {\n\t\t\tname: 'Play/Stop/Continue an item from a known rundown',\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'textinput',\n\t\t\t\t\tlabel: 'Project/file',\n\t\t\t\t\tid: 'file',\n\t\t\t\t\tdefault: 'MyFirstProject/MyFirstRundown',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'textinput',\n\t\t\t\t\tlabel: 'Id',\n\t\t\t\t\tid: 'id',\n\t\t\t\t\tdefault: '0123456789',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'dropdown',\n\t\t\t\t\tlabel: 'Action',\n\t\t\t\t\tid: 'command',\n\t\t\t\t\tchoices: [\n\t\t\t\t\t\t{ id: 'play', label: 'Play' },\n\t\t\t\t\t\t{ id: 'stop', label: 'Stop' },\n\t\t\t\t\t\t{ id: 'continue', label: 'Continue' },\n\t\t\t\t\t],\n\t\t\t\t\tdefault: 'play',\n\t\t\t\t},\n\t\t\t],\n\t\t\tcallback: function (action) {\n\t\t\t\tself.doAction(action)\n\t\t\t},\n\t\t}\n\n\t\tactions.directplayout = {\n\t\t\tname: 'Direct playout',\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'textinput',\n\t\t\t\t\tlabel: 'JSON body',\n\t\t\t\t\tid: 'body',\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t'\"casparServer\": \"OVERLAY\", \"casparChannel\": \"1\", \"casparLayer\": \"20\", \"webplayoutLayer\": \"20\", \"relativeTemplatePath\": \"vendor/pack/templatefile.html\", \"command\": \"play\"',\n\t\t\t\t},\n\t\t\t],\n\t\t\tcallback: function (action) {\n\t\t\t\tself.doAction(action)\n\t\t\t},\n\t\t}\n\n\t\tactions.invokeTemplateFunction = {\n\t\t\tname: 'Invoke template function',\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'textinput',\n\t\t\t\t\tlabel: 'playserver',\n\t\t\t\t\tid: 'playserver',\n\t\t\t\t\tdefault: 'OVERLAY',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'textinput',\n\t\t\t\t\tlabel: 'playchannel',\n\t\t\t\t\tid: 'playchannel',\n\t\t\t\t\tdefault: '1',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'textinput',\n\t\t\t\t\tlabel: 'playlayer',\n\t\t\t\t\tid: 'playlayer',\n\t\t\t\t\tdefault: '19',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'textinput',\n\t\t\t\t\tlabel: 'webplayout',\n\t\t\t\t\tid: 'webplayout',\n\t\t\t\t\tdefault: '19',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'textinput',\n\t\t\t\t\tlabel: 'prepopulated',\n\t\t\t\t\tid: 'prepopulated',\n\t\t\t\t\tdefault: 'true',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'textinput',\n\t\t\t\t\tlabel: 'relpath',\n\t\t\t\t\tid: 'relpath',\n\t\t\t\t\tdefault: 'we_need_some_filename_here_to_prevent_errors.html',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'textinput',\n\t\t\t\t\tlabel: 'command',\n\t\t\t\t\tid: 'command',\n\t\t\t\t\tdefault: 'invoke',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'textinput',\n\t\t\t\t\tlabel: 'customFunction',\n\t\t\t\t\tid: 'customFunction',\n\t\t\t\t\tdefault: 'myCustomTemplateFunction',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'textinput',\n\t\t\t\t\tlabel: 'params',\n\t\t\t\t\tid: 'params',\n\t\t\t\t\tdefault: 'Hello World',\n\t\t\t\t},\n\t\t\t],\n\t\t\tcallback: function (action) {\n\t\t\t\tself.doAction(action)\n\t\t\t},\n\t\t}\n\n\t\tself.setActionDefinitions(actions);\n\t},\n\n\t// Select action and make API call\n\tdoAction: function (act) {\n\t\tconst opt = act.options\n\t\tlet cmd, method\n\n\t\tswitch (act.actionId) {\n\t\t\tcase 'play':\n\t\t\t\tmethod = 'GET'\n\t\t\t\tcmd = `http://${this.config.host}:${this.config.port}/api/v1/item/play`\n\t\t\t\tbreak\n\t\t\tcase 'play_ID':\n\t\t\t\tmethod = 'GET'\n\t\t\t\tcmd = `http://${this.config.host}:${this.config.port}/api/v1/item/play/${opt.id}`\n\t\t\t\tbreak\n\t\t\tcase 'continue':\n\t\t\t\tmethod = 'GET'\n\t\t\t\tcmd = `http://${this.config.host}:${this.config.port}/api/v1/item/continue`\n\t\t\t\tbreak\n\t\t\tcase 'continue_ID':\n\t\t\t\tmethod = 'GET'\n\t\t\t\tcmd = `http://${this.config.host}:${this.config.port}/api/v1/item/continue/${opt.id}`\n\t\t\t\tbreak\n\t\t\tcase 'stop':\n\t\t\t\tmethod = 'GET'\n\t\t\t\tcmd = `http://${this.config.host}:${this.config.port}/api/v1/item/stop`\n\t\t\t\tbreak\n\t\t\tcase 'stop_ID':\n\t\t\t\tmethod = 'GET'\n\t\t\t\tcmd = `http://${this.config.host}:${this.config.port}/api/v1/item/stop/${opt.id}`\n\t\t\t\tbreak\n\t\t\tcase 'focusFirst':\n\t\t\t\tmethod = 'GET'\n\t\t\t\tcmd = `http://${this.config.host}:${this.config.port}/api/v1/rundown/focusFirst`\n\t\t\t\tbreak\n\t\t\tcase 'focusNext':\n\t\t\t\tmethod = 'GET'\n\t\t\t\tcmd = `http://${this.config.host}:${this.config.port}/api/v1/rundown/focusNext`\n\t\t\t\tbreak\n\t\t\tcase 'focusPrevious':\n\t\t\t\tmethod = 'GET'\n\t\t\t\tcmd = `http://${this.config.host}:${this.config.port}/api/v1/rundown/focusPrevious`\n\t\t\t\tbreak\n\t\t\tcase 'focusLast':\n\t\t\t\tmethod = 'GET'\n\t\t\t\tcmd = `http://${this.config.host}:${this.config.port}/api/v1/rundown/focusLast`\n\t\t\t\tbreak\n\t\t\tcase 'stopAllLayers':\n\t\t\t\tmethod = 'GET'\n\t\t\t\tcmd = `http://${this.config.host}:${this.config.port}/api/v1/rundown/stopAllLayers`\n\t\t\t\tbreak\n\t\t\tcase 'openRundown':\n\t\t\t\tmethod = 'GET'\n\t\t\t\tcmd = `http://${this.config.host}:${this.config.port}/api/v1/rundown/load?file=${opt.rundown}`\n\t\t\t\tbreak\n\t\t\tcase 'directplayout':\n\t\t\t\tmethod = 'POST'\n\t\t\t\tcmd = `http://${this.config.host}:${this.config.port}/api/v1/directplayout`\n\t\t\t\tbreak\n\t\t\tcase 'invokeTemplateFunction':\n\t\t\t\tmethod = 'GET'\n\t\t\t\tcmd = `http://${this.config.host}:${this.config.port}/api/v1/invokeTemplateFunction?playserver=${playserver}&playchannel=${playchannel}&playlayer=${playlayer}&webplayout=${webplayout}&function=${customfunction}&params=${params}`\n\t\t\t\tbreak\n\t\t\tcase 'controlRundownItem':\n\t\t\t\tmethod = 'GET'\n\t\t\t\tcmd = `http://${this.config.host}:${this.config.port}/api/v1/controlRundownItemByID?file=${opt.file}&item=${opt.id}&command=${opt.command}`\n\t\t\t\tbreak\n\t\t}\n\t\tconsole.log(cmd);\n\t\tif (cmd != undefined) {\n\t\t\tswitch (method) {\n\t\t\t\tcase 'GET':\n\t\t\t\t\tfetch(cmd)\n\t\t\t\t\t\t.then((res) => res.text())\n\t\t\t\t\t\t.then((body) => this.log('info', body))\n\t\t\t\t\t\t.catch((err) => console.log(err))\n\t\t\t\t\tbreak\n\n\t\t\t\tcase 'POST':\n\t\t\t\t\tconsole.log(JSON.stringify(opt.body))\n\t\t\t\t\tfetch(cmd, {\n\t\t\t\t\t\tmethod: 'post',\n\t\t\t\t\t\tbody: JSON.stringify(opt.body),\n\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\t})\n\t\t\t\t\t\t.then((res) => res.text())\n\t\t\t\t\t\t.then((body) => this.log('info', body))\n\t\t\t\t\t\t.catch((err) => console.log(err))\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n}\n\n//# sourceURL=webpack://spx-grapics-controller/./actions.js?")},"./feedbacks.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval("const { combineRgb } = __webpack_require__(/*! @companion-module/base */ \"./node_modules/@companion-module/base/dist/index.js\")\n\nmodule.exports = async function (self) {\n\tself.setFeedbackDefinitions({\n\t\tChannelState: {\n\t\t\tname: 'Example Feedback',\n\t\t\ttype: 'boolean',\n\t\t\tlabel: 'Channel State',\n\t\t\tdefaultStyle: {\n\t\t\t\tbgcolor: combineRgb(255, 0, 0),\n\t\t\t\tcolor: combineRgb(0, 0, 0),\n\t\t\t},\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tid: 'num',\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tlabel: 'Test',\n\t\t\t\t\tdefault: 5,\n\t\t\t\t\tmin: 0,\n\t\t\t\t\tmax: 10,\n\t\t\t\t},\n\t\t\t],\n\t\t\tcallback: (feedback) => {\n\t\t\t\tconsole.log('Hello world!', feedback.options.num)\n\t\t\t\tif (feedback.options.num > 5) {\n\t\t\t\t\treturn true\n\t\t\t\t} else {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t})\n}\n\n\n//# sourceURL=webpack://spx-grapics-controller/./feedbacks.js?")},"./main.js":(__unused_webpack_module,__unused_webpack_exports,__webpack_require__)=>{eval("const { InstanceBase, Regex, runEntrypoint, InstanceStatus } = __webpack_require__(/*! @companion-module/base */ \"./node_modules/@companion-module/base/dist/index.js\")\nconst UpgradeScripts = __webpack_require__(/*! ./upgrades */ \"./upgrades.js\")\nconst actions = __webpack_require__(/*! ./actions */ \"./actions.js\")\nconst feedbacks = __webpack_require__(/*! ./feedbacks */ \"./feedbacks.js\")\nconst variables = __webpack_require__(/*! ./variables */ \"./variables.js\")\n\nclass ModuleInstance extends InstanceBase {\n\tconstructor(internal) {\n\t\tsuper(internal)\n\n\t\t// Assign the methods from the listed files to this class\n\t\tObject.assign(this, {\n\t\t\t...actions,\n\t\t\t...feedbacks,\n\t\t\t...variables,\n\t\t\t//...presets, //TODO: convert to companion 3\n\t\t})\n\t}\n\n\tasync init(config) {\n\t\tthis.config = config\n\n\t\tthis.updateStatus(InstanceStatus.Ok)\n\n\t\tthis.initActions() // export actions\n\t\t//this.updateFeedbacks() // export feedbacks\n\t\tthis.initVariables() // export variable definitions\n\t}\n\t// When module gets deleted\n\tasync destroy() {\n\t\tthis.log('debug', 'destroy')\n\t}\n\n\tasync configUpdated(config) {\n\t\tthis.config = config\n\t}\n\n\t// Return config fields for web config\n\tgetConfigFields() {\n\t\treturn [\n\t\t\t{\n\t\t\t\ttype: 'text',\n\t\t\t\tid: 'info',\n\t\t\t\twidth: 12,\n\t\t\t\tlabel: 'Information',\n\t\t\t\tvalue: 'This modules connects to SPX',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'textinput',\n\t\t\t\tlabel: 'Target IP',\n\t\t\t\tid: 'host',\n\t\t\t\twidth: 6,\n\t\t\t\tregex: this.REGEX_IP,\n\t\t\t\tdefault: '127.0.0.1',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'textinput',\n\t\t\t\tlabel: 'Target port',\n\t\t\t\tid: 'port',\n\t\t\t\twidth: 6,\n\t\t\t\tregex: this.REGEX_PORT,\n\t\t\t\tdefault: '5000',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t]\n\t}\n\n\tupdateActions() {\n\t\tUpdateActions(this)\n\t}\n\n\tupdateFeedbacks() {\n\t\tUpdateFeedbacks(this)\n\t}\n\n\tupdateVariableDefinitions() {\n\t\tUpdateVariableDefinitions(this)\n\t}\n}\n\n\nrunEntrypoint(ModuleInstance, UpgradeScripts)\n\n\n//# sourceURL=webpack://spx-grapics-controller/./main.js?")},"./node_modules/@companion-module/base/node_modules/ajv/dist/runtime/equal.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n// https://github.com/ajv-validator/ajv/issues/889\nconst equal = __webpack_require__(/*! fast-deep-equal */ "./node_modules/fast-deep-equal/index.js");\nequal.code = \'require("ajv/dist/runtime/equal").default\';\nexports["default"] = equal;\n//# sourceMappingURL=equal.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/node_modules/ajv/dist/runtime/equal.js?')},"./node_modules/@sentry-internal/tracing/esm/browser/backgroundtab.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   registerBackgroundTabDetection: () => (/* binding */ registerBackgroundTabDetection)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/utils.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n\n\n\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nfunction registerBackgroundTabDetection() {\n  if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW && _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document) {\n    _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.addEventListener('visibilitychange', () => {\n      const activeTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getActiveTransaction)() ;\n      if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.hidden && activeTransaction) {\n        const statusType = 'cancelled';\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(\n            `[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${activeTransaction.op}`,\n          );\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(statusType);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n\n\n//# sourceMappingURL=backgroundtab.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/browser/backgroundtab.js?")},"./node_modules/@sentry-internal/tracing/esm/browser/browsertracing.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BROWSER_TRACING_INTEGRATION_ID: () => (/* binding */ BROWSER_TRACING_INTEGRATION_ID),\n/* harmony export */   BrowserTracing: () => (/* binding */ BrowserTracing),\n/* harmony export */   getMetaContent: () => (/* binding */ getMetaContent)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/idletransaction.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/utils.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/browser.js\");\n/* harmony import */ var _backgroundtab_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./backgroundtab.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/backgroundtab.js\");\n/* harmony import */ var _metrics_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./metrics/index.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/metrics/index.js\");\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./request.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/request.js\");\n/* harmony import */ var _router_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./router.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/router.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n\n\n\n\n\n\n\n\nconst BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS = {\n  ..._sentry_core__WEBPACK_IMPORTED_MODULE_0__.TRACING_DEFAULTS,\n  markBackgroundTransactions: true,\n  routingInstrumentation: _router_js__WEBPACK_IMPORTED_MODULE_1__.instrumentRoutingWithDefaults,\n  startTransactionOnLocationChange: true,\n  startTransactionOnPageLoad: true,\n  enableLongTask: true,\n  _experiments: {},\n  ..._request_js__WEBPACK_IMPORTED_MODULE_2__.defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n */\nclass BrowserTracing  {\n  // This class currently doesn't have a static `id` field like the other integration classes, because it prevented\n  // @sentry/tracing from being treeshaken. Tree shakers do not like static fields, because they behave like side effects.\n  // TODO: Come up with a better plan, than using static fields on integration classes, and use that plan on all\n  // integrations.\n\n  /** Browser Tracing integration options */\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor(_options) {\n    this.name = BROWSER_TRACING_INTEGRATION_ID;\n    this._hasSetTracePropagationTargets = false;\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.addTracingExtensions)();\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      this._hasSetTracePropagationTargets = !!(\n        _options &&\n        // eslint-disable-next-line deprecation/deprecation\n        (_options.tracePropagationTargets || _options.tracingOrigins)\n      );\n    }\n\n    this.options = {\n      ...DEFAULT_BROWSER_TRACING_OPTIONS,\n      ..._options,\n    };\n\n    // Special case: enableLongTask can be set in _experiments\n    // TODO (v8): Remove this in v8\n    if (this.options._experiments.enableLongTask !== undefined) {\n      this.options.enableLongTask = this.options._experiments.enableLongTask;\n    }\n\n    // TODO (v8): remove this block after tracingOrigins is removed\n    // Set tracePropagationTargets to tracingOrigins if specified by the user\n    // In case both are specified, tracePropagationTargets takes precedence\n    // eslint-disable-next-line deprecation/deprecation\n    if (_options && !_options.tracePropagationTargets && _options.tracingOrigins) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.options.tracePropagationTargets = _options.tracingOrigins;\n    }\n\n    this._collectWebVitals = (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_4__.startTrackingWebVitals)();\n    if (this.options.enableLongTask) {\n      (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_4__.startTrackingLongTasks)();\n    }\n    if (this.options._experiments.enableInteractions) {\n      (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_4__.startTrackingInteractions)();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    this._getCurrentHub = getCurrentHub;\n    const hub = getCurrentHub();\n    const client = hub.getClient();\n    const clientOptions = client && client.getOptions();\n\n    const {\n      routingInstrumentation: instrumentRouting,\n      startTransactionOnLocationChange,\n      startTransactionOnPageLoad,\n      markBackgroundTransactions,\n      traceFetch,\n      traceXHR,\n      shouldCreateSpanForRequest,\n      enableHTTPTimings,\n      _experiments,\n    } = this.options;\n\n    const clientOptionsTracePropagationTargets = clientOptions && clientOptions.tracePropagationTargets;\n    // There are three ways to configure tracePropagationTargets:\n    // 1. via top level client option `tracePropagationTargets`\n    // 2. via BrowserTracing option `tracePropagationTargets`\n    // 3. via BrowserTracing option `tracingOrigins` (deprecated)\n    //\n    // To avoid confusion, favour top level client option `tracePropagationTargets`, and fallback to\n    // BrowserTracing option `tracePropagationTargets` and then `tracingOrigins` (deprecated).\n    // This is done as it minimizes bundle size (we don't have to have undefined checks).\n    //\n    // If both 1 and either one of 2 or 3 are set (from above), we log out a warning.\n    // eslint-disable-next-line deprecation/deprecation\n    const tracePropagationTargets = clientOptionsTracePropagationTargets || this.options.tracePropagationTargets;\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && this._hasSetTracePropagationTargets && clientOptionsTracePropagationTargets) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(\n        '[Tracing] The `tracePropagationTargets` option was set in the BrowserTracing integration and top level `Sentry.init`. The top level `Sentry.init` value is being used.',\n      );\n    }\n\n    instrumentRouting(\n      (context) => {\n        const transaction = this._createRouteTransaction(context);\n\n        this.options._experiments.onStartRouteTransaction &&\n          this.options._experiments.onStartRouteTransaction(transaction, context, getCurrentHub);\n\n        return transaction;\n      },\n      startTransactionOnPageLoad,\n      startTransactionOnLocationChange,\n    );\n\n    if (markBackgroundTransactions) {\n      (0,_backgroundtab_js__WEBPACK_IMPORTED_MODULE_6__.registerBackgroundTabDetection)();\n    }\n\n    if (_experiments.enableInteractions) {\n      this._registerInteractionListener();\n    }\n\n    (0,_request_js__WEBPACK_IMPORTED_MODULE_2__.instrumentOutgoingRequests)({\n      traceFetch,\n      traceXHR,\n      tracePropagationTargets,\n      shouldCreateSpanForRequest,\n      enableHTTPTimings,\n    });\n  }\n\n  /** Create routing idle transaction. */\n   _createRouteTransaction(context) {\n    if (!this._getCurrentHub) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`[Tracing] Did not create ${context.op} transaction because _getCurrentHub is invalid.`);\n      return undefined;\n    }\n\n    const hub = this._getCurrentHub();\n\n    const { beforeNavigate, idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n\n    const isPageloadTransaction = context.op === 'pageload';\n\n    const sentryTrace = isPageloadTransaction ? getMetaContent('sentry-trace') : '';\n    const baggage = isPageloadTransaction ? getMetaContent('baggage') : '';\n    const { traceparentData, dynamicSamplingContext, propagationContext } = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.tracingContextFromHeaders)(\n      sentryTrace,\n      baggage,\n    );\n\n    const expandedContext = {\n      ...context,\n      ...traceparentData,\n      metadata: {\n        ...context.metadata,\n        dynamicSamplingContext: traceparentData && !dynamicSamplingContext ? {} : dynamicSamplingContext,\n      },\n      trimEnd: true,\n    };\n\n    const modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n\n    // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n    // from being sent to Sentry).\n    const finalContext = modifiedContext === undefined ? { ...expandedContext, sampled: false } : modifiedContext;\n\n    // If `beforeNavigate` set a custom name, record that fact\n    finalContext.metadata =\n      finalContext.name !== expandedContext.name\n        ? { ...finalContext.metadata, source: 'custom' }\n        : finalContext.metadata;\n\n    this._latestRouteName = finalContext.name;\n    this._latestRouteSource = finalContext.metadata && finalContext.metadata.source;\n\n    if (finalContext.sampled === false) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    const { location } = _types_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW;\n\n    const idleTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.startIdleTransaction)(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n      heartbeatInterval,\n    );\n\n    const scope = hub.getScope();\n\n    // If it's a pageload and there is a meta tag set\n    // use the traceparentData as the propagation context\n    if (isPageloadTransaction && traceparentData) {\n      scope.setPropagationContext(propagationContext);\n    } else {\n      // Navigation transactions should set a new propagation context based on the\n      // created idle transaction.\n      scope.setPropagationContext({\n        traceId: idleTransaction.traceId,\n        spanId: idleTransaction.spanId,\n        parentSpanId: idleTransaction.parentSpanId,\n        sampled: idleTransaction.sampled,\n      });\n    }\n\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      this._collectWebVitals();\n      (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_4__.addPerformanceEntries)(transaction);\n    });\n\n    return idleTransaction ;\n  }\n\n  /** Start listener for interaction transactions */\n   _registerInteractionListener() {\n    let inflightInteractionTransaction;\n    const registerInteractionTransaction = () => {\n      const { idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n      const op = 'ui.action.click';\n\n      const currentTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.getActiveTransaction)();\n      if (currentTransaction && currentTransaction.op && ['navigation', 'pageload'].includes(currentTransaction.op)) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(\n            `[Tracing] Did not create ${op} transaction because a pageload or navigation transaction is in progress.`,\n          );\n        return undefined;\n      }\n\n      if (inflightInteractionTransaction) {\n        inflightInteractionTransaction.setFinishReason('interactionInterrupted');\n        inflightInteractionTransaction.finish();\n        inflightInteractionTransaction = undefined;\n      }\n\n      if (!this._getCurrentHub) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`[Tracing] Did not create ${op} transaction because _getCurrentHub is invalid.`);\n        return undefined;\n      }\n\n      if (!this._latestRouteName) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n        return undefined;\n      }\n\n      const hub = this._getCurrentHub();\n      const { location } = _types_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW;\n\n      const context = {\n        name: this._latestRouteName,\n        op,\n        trimEnd: true,\n        metadata: {\n          source: this._latestRouteSource || 'url',\n        },\n      };\n\n      inflightInteractionTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.startIdleTransaction)(\n        hub,\n        context,\n        idleTimeout,\n        finalTimeout,\n        true,\n        { location }, // for use in the tracesSampler\n        heartbeatInterval,\n      );\n    };\n\n    ['click'].forEach(type => {\n      addEventListener(type, registerInteractionTransaction, { once: false, capture: true });\n    });\n  }\n}\n\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_10__.getDomElement)(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : undefined;\n}\n\n\n//# sourceMappingURL=browsertracing.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/browser/browsertracing.js?")},"./node_modules/@sentry-internal/tracing/esm/browser/instrument.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addClsInstrumentationHandler: () => (/* binding */ addClsInstrumentationHandler),\n/* harmony export */   addFidInstrumentationHandler: () => (/* binding */ addFidInstrumentationHandler),\n/* harmony export */   addLcpInstrumentationHandler: () => (/* binding */ addLcpInstrumentationHandler),\n/* harmony export */   addPerformanceInstrumentationHandler: () => (/* binding */ addPerformanceInstrumentationHandler)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/stacktrace.js\");\n/* harmony import */ var _web_vitals_getCLS_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./web-vitals/getCLS.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getCLS.js\");\n/* harmony import */ var _web_vitals_getFID_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./web-vitals/getFID.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getFID.js\");\n/* harmony import */ var _web_vitals_getLCP_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./web-vitals/getLCP.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getLCP.js\");\n/* harmony import */ var _web_vitals_lib_observe_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./web-vitals/lib/observe.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js\");\n\n\n\n\n\n\nconst handlers = {};\nconst instrumented = {};\n\nlet _previousCls;\nlet _previousFid;\nlet _previousLcp;\n\n/**\n * Add a callback that will be triggered when a CLS metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addClsInstrumentationHandler(callback) {\n  return addMetricObserver('cls', callback, instrumentCls, _previousCls);\n}\n\n/**\n * Add a callback that will be triggered when a LCP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addLcpInstrumentationHandler(callback) {\n  return addMetricObserver('lcp', callback, instrumentLcp, _previousLcp);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addFidInstrumentationHandler(callback) {\n  return addMetricObserver('fid', callback, instrumentFid, _previousFid);\n}\n\n/**\n * Add a callback that will be triggered when a performance observer is triggered,\n * and receives the entries of the observer.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addPerformanceInstrumentationHandler(\n  type,\n  callback,\n) {\n  addHandler(type, callback);\n\n  if (!instrumented[type]) {\n    instrumentPerformanceObserver(type);\n    instrumented[type] = true;\n  }\n\n  return getCleanupCallback(type, callback);\n}\n\n/** Trigger all handlers of a given type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = handlers[type];\n\n  if (!typeHandlers || !typeHandlers.length) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getFunctionName)(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nfunction instrumentCls() {\n  (0,_web_vitals_getCLS_js__WEBPACK_IMPORTED_MODULE_2__.onCLS)(metric => {\n    triggerHandlers('cls', {\n      metric,\n    });\n    _previousCls = metric;\n  });\n}\n\nfunction instrumentFid() {\n  (0,_web_vitals_getFID_js__WEBPACK_IMPORTED_MODULE_3__.onFID)(metric => {\n    triggerHandlers('fid', {\n      metric,\n    });\n    _previousFid = metric;\n  });\n}\n\nfunction instrumentLcp() {\n  (0,_web_vitals_getLCP_js__WEBPACK_IMPORTED_MODULE_4__.onLCP)(metric => {\n    triggerHandlers('lcp', {\n      metric,\n    });\n    _previousLcp = metric;\n  });\n}\n\nfunction addMetricObserver(\n  type,\n  callback,\n  instrumentFn,\n  previousValue,\n) {\n  addHandler(type, callback);\n\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n\n  if (previousValue) {\n    callback({ metric: previousValue });\n  }\n\n  return getCleanupCallback(type, callback);\n}\n\nfunction instrumentPerformanceObserver(type) {\n  const options = {};\n\n  // Special per-type options we want to use\n  if (type === 'event') {\n    options.durationThreshold = 0;\n  }\n\n  (0,_web_vitals_lib_observe_js__WEBPACK_IMPORTED_MODULE_5__.observe)(\n    type,\n    entries => {\n      triggerHandlers(type, { entries });\n    },\n    options,\n  );\n}\n\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n// Get a callback which can be called to remove the instrumentation handler\nfunction getCleanupCallback(type, callback) {\n  return () => {\n    const typeHandlers = handlers[type];\n\n    if (!typeHandlers) {\n      return;\n    }\n\n    const index = typeHandlers.indexOf(callback);\n    if (index !== -1) {\n      typeHandlers.splice(index, 1);\n    }\n  };\n}\n\n\n//# sourceMappingURL=instrument.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/browser/instrument.js?")},"./node_modules/@sentry-internal/tracing/esm/browser/metrics/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _addMeasureSpans: () => (/* binding */ _addMeasureSpans),\n/* harmony export */   _addResourceSpans: () => (/* binding */ _addResourceSpans),\n/* harmony export */   addPerformanceEntries: () => (/* binding */ addPerformanceEntries),\n/* harmony export */   startTrackingInteractions: () => (/* binding */ startTrackingInteractions),\n/* harmony export */   startTrackingLongTasks: () => (/* binding */ startTrackingLongTasks),\n/* harmony export */   startTrackingWebVitals: () => (/* binding */ startTrackingWebVitals)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/utils.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/browser.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _instrument_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../instrument.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/instrument.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n/* harmony import */ var _web_vitals_lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../web-vitals/lib/getVisibilityWatcher.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/metrics/utils.js\");\n\n\n\n\n\n\n\nconst MAX_INT_AS_BYTES = 2147483647;\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n  return time / 1000;\n}\n\nfunction getBrowserPerformanceAPI() {\n  // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n  return _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW && _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.addEventListener && _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance;\n}\n\nlet _performanceCursor = 0;\n\nlet _measurements = {};\nlet _lcpEntry;\nlet _clsEntry;\n\n/**\n * Start tracking web vitals\n *\n * @returns A function that forces web vitals collection\n */\nfunction startTrackingWebVitals() {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin) {\n    // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n    if (performance.mark) {\n      _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance.mark('sentry-tracing-init');\n    }\n    const fidCallback = _trackFID();\n    const clsCallback = _trackCLS();\n    const lcpCallback = _trackLCP();\n\n    return () => {\n      fidCallback();\n      clsCallback();\n      lcpCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\n/**\n * Start tracking long tasks.\n */\nfunction startTrackingLongTasks() {\n  (0,_instrument_js__WEBPACK_IMPORTED_MODULE_2__.addPerformanceInstrumentationHandler)('longtask', ({ entries }) => {\n    for (const entry of entries) {\n      const transaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getActiveTransaction)() ;\n      if (!transaction) {\n        return;\n      }\n      const startTime = msToSec((_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin ) + entry.startTime);\n      const duration = msToSec(entry.duration);\n\n      transaction.startChild({\n        description: 'Main UI thread blocked',\n        op: 'ui.long-task',\n        origin: 'auto.ui.browser.metrics',\n        startTimestamp: startTime,\n        endTimestamp: startTime + duration,\n      });\n    }\n  });\n}\n\n/**\n * Start tracking interaction events.\n */\nfunction startTrackingInteractions() {\n  (0,_instrument_js__WEBPACK_IMPORTED_MODULE_2__.addPerformanceInstrumentationHandler)('event', ({ entries }) => {\n    for (const entry of entries) {\n      const transaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getActiveTransaction)() ;\n      if (!transaction) {\n        return;\n      }\n\n      if (entry.name === 'click') {\n        const startTime = msToSec((_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin ) + entry.startTime);\n        const duration = msToSec(entry.duration);\n\n        transaction.startChild({\n          description: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.htmlTreeAsString)(entry.target),\n          op: `ui.interaction.${entry.name}`,\n          origin: 'auto.ui.browser.metrics',\n          startTimestamp: startTime,\n          endTimestamp: startTime + duration,\n        });\n      }\n    }\n  });\n}\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS() {\n  return (0,_instrument_js__WEBPACK_IMPORTED_MODULE_2__.addClsInstrumentationHandler)(({ metric }) => {\n    const entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry ;\n  });\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP() {\n  return (0,_instrument_js__WEBPACK_IMPORTED_MODULE_2__.addLcpInstrumentationHandler)(({ metric }) => {\n    const entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _lcpEntry = entry ;\n  });\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID() {\n  return (0,_instrument_js__WEBPACK_IMPORTED_MODULE_2__.addFidInstrumentationHandler)(({ metric }) => {\n    const entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    const timeOrigin = msToSec(_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin );\n    const startTime = msToSec(entry.startTime);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\n/** Add performance related spans to a transaction */\nfunction addPerformanceEntries(transaction) {\n  const performance = getBrowserPerformanceAPI();\n  if (!performance || !_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance.getEntries || !_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log('[Tracing] Adding & adjusting spans using Performance API');\n  const timeOrigin = msToSec(_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin);\n\n  const performanceEntries = performance.getEntries();\n\n  let responseStartTimestamp;\n  let requestStartTimestamp;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  performanceEntries.slice(_performanceCursor).forEach((entry) => {\n    const startTime = msToSec(entry.startTime);\n    const duration = msToSec(entry.duration);\n\n    if (transaction.op === 'navigation' && timeOrigin + startTime < transaction.startTimestamp) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(transaction, entry, timeOrigin);\n        responseStartTimestamp = timeOrigin + msToSec(entry.responseStart);\n        requestStartTimestamp = timeOrigin + msToSec(entry.requestStart);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        _addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        const firstHidden = (0,_web_vitals_lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_6__.getVisibilityWatcher)();\n        // Only report if the page wasn't hidden prior to the web vital.\n        const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        break;\n      }\n      case 'resource': {\n        const resourceName = (entry.name ).replace(_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location.origin, '');\n        _addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin);\n        break;\n      }\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(transaction);\n\n  // Measurements are only available for pageload transactions\n  if (transaction.op === 'pageload') {\n    // Generate TTFB (Time to First Byte), which measured as the time between the beginning of the transaction and the\n    // start of the response in milliseconds\n    if (typeof responseStartTimestamp === 'number') {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log('[Measurements] Adding TTFB');\n      _measurements['ttfb'] = {\n        value: (responseStartTimestamp - transaction.startTimestamp) * 1000,\n        unit: 'millisecond',\n      };\n\n      if (typeof requestStartTimestamp === 'number' && requestStartTimestamp <= responseStartTimestamp) {\n        // Capture the time spent making the request and receiving the first byte of the response.\n        // This is the time between the start of the request and the start of the response in milliseconds.\n        _measurements['ttfb.requestTime'] = {\n          value: (responseStartTimestamp - requestStartTimestamp) * 1000,\n          unit: 'millisecond',\n        };\n      }\n    }\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      if (!_measurements[name] || timeOrigin >= transaction.startTimestamp) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n      // to be adjusted to be relative to transaction.startTimestamp.\n      const oldValue = _measurements[name].value;\n      const measurementTimestamp = timeOrigin + msToSec(oldValue);\n\n      // normalizedValue should be in milliseconds\n      const normalizedValue = Math.abs((measurementTimestamp - transaction.startTimestamp) * 1000);\n      const delta = normalizedValue - oldValue;\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      _measurements[name].value = normalizedValue;\n    });\n\n    const fidMark = _measurements['mark.fid'];\n    if (fidMark && _measurements['fid']) {\n      // create span for FID\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_7__._startChild)(transaction, {\n        description: 'first input delay',\n        endTimestamp: fidMark.value + msToSec(_measurements['fid'].value),\n        op: 'ui.action',\n        origin: 'auto.ui.browser.metrics',\n        startTimestamp: fidMark.value,\n      });\n\n      // Delete mark.fid as we don't want it to be part of final payload\n      delete _measurements['mark.fid'];\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.keys(_measurements).forEach(measurementName => {\n      transaction.setMeasurement(\n        measurementName,\n        _measurements[measurementName].value,\n        _measurements[measurementName].unit,\n      );\n    });\n\n    _tagMetricInfo(transaction);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nfunction _addMeasureSpans(\n  transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  const measureStartTimestamp = timeOrigin + startTime;\n  const measureEndTimestamp = measureStartTimestamp + duration;\n\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_7__._startChild)(transaction, {\n    description: entry.name ,\n    endTimestamp: measureEndTimestamp,\n    op: entry.entryType ,\n    origin: 'auto.resource.browser.metrics',\n    startTimestamp: measureStartTimestamp,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addNavigationSpans(transaction, entry, timeOrigin) {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(transaction, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  event,\n  timeOrigin,\n  description,\n  eventEnd,\n) {\n  const end = eventEnd ? (entry[eventEnd] ) : (entry[`${event}End`] );\n  const start = entry[`${event}Start`] ;\n  if (!start || !end) {\n    return;\n  }\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_7__._startChild)(transaction, {\n    op: 'browser',\n    origin: 'auto.browser.browser.metrics',\n    description: description || event,\n    startTimestamp: timeOrigin + msToSec(start),\n    endTimestamp: timeOrigin + msToSec(end),\n  });\n}\n\n/** Create request and response related spans */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addRequest(transaction, entry, timeOrigin) {\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_7__._startChild)(transaction, {\n    op: 'browser',\n    origin: 'auto.browser.browser.metrics',\n    description: 'request',\n    startTimestamp: timeOrigin + msToSec(entry.requestStart ),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n  });\n\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_7__._startChild)(transaction, {\n    op: 'browser',\n    origin: 'auto.browser.browser.metrics',\n    description: 'response',\n    startTimestamp: timeOrigin + msToSec(entry.responseStart ),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n  });\n}\n\n/** Create resource-related spans */\nfunction _addResourceSpans(\n  transaction,\n  entry,\n  resourceName,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const data = {};\n  setResourceEntrySizeData(data, entry, 'transferSize', 'http.response_transfer_size');\n  setResourceEntrySizeData(data, entry, 'encodedBodySize', 'http.response_content_length');\n  setResourceEntrySizeData(data, entry, 'decodedBodySize', 'http.decoded_response_content_length');\n  if ('renderBlockingStatus' in entry) {\n    data['resource.render_blocking_status'] = entry.renderBlockingStatus;\n  }\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_7__._startChild)(transaction, {\n    description: resourceName,\n    endTimestamp,\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource.other',\n    origin: 'auto.resource.browser.metrics',\n    startTimestamp,\n    data,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(transaction) {\n  const navigator = _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator ;\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  const connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      transaction.setTag('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      transaction.setTag('connectionType', connection.type);\n    }\n\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.isMeasurementValue)(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n  }\n\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.isMeasurementValue)(navigator.deviceMemory)) {\n    transaction.setTag('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.isMeasurementValue)(navigator.hardwareConcurrency)) {\n    transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction _tagMetricInfo(transaction) {\n  if (_lcpEntry) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      transaction.setTag('lcp.element', (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.htmlTreeAsString)(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      transaction.setTag('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      transaction.setTag('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    transaction.setTag('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      transaction.setTag(`cls.source.${index + 1}`, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.htmlTreeAsString)(source.node)),\n    );\n  }\n}\n\nfunction setResourceEntrySizeData(\n  data,\n  entry,\n  key,\n  dataKey,\n) {\n  const entryVal = entry[key];\n  if (entryVal !== undefined && entryVal < MAX_INT_AS_BYTES) {\n    data[dataKey] = entryVal;\n  }\n}\n\n\n//# sourceMappingURL=index.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/browser/metrics/index.js?")},"./node_modules/@sentry-internal/tracing/esm/browser/metrics/utils.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _startChild: () => (/* binding */ _startChild),\n/* harmony export */   isMeasurementValue: () => (/* binding */ isMeasurementValue)\n/* harmony export */ });\n/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nfunction _startChild(transaction, { startTimestamp, ...ctx }) {\n  if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n    transaction.startTimestamp = startTimestamp;\n  }\n\n  return transaction.startChild({\n    startTimestamp,\n    ...ctx,\n  });\n}\n\n\n//# sourceMappingURL=utils.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/browser/metrics/utils.js?")},"./node_modules/@sentry-internal/tracing/esm/browser/request.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_TRACE_PROPAGATION_TARGETS: () => (/* binding */ DEFAULT_TRACE_PROPAGATION_TARGETS),\n/* harmony export */   defaultRequestInstrumentationOptions: () => (/* binding */ defaultRequestInstrumentationOptions),\n/* harmony export */   extractNetworkProtocol: () => (/* binding */ extractNetworkProtocol),\n/* harmony export */   instrumentOutgoingRequests: () => (/* binding */ instrumentOutgoingRequests),\n/* harmony export */   shouldAttachHeaders: () => (/* binding */ shouldAttachHeaders),\n/* harmony export */   xhrCallback: () => (/* binding */ xhrCallback)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/instrument/fetch.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/instrument/xhr.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/baggage.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _common_fetch_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/fetch.js */ \"./node_modules/@sentry-internal/tracing/esm/common/fetch.js\");\n/* harmony import */ var _instrument_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instrument.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/instrument.js\");\n\n\n\n\n\n/* eslint-disable max-lines */\n\nconst DEFAULT_TRACE_PROPAGATION_TARGETS = ['localhost', /^\\/(?!\\/)/];\n\n/** Options for Request Instrumentation */\n\nconst defaultRequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  enableHTTPTimings: true,\n  // TODO (v8): Remove this property\n  tracingOrigins: DEFAULT_TRACE_PROPAGATION_TARGETS,\n  tracePropagationTargets: DEFAULT_TRACE_PROPAGATION_TARGETS,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nfunction instrumentOutgoingRequests(_options) {\n  const {\n    traceFetch,\n    traceXHR,\n    // eslint-disable-next-line deprecation/deprecation\n    tracePropagationTargets,\n    // eslint-disable-next-line deprecation/deprecation\n    tracingOrigins,\n    shouldCreateSpanForRequest,\n    enableHTTPTimings,\n  } = {\n    traceFetch: defaultRequestInstrumentationOptions.traceFetch,\n    traceXHR: defaultRequestInstrumentationOptions.traceXHR,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_) => true;\n\n  // TODO(v8) Remove tracingOrigins here\n  // The only reason we're passing it in here is because this instrumentOutgoingRequests function is publicly exported\n  // and we don't want to break the API. We can remove it in v8.\n  const shouldAttachHeadersWithTargets = (url) =>\n    shouldAttachHeaders(url, tracePropagationTargets || tracingOrigins);\n\n  const spans = {};\n\n  if (traceFetch) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addFetchInstrumentationHandler)(handlerData => {\n      const createdSpan = (0,_common_fetch_js__WEBPACK_IMPORTED_MODULE_1__.instrumentFetchRequest)(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n\n  if (traceXHR) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.addXhrInstrumentationHandler)(handlerData => {\n      const createdSpan = xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n}\n\nfunction isPerformanceResourceTiming(entry) {\n  return (\n    entry.entryType === 'resource' &&\n    'initiatorType' in entry &&\n    typeof (entry ).nextHopProtocol === 'string' &&\n    (entry.initiatorType === 'fetch' || entry.initiatorType === 'xmlhttprequest')\n  );\n}\n\n/**\n * Creates a temporary observer to listen to the next fetch/xhr resourcing timings,\n * so that when timings hit their per-browser limit they don't need to be removed.\n *\n * @param span A span that has yet to be finished, must contain `url` on data.\n */\nfunction addHTTPTimings(span) {\n  const url = span.data.url;\n\n  if (!url) {\n    return;\n  }\n\n  const cleanup = (0,_instrument_js__WEBPACK_IMPORTED_MODULE_3__.addPerformanceInstrumentationHandler)('resource', ({ entries }) => {\n    entries.forEach(entry => {\n      if (isPerformanceResourceTiming(entry) && entry.name.endsWith(url)) {\n        const spanData = resourceTimingEntryToSpanData(entry);\n        spanData.forEach(data => span.setData(...data));\n        // In the next tick, clean this handler up\n        // We have to wait here because otherwise this cleans itself up before it is fully done\n        setTimeout(cleanup);\n      }\n    });\n  });\n}\n\n/**\n * Converts ALPN protocol ids to name and version.\n *\n * (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids)\n * @param nextHopProtocol PerformanceResourceTiming.nextHopProtocol\n */\nfunction extractNetworkProtocol(nextHopProtocol) {\n  let name = 'unknown';\n  let version = 'unknown';\n  let _name = '';\n  for (const char of nextHopProtocol) {\n    // http/1.1 etc.\n    if (char === '/') {\n      [name, version] = nextHopProtocol.split('/');\n      break;\n    }\n    // h2, h3 etc.\n    if (!isNaN(Number(char))) {\n      name = _name === 'h' ? 'http' : _name;\n      version = nextHopProtocol.split(_name)[1];\n      break;\n    }\n    _name += char;\n  }\n  if (_name === nextHopProtocol) {\n    // webrtc, ftp, etc.\n    name = _name;\n  }\n  return { name, version };\n}\n\nfunction getAbsoluteTime(time = 0) {\n  return ((_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.browserPerformanceTimeOrigin || performance.timeOrigin) + time) / 1000;\n}\n\nfunction resourceTimingEntryToSpanData(resourceTiming) {\n  const { name, version } = extractNetworkProtocol(resourceTiming.nextHopProtocol);\n\n  const timingSpanData = [];\n\n  timingSpanData.push(['network.protocol.version', version], ['network.protocol.name', name]);\n\n  if (!_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.browserPerformanceTimeOrigin) {\n    return timingSpanData;\n  }\n  return [\n    ...timingSpanData,\n    ['http.request.redirect_start', getAbsoluteTime(resourceTiming.redirectStart)],\n    ['http.request.fetch_start', getAbsoluteTime(resourceTiming.fetchStart)],\n    ['http.request.domain_lookup_start', getAbsoluteTime(resourceTiming.domainLookupStart)],\n    ['http.request.domain_lookup_end', getAbsoluteTime(resourceTiming.domainLookupEnd)],\n    ['http.request.connect_start', getAbsoluteTime(resourceTiming.connectStart)],\n    ['http.request.secure_connection_start', getAbsoluteTime(resourceTiming.secureConnectionStart)],\n    ['http.request.connection_end', getAbsoluteTime(resourceTiming.connectEnd)],\n    ['http.request.request_start', getAbsoluteTime(resourceTiming.requestStart)],\n    ['http.request.response_start', getAbsoluteTime(resourceTiming.responseStart)],\n    ['http.request.response_end', getAbsoluteTime(resourceTiming.responseEnd)],\n  ];\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * This was extracted from `instrumentOutgoingRequests` to make it easier to test shouldAttachHeaders.\n * We only export this fuction for testing purposes.\n */\nfunction shouldAttachHeaders(url, tracePropagationTargets) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.stringMatchesSomePattern)(url, tracePropagationTargets || DEFAULT_TRACE_PROPAGATION_TARGETS);\n}\n\n/**\n * Create and track xhr request spans\n *\n * @returns Span if a span was created, otherwise void.\n */\n// eslint-disable-next-line complexity\nfunction xhrCallback(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n) {\n  const xhr = handlerData.xhr;\n  const sentryXhrData = xhr && xhr[_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.SENTRY_XHR_DATA_KEY];\n\n  if (!(0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.hasTracingEnabled)() || !xhr || xhr.__sentry_own_request__ || !sentryXhrData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = shouldCreateSpan(sentryXhrData.url);\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span && sentryXhrData.status_code !== undefined) {\n      span.setHttpStatus(sentryXhrData.status_code);\n      span.finish();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_7__.getCurrentHub)();\n  const scope = hub.getScope();\n  const parentSpan = scope.getSpan();\n\n  const span =\n    shouldCreateSpanResult && parentSpan\n      ? parentSpan.startChild({\n          data: {\n            type: 'xhr',\n            'http.method': sentryXhrData.method,\n            url: sentryXhrData.url,\n          },\n          description: `${sentryXhrData.method} ${sentryXhrData.url}`,\n          op: 'http.client',\n          origin: 'auto.http.browser',\n        })\n      : undefined;\n\n  if (span) {\n    xhr.__sentry_xhr_span_id__ = span.spanId;\n    spans[xhr.__sentry_xhr_span_id__] = span;\n  }\n\n  if (xhr.setRequestHeader && shouldAttachHeaders(sentryXhrData.url)) {\n    if (span) {\n      const transaction = span && span.transaction;\n      const dynamicSamplingContext = transaction && transaction.getDynamicSamplingContext();\n      const sentryBaggageHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.dynamicSamplingContextToSentryBaggageHeader)(dynamicSamplingContext);\n      setHeaderOnXhr(xhr, span.toTraceparent(), sentryBaggageHeader);\n    } else {\n      const client = hub.getClient();\n      const { traceId, sampled, dsc } = scope.getPropagationContext();\n      const sentryTraceHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_9__.generateSentryTraceHeader)(traceId, undefined, sampled);\n      const dynamicSamplingContext =\n        dsc || (client ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_10__.getDynamicSamplingContextFromClient)(traceId, client, scope) : undefined);\n      const sentryBaggageHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.dynamicSamplingContextToSentryBaggageHeader)(dynamicSamplingContext);\n      setHeaderOnXhr(xhr, sentryTraceHeader, sentryBaggageHeader);\n    }\n  }\n\n  return span;\n}\n\nfunction setHeaderOnXhr(\n  xhr,\n  sentryTraceHeader,\n  sentryBaggageHeader,\n) {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    xhr.setRequestHeader('sentry-trace', sentryTraceHeader);\n    if (sentryBaggageHeader) {\n      // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n      // We can therefore simply set a baggage header without checking what was there before\n      // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      xhr.setRequestHeader(_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n  } catch (_) {\n    // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n  }\n}\n\n\n//# sourceMappingURL=request.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/browser/request.js?")},"./node_modules/@sentry-internal/tracing/esm/browser/router.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   instrumentRoutingWithDefaults: () => (/* binding */ instrumentRoutingWithDefaults)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/instrument/history.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n\n\n\n/**\n * Default function implementing pageload and navigation transactions\n */\nfunction instrumentRoutingWithDefaults(\n  customStartTransaction,\n  startTransactionOnPageLoad = true,\n  startTransactionOnLocationChange = true,\n) {\n  if (!_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW || !_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('Could not initialize routing instrumentation due to invalid location');\n    return;\n  }\n\n  let startingUrl = _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location.href;\n\n  let activeTransaction;\n  if (startTransactionOnPageLoad) {\n    activeTransaction = customStartTransaction({\n      name: _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location.pathname,\n      // pageload should always start at timeOrigin (and needs to be in s, not ms)\n      startTimestamp: _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.browserPerformanceTimeOrigin ? _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.browserPerformanceTimeOrigin / 1000 : undefined,\n      op: 'pageload',\n      origin: 'auto.pageload.browser',\n      metadata: { source: 'url' },\n    });\n  }\n\n  if (startTransactionOnLocationChange) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addHistoryInstrumentationHandler)(({ to, from }) => {\n      /**\n       * This early return is there to account for some cases where a navigation transaction starts right after\n       * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n       * create an uneccessary navigation transaction.\n       *\n       * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n       * only be caused in certain development environments where the usage of a hot module reloader is causing\n       * errors.\n       */\n      if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n        startingUrl = undefined;\n        return;\n      }\n\n      if (from !== to) {\n        startingUrl = undefined;\n        if (activeTransaction) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`[Tracing] Finishing current transaction with op: ${activeTransaction.op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeTransaction.finish();\n        }\n        activeTransaction = customStartTransaction({\n          name: _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location.pathname,\n          op: 'navigation',\n          origin: 'auto.navigation.browser',\n          metadata: { source: 'url' },\n        });\n      }\n    });\n  }\n}\n\n\n//# sourceMappingURL=router.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/browser/router.js?")},"./node_modules/@sentry-internal/tracing/esm/browser/types.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WINDOW: () => (/* binding */ WINDOW)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/worldwide.js");\n\n\nconst WINDOW = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n\n\n//# sourceMappingURL=types.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/browser/types.js?')},"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getCLS.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onCLS: () => (/* binding */ onCLS)\n/* harmony export */ });\n/* harmony import */ var _lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/bindReporter.js */ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/bindReporter.js");\n/* harmony import */ var _lib_initMetric_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/initMetric.js */ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/initMetric.js");\n/* harmony import */ var _lib_observe_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/observe.js */ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js");\n/* harmony import */ var _lib_onHidden_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/onHidden.js */ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js");\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Calculates the [CLS](https://web.dev/cls/) value for the current page and\n * calls the `callback` function once the value is ready to be reported, along\n * with all `layout-shift` performance entries that were used in the metric\n * value calculation. The reported value is a `double` (corresponding to a\n * [layout shift score](https://web.dev/cls/#layout-shift-score)).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** CLS should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it\'s been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page\'s visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nconst onCLS = (onReport) => {\n  const metric = (0,_lib_initMetric_js__WEBPACK_IMPORTED_MODULE_0__.initMetric)(\'CLS\', 0);\n  let report;\n\n  let sessionValue = 0;\n  let sessionEntries = [];\n\n  // const handleEntries = (entries: Metric[\'entries\']) => {\n  const handleEntries = (entries) => {\n    entries.forEach(entry => {\n      // Only count layout shifts without recent user input.\n      if (!entry.hadRecentInput) {\n        const firstSessionEntry = sessionEntries[0];\n        const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n        // If the entry occurred less than 1 second after the previous entry and\n        // less than 5 seconds after the first entry in the session, include the\n        // entry in the current session. Otherwise, start a new session.\n        if (\n          sessionValue &&\n          sessionEntries.length !== 0 &&\n          entry.startTime - lastSessionEntry.startTime < 1000 &&\n          entry.startTime - firstSessionEntry.startTime < 5000\n        ) {\n          sessionValue += entry.value;\n          sessionEntries.push(entry);\n        } else {\n          sessionValue = entry.value;\n          sessionEntries = [entry];\n        }\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (sessionValue > metric.value) {\n          metric.value = sessionValue;\n          metric.entries = sessionEntries;\n          if (report) {\n            report();\n          }\n        }\n      }\n    });\n  };\n\n  const po = (0,_lib_observe_js__WEBPACK_IMPORTED_MODULE_1__.observe)(\'layout-shift\', handleEntries);\n  if (po) {\n    report = (0,_lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_2__.bindReporter)(onReport, metric);\n\n    const stopListening = () => {\n      handleEntries(po.takeRecords() );\n      report(true);\n    };\n\n    (0,_lib_onHidden_js__WEBPACK_IMPORTED_MODULE_3__.onHidden)(stopListening);\n\n    return stopListening;\n  }\n\n  return;\n};\n\n\n//# sourceMappingURL=getCLS.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getCLS.js?')},"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getFID.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onFID: () => (/* binding */ onFID)\n/* harmony export */ });\n/* harmony import */ var _lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/bindReporter.js */ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/bindReporter.js");\n/* harmony import */ var _lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/getVisibilityWatcher.js */ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js");\n/* harmony import */ var _lib_initMetric_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/initMetric.js */ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/initMetric.js");\n/* harmony import */ var _lib_observe_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/observe.js */ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js");\n/* harmony import */ var _lib_onHidden_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/onHidden.js */ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js");\n\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Calculates the [FID](https://web.dev/fid/) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it\'s possible that it will not be reported for some page loads._\n */\nconst onFID = (onReport) => {\n  const visibilityWatcher = (0,_lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_0__.getVisibilityWatcher)();\n  const metric = (0,_lib_initMetric_js__WEBPACK_IMPORTED_MODULE_1__.initMetric)(\'FID\');\n  // eslint-disable-next-line prefer-const\n  let report;\n\n  const handleEntry = (entry) => {\n    // Only report if the page wasn\'t hidden prior to the first input.\n    if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      report(true);\n    }\n  };\n\n  const handleEntries = (entries) => {\n    (entries ).forEach(handleEntry);\n  };\n\n  const po = (0,_lib_observe_js__WEBPACK_IMPORTED_MODULE_2__.observe)(\'first-input\', handleEntries);\n  report = (0,_lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_3__.bindReporter)(onReport, metric);\n\n  if (po) {\n    (0,_lib_onHidden_js__WEBPACK_IMPORTED_MODULE_4__.onHidden)(() => {\n      handleEntries(po.takeRecords() );\n      po.disconnect();\n    }, true);\n  }\n};\n\n\n//# sourceMappingURL=getFID.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getFID.js?')},"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getLCP.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onLCP: () => (/* binding */ onLCP)\n/* harmony export */ });\n/* harmony import */ var _lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/bindReporter.js */ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/bindReporter.js");\n/* harmony import */ var _lib_getActivationStart_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/getActivationStart.js */ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getActivationStart.js");\n/* harmony import */ var _lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/getVisibilityWatcher.js */ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js");\n/* harmony import */ var _lib_initMetric_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/initMetric.js */ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/initMetric.js");\n/* harmony import */ var _lib_observe_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/observe.js */ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js");\n/* harmony import */ var _lib_onHidden_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/onHidden.js */ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js");\n\n\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst reportedMetricIDs = {};\n\n/**\n * Calculates the [LCP](https://web.dev/lcp/) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n */\nconst onLCP = (onReport) => {\n  const visibilityWatcher = (0,_lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_0__.getVisibilityWatcher)();\n  const metric = (0,_lib_initMetric_js__WEBPACK_IMPORTED_MODULE_1__.initMetric)(\'LCP\');\n  let report;\n\n  const handleEntries = (entries) => {\n    const lastEntry = entries[entries.length - 1] ;\n    if (lastEntry) {\n      // The startTime attribute returns the value of the renderTime if it is\n      // not 0, and the value of the loadTime otherwise. The activationStart\n      // reference is used because LCP should be relative to page activation\n      // rather than navigation start if the page was prerendered.\n      const value = Math.max(lastEntry.startTime - (0,_lib_getActivationStart_js__WEBPACK_IMPORTED_MODULE_2__.getActivationStart)(), 0);\n\n      // Only report if the page wasn\'t hidden prior to LCP.\n      if (value < visibilityWatcher.firstHiddenTime) {\n        metric.value = value;\n        metric.entries = [lastEntry];\n        report();\n      }\n    }\n  };\n\n  const po = (0,_lib_observe_js__WEBPACK_IMPORTED_MODULE_3__.observe)(\'largest-contentful-paint\', handleEntries);\n\n  if (po) {\n    report = (0,_lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_4__.bindReporter)(onReport, metric);\n\n    const stopListening = () => {\n      if (!reportedMetricIDs[metric.id]) {\n        handleEntries(po.takeRecords() );\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it\'s unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    [\'keydown\', \'click\'].forEach(type => {\n      addEventListener(type, stopListening, { once: true, capture: true });\n    });\n\n    (0,_lib_onHidden_js__WEBPACK_IMPORTED_MODULE_5__.onHidden)(stopListening, true);\n\n    return stopListening;\n  }\n\n  return;\n};\n\n\n//# sourceMappingURL=getLCP.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getLCP.js?')},"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/bindReporter.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bindReporter: () => (/* binding */ bindReporter)\n/* harmony export */ });\nconst bindReporter = (\n  callback,\n  metric,\n  reportAllChanges,\n) => {\n  let prevValue;\n  let delta;\n  return (forceReport) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n\n\n//# sourceMappingURL=bindReporter.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/bindReporter.js?")},"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/generateUniqueID.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateUniqueID: () => (/* binding */ generateUniqueID)\n/* harmony export */ });\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nconst generateUniqueID = () => {\n  return `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n\n\n//# sourceMappingURL=generateUniqueID.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/generateUniqueID.js?')},"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getActivationStart.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getActivationStart: () => (/* binding */ getActivationStart)\n/* harmony export */ });\n/* harmony import */ var _getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNavigationEntry.js */ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js");\n\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst getActivationStart = () => {\n  const navEntry = (0,_getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_0__.getNavigationEntry)();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n\n\n//# sourceMappingURL=getActivationStart.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getActivationStart.js?')},"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNavigationEntry: () => (/* binding */ getNavigationEntry)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../types.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst getNavigationEntryFromPerformanceTiming = () => {\n  // eslint-disable-next-line deprecation/deprecation\n  const timing = _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance.timing;\n  // eslint-disable-next-line deprecation/deprecation\n  const type = _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance.navigation.type;\n\n  const navigationEntry = {\n    entryType: 'navigation',\n    startTime: 0,\n    type: type == 2 ? 'back_forward' : type === 1 ? 'reload' : 'navigate',\n  };\n\n  for (const key in timing) {\n    if (key !== 'navigationStart' && key !== 'toJSON') {\n      // eslint-disable-next-line deprecation/deprecation\n      navigationEntry[key] = Math.max((timing[key ] ) - timing.navigationStart, 0);\n    }\n  }\n  return navigationEntry ;\n};\n\nconst getNavigationEntry = () => {\n  if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.__WEB_VITALS_POLYFILL__) {\n    return (\n      _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance &&\n      ((performance.getEntriesByType && performance.getEntriesByType('navigation')[0]) ||\n        getNavigationEntryFromPerformanceTiming())\n    );\n  } else {\n    return _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n  }\n};\n\n\n//# sourceMappingURL=getNavigationEntry.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js?")},"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getVisibilityWatcher: () => (/* binding */ getVisibilityWatcher)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../types.js */ "./node_modules/@sentry-internal/tracing/esm/browser/types.js");\n/* harmony import */ var _onHidden_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./onHidden.js */ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js");\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = () => {\n  // If the document is hidden and not prerendering, assume it was always\n  // hidden and the page was loaded in the background.\n  return _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.visibilityState === \'hidden\' && !_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.prerendering ? 0 : Infinity;\n};\n\nconst trackChanges = () => {\n  // Update the time if/when the document becomes hidden.\n  (0,_onHidden_js__WEBPACK_IMPORTED_MODULE_1__.onHidden)(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nconst getVisibilityWatcher = (\n\n) => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn\'t a perfect heuristic, but it\'s the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    firstHiddenTime = initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n\n\n//# sourceMappingURL=getVisibilityWatcher.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js?')},"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/initMetric.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initMetric: () => (/* binding */ initMetric)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../types.js */ "./node_modules/@sentry-internal/tracing/esm/browser/types.js");\n/* harmony import */ var _generateUniqueID_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./generateUniqueID.js */ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/generateUniqueID.js");\n/* harmony import */ var _getActivationStart_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getActivationStart.js */ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getActivationStart.js");\n/* harmony import */ var _getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNavigationEntry.js */ "./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js");\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst initMetric = (name, value) => {\n  const navEntry = (0,_getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_0__.getNavigationEntry)();\n  let navigationType = \'navigate\';\n\n  if (navEntry) {\n    if (_types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document.prerendering || (0,_getActivationStart_js__WEBPACK_IMPORTED_MODULE_2__.getActivationStart)() > 0) {\n      navigationType = \'prerender\';\n    } else {\n      navigationType = navEntry.type.replace(/_/g, \'-\') ;\n    }\n  }\n\n  return {\n    name,\n    value: typeof value === \'undefined\' ? -1 : value,\n    rating: \'good\', // Will be updated if the value changes.\n    delta: 0,\n    entries: [],\n    id: (0,_generateUniqueID_js__WEBPACK_IMPORTED_MODULE_3__.generateUniqueID)(),\n    navigationType,\n  };\n};\n\n\n//# sourceMappingURL=initMetric.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/initMetric.js?')},"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   observe: () => (/* binding */ observe)\n/* harmony export */ });\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nconst observe = (\n  type,\n  callback,\n  opts,\n) => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        callback(list.getEntries() );\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) ,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n\n\n//# sourceMappingURL=observe.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js?")},"./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onHidden: () => (/* binding */ onHidden)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../types.js */ \"./node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst onHidden = (cb, once) => {\n  const onHiddenOrPageHide = (event) => {\n    if (event.type === 'pagehide' || _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n  addEventListener('visibilitychange', onHiddenOrPageHide, true);\n  // Some browsers have buggy implementations of visibilitychange,\n  // so we use pagehide in addition, just to be safe.\n  addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n\n\n//# sourceMappingURL=onHidden.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js?")},"./node_modules/@sentry-internal/tracing/esm/common/fetch.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addTracingHeadersToFetchRequest: () => (/* binding */ addTracingHeadersToFetchRequest),\n/* harmony export */   instrumentFetchRequest: () => (/* binding */ instrumentFetchRequest)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/baggage.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/is.js\");\n\n\n\n/**\n * Create and track fetch request spans for usage in combination with `addInstrumentationHandler`.\n *\n * @returns Span if a span was created, otherwise void.\n */\nfunction instrumentFetchRequest(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n  spanOrigin = 'auto.http.browser',\n) {\n  if (!(0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.hasTracingEnabled)() || !handlerData.fetchData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = shouldCreateSpan(handlerData.fetchData.url);\n\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      if (handlerData.response) {\n        span.setHttpStatus(handlerData.response.status);\n\n        const contentLength =\n          handlerData.response && handlerData.response.headers && handlerData.response.headers.get('content-length');\n\n        if (contentLength) {\n          const contentLengthNum = parseInt(contentLength);\n          if (contentLengthNum > 0) {\n            span.setData('http.response_content_length', contentLengthNum);\n          }\n        }\n      } else if (handlerData.error) {\n        span.setStatus('internal_error');\n      }\n      span.finish();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)();\n  const scope = hub.getScope();\n  const client = hub.getClient();\n  const parentSpan = scope.getSpan();\n\n  const { method, url } = handlerData.fetchData;\n\n  const span =\n    shouldCreateSpanResult && parentSpan\n      ? parentSpan.startChild({\n          data: {\n            url,\n            type: 'fetch',\n            'http.method': method,\n          },\n          description: `${method} ${url}`,\n          op: 'http.client',\n          origin: spanOrigin,\n        })\n      : undefined;\n\n  if (span) {\n    handlerData.fetchData.__span = span.spanId;\n    spans[span.spanId] = span;\n  }\n\n  if (shouldAttachHeaders(handlerData.fetchData.url) && client) {\n    const request = handlerData.args[0];\n\n    // In case the user hasn't set the second argument of a fetch call we default it to `{}`.\n    handlerData.args[1] = handlerData.args[1] || {};\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const options = handlerData.args[1];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    options.headers = addTracingHeadersToFetchRequest(request, client, scope, options, span);\n  }\n\n  return span;\n}\n\n/**\n * Adds sentry-trace and baggage headers to the various forms of fetch headers\n */\nfunction addTracingHeadersToFetchRequest(\n  request, // unknown is actually type Request but we can't export DOM types from this package,\n  client,\n  scope,\n  options\n\n,\n  requestSpan,\n) {\n  const span = requestSpan || scope.getSpan();\n\n  const transaction = span && span.transaction;\n\n  const { traceId, sampled, dsc } = scope.getPropagationContext();\n\n  const sentryTraceHeader = span ? span.toTraceparent() : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.generateSentryTraceHeader)(traceId, undefined, sampled);\n  const dynamicSamplingContext = transaction\n    ? transaction.getDynamicSamplingContext()\n    : dsc\n    ? dsc\n    : (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getDynamicSamplingContextFromClient)(traceId, client, scope);\n\n  const sentryBaggageHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.dynamicSamplingContextToSentryBaggageHeader)(dynamicSamplingContext);\n\n  const headers =\n    typeof Request !== 'undefined' && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.isInstanceOf)(request, Request) ? (request ).headers : options.headers;\n\n  if (!headers) {\n    return { 'sentry-trace': sentryTraceHeader, baggage: sentryBaggageHeader };\n  } else if (typeof Headers !== 'undefined' && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.isInstanceOf)(headers, Headers)) {\n    const newHeaders = new Headers(headers );\n\n    newHeaders.append('sentry-trace', sentryTraceHeader);\n\n    if (sentryBaggageHeader) {\n      // If the same header is appended multiple times the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.append(_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n\n    return newHeaders ;\n  } else if (Array.isArray(headers)) {\n    const newHeaders = [...headers, ['sentry-trace', sentryTraceHeader]];\n\n    if (sentryBaggageHeader) {\n      // If there are multiple entries with the same key, the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.push([_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.BAGGAGE_HEADER_NAME, sentryBaggageHeader]);\n    }\n\n    return newHeaders ;\n  } else {\n    const existingBaggageHeader = 'baggage' in headers ? headers.baggage : undefined;\n    const newBaggageHeaders = [];\n\n    if (Array.isArray(existingBaggageHeader)) {\n      newBaggageHeaders.push(...existingBaggageHeader);\n    } else if (existingBaggageHeader) {\n      newBaggageHeaders.push(existingBaggageHeader);\n    }\n\n    if (sentryBaggageHeader) {\n      newBaggageHeaders.push(sentryBaggageHeader);\n    }\n\n    return {\n      ...(headers ),\n      'sentry-trace': sentryTraceHeader,\n      baggage: newBaggageHeaders.length > 0 ? newBaggageHeaders.join(',') : undefined,\n    };\n  }\n}\n\n\n//# sourceMappingURL=fetch.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/common/fetch.js?")},"./node_modules/@sentry-internal/tracing/esm/extensions.js":(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addExtensionMethods: () => (/* binding */ addExtensionMethods)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/node.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\n/**\n * @private\n */\nfunction _autoloadDatabaseIntegrations() {\n  const carrier = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getMainCarrier)();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n\n  const packageToIntegrationMapping = {\n    mongodb() {\n      const integration = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dynamicRequire)(module, './node/integrations/mongo')\n\n;\n      return new integration.Mongo();\n    },\n    mongoose() {\n      const integration = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dynamicRequire)(module, './node/integrations/mongo')\n\n;\n      return new integration.Mongo();\n    },\n    mysql() {\n      const integration = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dynamicRequire)(module, './node/integrations/mysql')\n\n;\n      return new integration.Mysql();\n    },\n    pg() {\n      const integration = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dynamicRequire)(module, './node/integrations/postgres')\n\n;\n      return new integration.Postgres();\n    },\n  };\n\n  const mappedPackages = Object.keys(packageToIntegrationMapping)\n    .filter(moduleName => !!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.loadModule)(moduleName))\n    .map(pkg => {\n      try {\n        return packageToIntegrationMapping[pkg]();\n      } catch (e) {\n        return undefined;\n      }\n    })\n    .filter(p => p) ;\n\n  if (mappedPackages.length > 0) {\n    carrier.__SENTRY__.integrations = [...(carrier.__SENTRY__.integrations || []), ...mappedPackages];\n  }\n}\n\n/**\n * This patches the global object and injects the Tracing extensions methods\n */\nfunction addExtensionMethods() {\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.addTracingExtensions)();\n\n  // Detect and automatically load specified integrations.\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isNodeEnv)()) {\n    _autoloadDatabaseIntegrations();\n  }\n}\n\n\n//# sourceMappingURL=extensions.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/extensions.js?")},"./node_modules/@sentry-internal/tracing/esm/node/integrations/apollo.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Apollo: () => (/* binding */ Apollo)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/node.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _utils_node_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/node-utils.js */ \"./node_modules/@sentry-internal/tracing/esm/node/integrations/utils/node-utils.js\");\n\n\n\n\n/** Tracing integration for Apollo */\nclass Apollo  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Apollo';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(\n    options = {\n      useNestjs: false,\n    },\n  ) {\n    this.name = Apollo.id;\n    this._useNest = !!options.useNestjs;\n  }\n\n  /** @inheritdoc */\n   loadDependency() {\n    if (this._useNest) {\n      this._module = this._module || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.loadModule)('@nestjs/graphql');\n    } else {\n      this._module = this._module || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.loadModule)('apollo-server-core');\n    }\n\n    return this._module;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if ((0,_utils_node_utils_js__WEBPACK_IMPORTED_MODULE_1__.shouldDisableAutoInstrumentation)(getCurrentHub)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('Apollo Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    if (this._useNest) {\n      const pkg = this.loadDependency();\n\n      if (!pkg) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error('Apollo-NestJS Integration was unable to require @nestjs/graphql package.');\n        return;\n      }\n\n      /**\n       * Iterate over resolvers of NestJS ResolversExplorerService before schemas are constructed.\n       */\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.fill)(\n        pkg.GraphQLFactory.prototype,\n        'mergeWithSchema',\n        function (orig) {\n          return function (\n\n            ...args\n          ) {\n            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.fill)(this.resolversExplorerService, 'explore', function (orig) {\n              return function () {\n                const resolvers = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.arrayify)(orig.call(this));\n\n                const instrumentedResolvers = instrumentResolvers(resolvers, getCurrentHub);\n\n                return instrumentedResolvers;\n              };\n            });\n\n            return orig.call(this, ...args);\n          };\n        },\n      );\n    } else {\n      const pkg = this.loadDependency();\n\n      if (!pkg) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error('Apollo Integration was unable to require apollo-server-core package.');\n        return;\n      }\n\n      /**\n       * Iterate over resolvers of the ApolloServer instance before schemas are constructed.\n       */\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.fill)(pkg.ApolloServerBase.prototype, 'constructSchema', function (orig) {\n        return function (\n\n) {\n          if (!this.config.resolvers) {\n            if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n              if (this.config.schema) {\n                _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(\n                  'Apollo integration is not able to trace `ApolloServer` instances constructed via `schema` property.' +\n                    'If you are using NestJS with Apollo, please use `Sentry.Integrations.Apollo({ useNestjs: true })` instead.',\n                );\n                _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn();\n              } else if (this.config.modules) {\n                _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(\n                  'Apollo integration is not able to trace `ApolloServer` instances constructed via `modules` property.',\n                );\n              }\n\n              _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error('Skipping tracing as no resolvers found on the `ApolloServer` instance.');\n            }\n\n            return orig.call(this);\n          }\n\n          const resolvers = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.arrayify)(this.config.resolvers);\n\n          this.config.resolvers = instrumentResolvers(resolvers, getCurrentHub);\n\n          return orig.call(this);\n        };\n      });\n    }\n  }\n}Apollo.__initStatic();\n\nfunction instrumentResolvers(resolvers, getCurrentHub) {\n  return resolvers.map(model => {\n    Object.keys(model).forEach(resolverGroupName => {\n      Object.keys(model[resolverGroupName]).forEach(resolverName => {\n        if (typeof model[resolverGroupName][resolverName] !== 'function') {\n          return;\n        }\n\n        wrapResolver(model, resolverGroupName, resolverName, getCurrentHub);\n      });\n    });\n\n    return model;\n  });\n}\n\n/**\n * Wrap a single resolver which can be a parent of other resolvers and/or db operations.\n */\nfunction wrapResolver(\n  model,\n  resolverGroupName,\n  resolverName,\n  getCurrentHub,\n) {\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.fill)(model[resolverGroupName], resolverName, function (orig) {\n    return function ( ...args) {\n      const scope = getCurrentHub().getScope();\n      const parentSpan = scope.getSpan();\n      const span = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._optionalChain)([parentSpan, 'optionalAccess', _2 => _2.startChild, 'call', _3 => _3({\n        description: `${resolverGroupName}.${resolverName}`,\n        op: 'graphql.resolve',\n        origin: 'auto.graphql.apollo',\n      })]);\n\n      const rv = orig.call(this, ...args);\n\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.isThenable)(rv)) {\n        return rv.then((res) => {\n          (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._optionalChain)([span, 'optionalAccess', _4 => _4.finish, 'call', _5 => _5()]);\n          return res;\n        });\n      }\n\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._optionalChain)([span, 'optionalAccess', _6 => _6.finish, 'call', _7 => _7()]);\n\n      return rv;\n    };\n  });\n}\n\n\n//# sourceMappingURL=apollo.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/node/integrations/apollo.js?")},"./node_modules/@sentry-internal/tracing/esm/node/integrations/express.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Express: () => (/* binding */ Express),\n/* harmony export */   extractOriginalRoute: () => (/* binding */ extractOriginalRoute),\n/* harmony export */   preventDuplicateSegments: () => (/* binding */ preventDuplicateSegments)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/url.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/requestdata.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _utils_node_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/node-utils.js */ \"./node_modules/@sentry-internal/tracing/esm/node/integrations/utils/node-utils.js\");\n\n\n\n\n/**\n * Express integration\n *\n * Provides an request and error handler for Express framework as well as tracing capabilities\n */\nclass Express  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Express';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Express App instance\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {\n    this.name = Express.id;\n    this._router = options.router || options.app;\n    this._methods = (Array.isArray(options.methods) ? options.methods : []).concat('use');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (!this._router) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('ExpressIntegration is missing an Express instance');\n      return;\n    }\n\n    if ((0,_utils_node_utils_js__WEBPACK_IMPORTED_MODULE_1__.shouldDisableAutoInstrumentation)(getCurrentHub)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('Express Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    instrumentMiddlewares(this._router, this._methods);\n    instrumentRouter(this._router );\n  }\n}Express.__initStatic();\n\n/**\n * Wraps original middleware function in a tracing call, which stores the info about the call as a span,\n * and finishes it once the middleware is done invoking.\n *\n * Express middlewares have 3 various forms, thus we have to take care of all of them:\n * // sync\n * app.use(function (req, res) { ... })\n * // async\n * app.use(function (req, res, next) { ... })\n * // error handler\n * app.use(function (err, req, res, next) { ... })\n *\n * They all internally delegate to the `router[method]` of the given application instance.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-explicit-any\nfunction wrap(fn, method) {\n  const arity = fn.length;\n\n  switch (arity) {\n    case 2: {\n      return function ( req, res) {\n        const transaction = res.__sentry_transaction;\n        if (transaction) {\n          const span = transaction.startChild({\n            description: fn.name,\n            op: `middleware.express.${method}`,\n            origin: 'auto.middleware.express',\n          });\n          res.once('finish', () => {\n            span.finish();\n          });\n        }\n        return fn.call(this, req, res);\n      };\n    }\n    case 3: {\n      return function (\n\n        req,\n        res,\n        next,\n      ) {\n        const transaction = res.__sentry_transaction;\n        const span = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([transaction, 'optionalAccess', _2 => _2.startChild, 'call', _3 => _3({\n          description: fn.name,\n          op: `middleware.express.${method}`,\n          origin: 'auto.middleware.express',\n        })]);\n        fn.call(this, req, res, function ( ...args) {\n          (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _4 => _4.finish, 'call', _5 => _5()]);\n          next.call(this, ...args);\n        });\n      };\n    }\n    case 4: {\n      return function (\n\n        err,\n        req,\n        res,\n        next,\n      ) {\n        const transaction = res.__sentry_transaction;\n        const span = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([transaction, 'optionalAccess', _6 => _6.startChild, 'call', _7 => _7({\n          description: fn.name,\n          op: `middleware.express.${method}`,\n          origin: 'auto.middleware.express',\n        })]);\n        fn.call(this, err, req, res, function ( ...args) {\n          (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n          next.call(this, ...args);\n        });\n      };\n    }\n    default: {\n      throw new Error(`Express middleware takes 2-4 arguments. Got: ${arity}`);\n    }\n  }\n}\n\n/**\n * Takes all the function arguments passed to the original `app` or `router` method, eg. `app.use` or `router.use`\n * and wraps every function, as well as array of functions with a call to our `wrap` method.\n * We have to take care of the arrays as well as iterate over all of the arguments,\n * as `app.use` can accept middlewares in few various forms.\n *\n * app.use([<path>], <fn>)\n * app.use([<path>], <fn>, ...<fn>)\n * app.use([<path>], ...<fn>[])\n */\nfunction wrapMiddlewareArgs(args, method) {\n  return args.map((arg) => {\n    if (typeof arg === 'function') {\n      return wrap(arg, method);\n    }\n\n    if (Array.isArray(arg)) {\n      return arg.map((a) => {\n        if (typeof a === 'function') {\n          return wrap(a, method);\n        }\n        return a;\n      });\n    }\n\n    return arg;\n  });\n}\n\n/**\n * Patches original router to utilize our tracing functionality\n */\nfunction patchMiddleware(router, method) {\n  const originalCallback = router[method];\n\n  router[method] = function (...args) {\n    return originalCallback.call(this, ...wrapMiddlewareArgs(args, method));\n  };\n\n  return router;\n}\n\n/**\n * Patches original router methods\n */\nfunction instrumentMiddlewares(router, methods = []) {\n  methods.forEach((method) => patchMiddleware(router, method));\n}\n\n/**\n * Patches the prototype of Express.Router to accumulate the resolved route\n * if a layer instance's `match` function was called and it returned a successful match.\n *\n * @see https://github.com/expressjs/express/blob/master/lib/router/index.js\n *\n * @param appOrRouter the router instance which can either be an app (i.e. top-level) or a (nested) router.\n */\nfunction instrumentRouter(appOrRouter) {\n  // This is how we can distinguish between app and routers\n  const isApp = 'settings' in appOrRouter;\n\n  // In case the app's top-level router hasn't been initialized yet, we have to do it now\n  if (isApp && appOrRouter._router === undefined && appOrRouter.lazyrouter) {\n    appOrRouter.lazyrouter();\n  }\n\n  const router = isApp ? appOrRouter._router : appOrRouter;\n\n  if (!router) {\n    /*\n    If we end up here, this means likely that this integration is used with Express 3 or Express 5.\n    For now, we don't support these versions (3 is very old and 5 is still in beta). To support Express 5,\n    we'd need to make more changes to the routing instrumentation because the router is no longer part of\n    the Express core package but maintained in its own package. The new router has different function\n    signatures and works slightly differently, demanding more changes than just taking the router from\n    `app.router` instead of `app._router`.\n    @see https://github.com/pillarjs/router\n\n    TODO: Proper Express 5 support\n    */\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.debug('Cannot instrument router for URL Parameterization (did not find a valid router).');\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.debug('Routing instrumentation is currently only supported in Express 4.');\n    return;\n  }\n\n  const routerProto = Object.getPrototypeOf(router) ;\n\n  const originalProcessParams = routerProto.process_params;\n  routerProto.process_params = function process_params(\n    layer,\n    called,\n    req,\n    res,\n    done,\n  ) {\n    // Base case: We're in the first part of the URL (thus we start with the root '/')\n    if (!req._reconstructedRoute) {\n      req._reconstructedRoute = '';\n    }\n\n    // If the layer's partial route has params, is a regex or an array, the route is stored in layer.route.\n    const { layerRoutePath, isRegex, isArray, numExtraSegments } = getLayerRoutePathInfo(layer);\n\n    if (layerRoutePath || isRegex || isArray) {\n      req._hasParameters = true;\n    }\n\n    // Otherwise, the hardcoded path (i.e. a partial route without params) is stored in layer.path\n    let partialRoute;\n\n    if (layerRoutePath) {\n      partialRoute = layerRoutePath;\n    } else {\n      /**\n       * prevent duplicate segment in _reconstructedRoute param if router match multiple routes before final path\n       * example:\n       * original url: /api/v1/1234\n       * prevent: /api/api/v1/:userId\n       * router structure\n       * /api -> middleware\n       * /api/v1 -> middleware\n       * /1234 -> endpoint with param :userId\n       * final _reconstructedRoute is /api/v1/:userId\n       */\n      partialRoute = preventDuplicateSegments(req.originalUrl, req._reconstructedRoute, layer.path) || '';\n    }\n\n    // Normalize the partial route so that it doesn't contain leading or trailing slashes\n    // and exclude empty or '*' wildcard routes.\n    // The exclusion of '*' routes is our best effort to not \"pollute\" the transaction name\n    // with interim handlers (e.g. ones that check authentication or do other middleware stuff).\n    // We want to end up with the parameterized URL of the incoming request without any extraneous path segments.\n    const finalPartialRoute = partialRoute\n      .split('/')\n      .filter(segment => segment.length > 0 && (isRegex || isArray || !segment.includes('*')))\n      .join('/');\n\n    // If we found a valid partial URL, we append it to the reconstructed route\n    if (finalPartialRoute && finalPartialRoute.length > 0) {\n      // If the partial route is from a regex route, we append a '/' to close the regex\n      req._reconstructedRoute += `/${finalPartialRoute}${isRegex ? '/' : ''}`;\n    }\n\n    // Now we check if we are in the \"last\" part of the route. We determine this by comparing the\n    // number of URL segments from the original URL to that of our reconstructed parameterized URL.\n    // If we've reached our final destination, we update the transaction name.\n    const urlLength = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getNumberOfUrlSegments)((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.stripUrlQueryAndFragment)(req.originalUrl || '')) + numExtraSegments;\n    const routeLength = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getNumberOfUrlSegments)(req._reconstructedRoute);\n\n    if (urlLength === routeLength) {\n      if (!req._hasParameters) {\n        if (req._reconstructedRoute !== req.originalUrl) {\n          req._reconstructedRoute = req.originalUrl ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.stripUrlQueryAndFragment)(req.originalUrl) : req.originalUrl;\n        }\n      }\n\n      const transaction = res.__sentry_transaction;\n      if (transaction && transaction.metadata.source !== 'custom') {\n        // If the request URL is '/' or empty, the reconstructed route will be empty.\n        // Therefore, we fall back to setting the final route to '/' in this case.\n        const finalRoute = req._reconstructedRoute || '/';\n\n        transaction.setName(...(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.extractPathForTransaction)(req, { path: true, method: true, customRoute: finalRoute }));\n      }\n    }\n\n    return originalProcessParams.call(this, layer, called, req, res, done);\n  };\n}\n\n/**\n * Recreate layer.route.path from layer.regexp and layer.keys.\n * Works until express.js used package path-to-regexp@0.1.7\n * or until layer.keys contain offset attribute\n *\n * @param layer the layer to extract the stringified route from\n *\n * @returns string in layer.route.path structure 'router/:pathParam' or undefined\n */\nconst extractOriginalRoute = (\n  path,\n  regexp,\n  keys,\n) => {\n  if (!path || !regexp || !keys || Object.keys(keys).length === 0 || !(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([keys, 'access', _10 => _10[0], 'optionalAccess', _11 => _11.offset])) {\n    return undefined;\n  }\n\n  const orderedKeys = keys.sort((a, b) => a.offset - b.offset);\n\n  // add d flag for getting indices from regexp result\n  const pathRegex = new RegExp(regexp, `${regexp.flags}d`);\n  /**\n   * use custom type cause of TS error with missing indices in RegExpExecArray\n   */\n  const execResult = pathRegex.exec(path) ;\n\n  if (!execResult || !execResult.indices) {\n    return undefined;\n  }\n  /**\n   * remove first match from regex cause contain whole layer.path\n   */\n  const [, ...paramIndices] = execResult.indices;\n\n  if (paramIndices.length !== orderedKeys.length) {\n    return undefined;\n  }\n  let resultPath = path;\n  let indexShift = 0;\n\n  /**\n   * iterate param matches from regexp.exec\n   */\n  paramIndices.forEach((item, index) => {\n    /** check if offsets is define because in some cases regex d flag returns undefined */\n    if (item) {\n      const [startOffset, endOffset] = item;\n      /**\n       * isolate part before param\n       */\n      const substr1 = resultPath.substring(0, startOffset - indexShift);\n      /**\n       * define paramName as replacement in format :pathParam\n       */\n      const replacement = `:${orderedKeys[index].name}`;\n\n      /**\n       * isolate part after param\n       */\n      const substr2 = resultPath.substring(endOffset - indexShift);\n\n      /**\n       * recreate original path but with param replacement\n       */\n      resultPath = substr1 + replacement + substr2;\n\n      /**\n       * calculate new index shift after resultPath was modified\n       */\n      indexShift = indexShift + (endOffset - startOffset - replacement.length);\n    }\n  });\n\n  return resultPath;\n};\n\n/**\n * Extracts and stringifies the layer's route which can either be a string with parameters (`users/:id`),\n * a RegEx (`/test/`) or an array of strings and regexes (`['/path1', /\\/path[2-5]/, /path/:id]`). Additionally\n * returns extra information about the route, such as if the route is defined as regex or as an array.\n *\n * @param layer the layer to extract the stringified route from\n *\n * @returns an object containing the stringified route, a flag determining if the route was a regex\n *          and the number of extra segments to the matched path that are additionally in the route,\n *          if the route was an array (defaults to 0).\n */\nfunction getLayerRoutePathInfo(layer) {\n  let lrp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([layer, 'access', _12 => _12.route, 'optionalAccess', _13 => _13.path]);\n\n  const isRegex = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.isRegExp)(lrp);\n  const isArray = Array.isArray(lrp);\n\n  if (!lrp) {\n    // parse node.js major version\n    // Next.js will complain if we directly use `proces.versions` here because of edge runtime.\n    const [major] = (_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.GLOBAL_OBJ ).process.versions.node.split('.').map(Number);\n\n    // allow call extractOriginalRoute only if node version support Regex d flag, node 16+\n    if (major >= 16) {\n      /**\n       * If lrp does not exist try to recreate original layer path from route regexp\n       */\n      lrp = extractOriginalRoute(layer.path, layer.regexp, layer.keys);\n    }\n  }\n\n  if (!lrp) {\n    return { isRegex, isArray, numExtraSegments: 0 };\n  }\n\n  const numExtraSegments = isArray\n    ? Math.max(getNumberOfArrayUrlSegments(lrp ) - (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getNumberOfUrlSegments)(layer.path || ''), 0)\n    : 0;\n\n  const layerRoutePath = getLayerRoutePathString(isArray, lrp);\n\n  return { layerRoutePath, isRegex, isArray, numExtraSegments };\n}\n\n/**\n * Returns the number of URL segments in an array of routes\n *\n * Example: ['/api/test', /\\/api\\/post[0-9]/, '/users/:id/details`] -> 7\n */\nfunction getNumberOfArrayUrlSegments(routesArray) {\n  return routesArray.reduce((accNumSegments, currentRoute) => {\n    // array members can be a RegEx -> convert them toString\n    return accNumSegments + (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getNumberOfUrlSegments)(currentRoute.toString());\n  }, 0);\n}\n\n/**\n * Extracts and returns the stringified version of the layers route path\n * Handles route arrays (by joining the paths together) as well as RegExp and normal\n * string values (in the latter case the toString conversion is technically unnecessary but\n * it doesn't hurt us either).\n */\nfunction getLayerRoutePathString(isArray, lrp) {\n  if (isArray) {\n    return (lrp ).map(r => r.toString()).join(',');\n  }\n  return lrp && lrp.toString();\n}\n\n/**\n * remove duplicate segment contain in layerPath against reconstructedRoute,\n * and return only unique segment that can be added into reconstructedRoute\n */\nfunction preventDuplicateSegments(\n  originalUrl,\n  reconstructedRoute,\n  layerPath,\n) {\n  // filter query params\n  const normalizeURL = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.stripUrlQueryAndFragment)(originalUrl || '');\n  const originalUrlSplit = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([normalizeURL, 'optionalAccess', _14 => _14.split, 'call', _15 => _15('/'), 'access', _16 => _16.filter, 'call', _17 => _17(v => !!v)]);\n  let tempCounter = 0;\n  const currentOffset = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([reconstructedRoute, 'optionalAccess', _18 => _18.split, 'call', _19 => _19('/'), 'access', _20 => _20.filter, 'call', _21 => _21(v => !!v), 'access', _22 => _22.length]) || 0;\n  const result = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([layerPath\n, 'optionalAccess', _23 => _23.split, 'call', _24 => _24('/')\n, 'access', _25 => _25.filter, 'call', _26 => _26(segment => {\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([originalUrlSplit, 'optionalAccess', _27 => _27[currentOffset + tempCounter]]) === segment) {\n        tempCounter += 1;\n        return true;\n      }\n      return false;\n    })\n, 'access', _28 => _28.join, 'call', _29 => _29('/')]);\n  return result;\n}\n\n\n//# sourceMappingURL=express.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/node/integrations/express.js?")},"./node_modules/@sentry-internal/tracing/esm/node/integrations/graphql.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GraphQL: () => (/* binding */ GraphQL)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/node.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _utils_node_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/node-utils.js */ \"./node_modules/@sentry-internal/tracing/esm/node/integrations/utils/node-utils.js\");\n\n\n\n\n/** Tracing integration for graphql package */\nclass GraphQL  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'GraphQL';}\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor() {\n    this.name = GraphQL.id;\n  }\n\n  /** @inheritdoc */\n   loadDependency() {\n    return (this._module = this._module || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.loadModule)('graphql/execution/execute.js'));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if ((0,_utils_node_utils_js__WEBPACK_IMPORTED_MODULE_1__.shouldDisableAutoInstrumentation)(getCurrentHub)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('GraphQL Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = this.loadDependency();\n\n    if (!pkg) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error('GraphQL Integration was unable to require graphql/execution package.');\n      return;\n    }\n\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.fill)(pkg, 'execute', function (orig) {\n      return function ( ...args) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope.getSpan();\n\n        const span = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._optionalChain)([parentSpan, 'optionalAccess', _2 => _2.startChild, 'call', _3 => _3({\n          description: 'execute',\n          op: 'graphql.execute',\n          origin: 'auto.graphql.graphql',\n        })]);\n\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._optionalChain)([scope, 'optionalAccess', _4 => _4.setSpan, 'call', _5 => _5(span)]);\n\n        const rv = orig.call(this, ...args);\n\n        if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.isThenable)(rv)) {\n          return rv.then((res) => {\n            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._optionalChain)([span, 'optionalAccess', _6 => _6.finish, 'call', _7 => _7()]);\n            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._optionalChain)([scope, 'optionalAccess', _8 => _8.setSpan, 'call', _9 => _9(parentSpan)]);\n\n            return res;\n          });\n        }\n\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._optionalChain)([span, 'optionalAccess', _10 => _10.finish, 'call', _11 => _11()]);\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._optionalChain)([scope, 'optionalAccess', _12 => _12.setSpan, 'call', _13 => _13(parentSpan)]);\n        return rv;\n      };\n    });\n  }\n}GraphQL.__initStatic();\n\n\n//# sourceMappingURL=graphql.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/node/integrations/graphql.js?")},"./node_modules/@sentry-internal/tracing/esm/node/integrations/lazy.js":(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   lazyLoadedNodePerformanceMonitoringIntegrations: () => (/* binding */ lazyLoadedNodePerformanceMonitoringIntegrations)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/node.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\nconst lazyLoadedNodePerformanceMonitoringIntegrations = [\n  () => {\n    const integration = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dynamicRequire)(module, './apollo')\n\n;\n    return new integration.Apollo();\n  },\n  () => {\n    const integration = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dynamicRequire)(module, './apollo')\n\n;\n    return new integration.Apollo({ useNestjs: true });\n  },\n  () => {\n    const integration = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dynamicRequire)(module, './graphql')\n\n;\n    return new integration.GraphQL();\n  },\n  () => {\n    const integration = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dynamicRequire)(module, './mongo')\n\n;\n    return new integration.Mongo();\n  },\n  () => {\n    const integration = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dynamicRequire)(module, './mongo')\n\n;\n    return new integration.Mongo({ mongoose: true });\n  },\n  () => {\n    const integration = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dynamicRequire)(module, './mysql')\n\n;\n    return new integration.Mysql();\n  },\n  () => {\n    const integration = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dynamicRequire)(module, './postgres')\n\n;\n    return new integration.Postgres();\n  },\n];\n\n\n//# sourceMappingURL=lazy.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/node/integrations/lazy.js?")},"./node_modules/@sentry-internal/tracing/esm/node/integrations/mongo.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Mongo: () => (/* binding */ Mongo)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/node.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _utils_node_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/node-utils.js */ \"./node_modules/@sentry-internal/tracing/esm/node/integrations/utils/node-utils.js\");\n\n\n\n\n// This allows us to use the same array for both defaults options and the type itself.\n// (note `as const` at the end to make it a union of string literal types (i.e. \"a\" | \"b\" | ... )\n// and not just a string[])\n\nconst OPERATIONS = [\n  'aggregate', // aggregate(pipeline, options, callback)\n  'bulkWrite', // bulkWrite(operations, options, callback)\n  'countDocuments', // countDocuments(query, options, callback)\n  'createIndex', // createIndex(fieldOrSpec, options, callback)\n  'createIndexes', // createIndexes(indexSpecs, options, callback)\n  'deleteMany', // deleteMany(filter, options, callback)\n  'deleteOne', // deleteOne(filter, options, callback)\n  'distinct', // distinct(key, query, options, callback)\n  'drop', // drop(options, callback)\n  'dropIndex', // dropIndex(indexName, options, callback)\n  'dropIndexes', // dropIndexes(options, callback)\n  'estimatedDocumentCount', // estimatedDocumentCount(options, callback)\n  'find', // find(query, options, callback)\n  'findOne', // findOne(query, options, callback)\n  'findOneAndDelete', // findOneAndDelete(filter, options, callback)\n  'findOneAndReplace', // findOneAndReplace(filter, replacement, options, callback)\n  'findOneAndUpdate', // findOneAndUpdate(filter, update, options, callback)\n  'indexes', // indexes(options, callback)\n  'indexExists', // indexExists(indexes, options, callback)\n  'indexInformation', // indexInformation(options, callback)\n  'initializeOrderedBulkOp', // initializeOrderedBulkOp(options, callback)\n  'insertMany', // insertMany(docs, options, callback)\n  'insertOne', // insertOne(doc, options, callback)\n  'isCapped', // isCapped(options, callback)\n  'mapReduce', // mapReduce(map, reduce, options, callback)\n  'options', // options(options, callback)\n  'parallelCollectionScan', // parallelCollectionScan(options, callback)\n  'rename', // rename(newName, options, callback)\n  'replaceOne', // replaceOne(filter, doc, options, callback)\n  'stats', // stats(options, callback)\n  'updateMany', // updateMany(filter, update, options, callback)\n  'updateOne', // updateOne(filter, update, options, callback)\n] ;\n\n// All of the operations above take `options` and `callback` as their final parameters, but some of them\n// take additional parameters as well. For those operations, this is a map of\n// { <operation name>:  [<names of additional parameters>] }, as a way to know what to call the operation's\n// positional arguments when we add them to the span's `data` object later\nconst OPERATION_SIGNATURES\n\n = {\n  // aggregate intentionally not included because `pipeline` arguments are too complex to serialize well\n  // see https://github.com/getsentry/sentry-javascript/pull/3102\n  bulkWrite: ['operations'],\n  countDocuments: ['query'],\n  createIndex: ['fieldOrSpec'],\n  createIndexes: ['indexSpecs'],\n  deleteMany: ['filter'],\n  deleteOne: ['filter'],\n  distinct: ['key', 'query'],\n  dropIndex: ['indexName'],\n  find: ['query'],\n  findOne: ['query'],\n  findOneAndDelete: ['filter'],\n  findOneAndReplace: ['filter', 'replacement'],\n  findOneAndUpdate: ['filter', 'update'],\n  indexExists: ['indexes'],\n  insertMany: ['docs'],\n  insertOne: ['doc'],\n  mapReduce: ['map', 'reduce'],\n  rename: ['newName'],\n  replaceOne: ['filter', 'doc'],\n  updateMany: ['filter', 'update'],\n  updateOne: ['filter', 'update'],\n};\n\nfunction isCursor(maybeCursor) {\n  return maybeCursor && typeof maybeCursor === 'object' && maybeCursor.once && typeof maybeCursor.once === 'function';\n}\n\n/** Tracing integration for mongo package */\nclass Mongo  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Mongo';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {\n    this.name = Mongo.id;\n    this._operations = Array.isArray(options.operations) ? options.operations : (OPERATIONS );\n    this._describeOperations = 'describeOperations' in options ? options.describeOperations : true;\n    this._useMongoose = !!options.useMongoose;\n  }\n\n  /** @inheritdoc */\n   loadDependency() {\n    const moduleName = this._useMongoose ? 'mongoose' : 'mongodb';\n    return (this._module = this._module || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.loadModule)(moduleName));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if ((0,_utils_node_utils_js__WEBPACK_IMPORTED_MODULE_1__.shouldDisableAutoInstrumentation)(getCurrentHub)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('Mongo Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = this.loadDependency();\n\n    if (!pkg) {\n      const moduleName = this._useMongoose ? 'mongoose' : 'mongodb';\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error(`Mongo Integration was unable to require \\`${moduleName}\\` package.`);\n      return;\n    }\n\n    this._instrumentOperations(pkg.Collection, this._operations, getCurrentHub);\n  }\n\n  /**\n   * Patches original collection methods\n   */\n   _instrumentOperations(collection, operations, getCurrentHub) {\n    operations.forEach((operation) => this._patchOperation(collection, operation, getCurrentHub));\n  }\n\n  /**\n   * Patches original collection to utilize our tracing functionality\n   */\n   _patchOperation(collection, operation, getCurrentHub) {\n    if (!(operation in collection.prototype)) return;\n\n    const getSpanContext = this._getSpanContextFromOperationArguments.bind(this);\n\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.fill)(collection.prototype, operation, function (orig) {\n      return function ( ...args) {\n        const lastArg = args[args.length - 1];\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope.getSpan();\n\n        // Check if the operation was passed a callback. (mapReduce requires a different check, as\n        // its (non-callback) arguments can also be functions.)\n        if (typeof lastArg !== 'function' || (operation === 'mapReduce' && args.length === 2)) {\n          const span = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._optionalChain)([parentSpan, 'optionalAccess', _2 => _2.startChild, 'call', _3 => _3(getSpanContext(this, operation, args))]);\n          const maybePromiseOrCursor = orig.call(this, ...args);\n\n          if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.isThenable)(maybePromiseOrCursor)) {\n            return maybePromiseOrCursor.then((res) => {\n              (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._optionalChain)([span, 'optionalAccess', _4 => _4.finish, 'call', _5 => _5()]);\n              return res;\n            });\n          }\n          // If the operation returns a Cursor\n          // we need to attach a listener to it to finish the span when the cursor is closed.\n          else if (isCursor(maybePromiseOrCursor)) {\n            const cursor = maybePromiseOrCursor ;\n\n            try {\n              cursor.once('close', () => {\n                (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._optionalChain)([span, 'optionalAccess', _6 => _6.finish, 'call', _7 => _7()]);\n              });\n            } catch (e) {\n              // If the cursor is already closed, `once` will throw an error. In that case, we can\n              // finish the span immediately.\n              (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._optionalChain)([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n            }\n\n            return cursor;\n          } else {\n            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._optionalChain)([span, 'optionalAccess', _10 => _10.finish, 'call', _11 => _11()]);\n            return maybePromiseOrCursor;\n          }\n        }\n\n        const span = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._optionalChain)([parentSpan, 'optionalAccess', _12 => _12.startChild, 'call', _13 => _13(getSpanContext(this, operation, args.slice(0, -1)))]);\n\n        return orig.call(this, ...args.slice(0, -1), function (err, result) {\n          (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._optionalChain)([span, 'optionalAccess', _14 => _14.finish, 'call', _15 => _15()]);\n          lastArg(err, result);\n        });\n      };\n    });\n  }\n\n  /**\n   * Form a SpanContext based on the user input to a given operation.\n   */\n   _getSpanContextFromOperationArguments(\n    collection,\n    operation,\n    args,\n  ) {\n    const data = {\n      'db.system': 'mongodb',\n      'db.name': collection.dbName,\n      'db.operation': operation,\n      'db.mongodb.collection': collection.collectionName,\n    };\n    const spanContext = {\n      op: 'db',\n      // TODO v8: Use `${collection.collectionName}.${operation}`\n      origin: 'auto.db.mongo',\n      description: operation,\n      data,\n    };\n\n    // If the operation takes no arguments besides `options` and `callback`, or if argument\n    // collection is disabled for this operation, just return early.\n    const signature = OPERATION_SIGNATURES[operation];\n    const shouldDescribe = Array.isArray(this._describeOperations)\n      ? this._describeOperations.includes(operation)\n      : this._describeOperations;\n\n    if (!signature || !shouldDescribe) {\n      return spanContext;\n    }\n\n    try {\n      // Special case for `mapReduce`, as the only one accepting functions as arguments.\n      if (operation === 'mapReduce') {\n        const [map, reduce] = args ;\n        data[signature[0]] = typeof map === 'string' ? map : map.name || '<anonymous>';\n        data[signature[1]] = typeof reduce === 'string' ? reduce : reduce.name || '<anonymous>';\n      } else {\n        for (let i = 0; i < signature.length; i++) {\n          data[`db.mongodb.${signature[i]}`] = JSON.stringify(args[i]);\n        }\n      }\n    } catch (_oO) {\n      // no-empty\n    }\n\n    return spanContext;\n  }\n}Mongo.__initStatic();\n\n\n//# sourceMappingURL=mongo.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/node/integrations/mongo.js?")},"./node_modules/@sentry-internal/tracing/esm/node/integrations/mysql.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Mysql: () => (/* binding */ Mysql)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/node.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _utils_node_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/node-utils.js */ \"./node_modules/@sentry-internal/tracing/esm/node/integrations/utils/node-utils.js\");\n\n\n\n\n/** Tracing integration for node-mysql package */\nclass Mysql  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Mysql';}\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor() {\n    this.name = Mysql.id;\n  }\n\n  /** @inheritdoc */\n   loadDependency() {\n    return (this._module = this._module || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.loadModule)('mysql/lib/Connection.js'));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if ((0,_utils_node_utils_js__WEBPACK_IMPORTED_MODULE_1__.shouldDisableAutoInstrumentation)(getCurrentHub)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('Mysql Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = this.loadDependency();\n\n    if (!pkg) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error('Mysql Integration was unable to require `mysql` package.');\n      return;\n    }\n\n    let mySqlConfig = undefined;\n\n    try {\n      pkg.prototype.connect = new Proxy(pkg.prototype.connect, {\n        apply(wrappingTarget, thisArg, args) {\n          if (!mySqlConfig) {\n            mySqlConfig = thisArg.config;\n          }\n          return wrappingTarget.apply(thisArg, args);\n        },\n      });\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error('Mysql Integration was unable to instrument `mysql` config.');\n    }\n\n    function spanDataFromConfig() {\n      if (!mySqlConfig) {\n        return {};\n      }\n      return {\n        'server.address': mySqlConfig.host,\n        'server.port': mySqlConfig.port,\n        'db.user': mySqlConfig.user,\n      };\n    }\n\n    function finishSpan(span) {\n      if (!span || span.endTimestamp) {\n        return;\n      }\n\n      const data = spanDataFromConfig();\n      Object.keys(data).forEach(key => {\n        span.setData(key, data[key]);\n      });\n\n      span.finish();\n    }\n\n    // The original function will have one of these signatures:\n    //    function (callback) => void\n    //    function (options, callback) => void\n    //    function (options, values, callback) => void\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.fill)(pkg, 'createQuery', function (orig) {\n      return function ( options, values, callback) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope.getSpan();\n\n        const span = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__._optionalChain)([parentSpan, 'optionalAccess', _2 => _2.startChild, 'call', _3 => _3({\n          description: typeof options === 'string' ? options : (options ).sql,\n          op: 'db',\n          origin: 'auto.db.mysql',\n          data: {\n            'db.system': 'mysql',\n          },\n        })]);\n\n        if (typeof callback === 'function') {\n          return orig.call(this, options, values, function (err, result, fields) {\n            finishSpan(span);\n            callback(err, result, fields);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, options, function (err, result, fields) {\n            finishSpan(span);\n            values(err, result, fields);\n          });\n        }\n\n        // streaming, no callback!\n        const query = orig.call(this, options, values) ;\n\n        query.on('end', () => {\n          finishSpan(span);\n        });\n\n        return query;\n      };\n    });\n  }\n}Mysql.__initStatic();\n\n\n//# sourceMappingURL=mysql.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/node/integrations/mysql.js?")},"./node_modules/@sentry-internal/tracing/esm/node/integrations/postgres.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Postgres: () => (/* binding */ Postgres)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/node.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _utils_node_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/node-utils.js */ \"./node_modules/@sentry-internal/tracing/esm/node/integrations/utils/node-utils.js\");\n\n\n\n\n/** Tracing integration for node-postgres package */\nclass Postgres  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Postgres';}\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor(options = {}) {\n    this.name = Postgres.id;\n    this._usePgNative = !!options.usePgNative;\n    this._module = options.module;\n  }\n\n  /** @inheritdoc */\n   loadDependency() {\n    return (this._module = this._module || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.loadModule)('pg'));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if ((0,_utils_node_utils_js__WEBPACK_IMPORTED_MODULE_1__.shouldDisableAutoInstrumentation)(getCurrentHub)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('Postgres Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = this.loadDependency();\n\n    if (!pkg) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error('Postgres Integration was unable to require `pg` package.');\n      return;\n    }\n\n    const Client = this._usePgNative ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([pkg, 'access', _2 => _2.native, 'optionalAccess', _3 => _3.Client]) : pkg.Client;\n\n    if (!Client) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error(\"Postgres Integration was unable to access 'pg-native' bindings.\");\n      return;\n    }\n\n    /**\n     * function (query, callback) => void\n     * function (query, params, callback) => void\n     * function (query) => Promise\n     * function (query, params) => Promise\n     * function (pg.Cursor) => pg.Cursor\n     */\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.fill)(Client.prototype, 'query', function (orig) {\n      return function ( config, values, callback) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope.getSpan();\n\n        const data = {\n          'db.system': 'postgresql',\n        };\n\n        try {\n          if (this.database) {\n            data['db.name'] = this.database;\n          }\n          if (this.host) {\n            data['server.address'] = this.host;\n          }\n          if (this.port) {\n            data['server.port'] = this.port;\n          }\n          if (this.user) {\n            data['db.user'] = this.user;\n          }\n        } catch (e) {\n          // ignore\n        }\n\n        const span = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([parentSpan, 'optionalAccess', _4 => _4.startChild, 'call', _5 => _5({\n          description: typeof config === 'string' ? config : (config ).text,\n          op: 'db',\n          origin: 'auto.db.postgres',\n          data,\n        })]);\n\n        if (typeof callback === 'function') {\n          return orig.call(this, config, values, function (err, result) {\n            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([span, 'optionalAccess', _6 => _6.finish, 'call', _7 => _7()]);\n            callback(err, result);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, config, function (err, result) {\n            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n            values(err, result);\n          });\n        }\n\n        const rv = typeof values !== 'undefined' ? orig.call(this, config, values) : orig.call(this, config);\n\n        if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.isThenable)(rv)) {\n          return rv.then((res) => {\n            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([span, 'optionalAccess', _10 => _10.finish, 'call', _11 => _11()]);\n            return res;\n          });\n        }\n\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([span, 'optionalAccess', _12 => _12.finish, 'call', _13 => _13()]);\n        return rv;\n      };\n    });\n  }\n}Postgres.__initStatic();\n\n\n//# sourceMappingURL=postgres.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/node/integrations/postgres.js?")},"./node_modules/@sentry-internal/tracing/esm/node/integrations/prisma.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Prisma: () => (/* binding */ Prisma)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _utils_node_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/node-utils.js */ \"./node_modules/@sentry-internal/tracing/esm/node/integrations/utils/node-utils.js\");\n\n\n\n\nfunction isValidPrismaClient(possibleClient) {\n  return !!possibleClient && !!(possibleClient )['$use'];\n}\n\n/** Tracing integration for @prisma/client package */\nclass Prisma  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Prisma';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {\n    this.name = Prisma.id;\n\n    // We instrument the PrismaClient inside the constructor and not inside `setupOnce` because in some cases of server-side\n    // bundling (Next.js) multiple Prisma clients can be instantiated, even though users don't intend to. When instrumenting\n    // in setupOnce we can only ever instrument one client.\n    // https://github.com/getsentry/sentry-javascript/issues/7216#issuecomment-1602375012\n    // In the future we might explore providing a dedicated PrismaClient middleware instead of this hack.\n    if (isValidPrismaClient(options.client) && !options.client._sentryInstrumented) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addNonEnumerableProperty)(options.client , '_sentryInstrumented', true);\n\n      const clientData = {};\n      try {\n        const engineConfig = (options.client )._engineConfig;\n        if (engineConfig) {\n          const { activeProvider, clientVersion } = engineConfig;\n          if (activeProvider) {\n            clientData['db.system'] = activeProvider;\n          }\n          if (clientVersion) {\n            clientData['db.prisma.version'] = clientVersion;\n          }\n        }\n      } catch (e) {\n        // ignore\n      }\n\n      options.client.$use((params, next) => {\n        if ((0,_utils_node_utils_js__WEBPACK_IMPORTED_MODULE_1__.shouldDisableAutoInstrumentation)(_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getCurrentHub)) {\n          return next(params);\n        }\n\n        const action = params.action;\n        const model = params.model;\n\n        return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.trace)(\n          {\n            name: model ? `${model} ${action}` : action,\n            op: 'db.prisma',\n            origin: 'auto.db.prisma',\n            data: { ...clientData, 'db.operation': action },\n          },\n          () => next(params),\n        );\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.warn('Unsupported Prisma client provided to PrismaIntegration. Provided client:', options.client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    // Noop - here for backwards compatibility\n  }\n} Prisma.__initStatic();\n\n\n//# sourceMappingURL=prisma.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/node/integrations/prisma.js?")},"./node_modules/@sentry-internal/tracing/esm/node/integrations/utils/node-utils.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   shouldDisableAutoInstrumentation: () => (/* binding */ shouldDisableAutoInstrumentation)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n\n\n/**\n * Check if Sentry auto-instrumentation should be disabled.\n *\n * @param getCurrentHub A method to fetch the current hub\n * @returns boolean\n */\nfunction shouldDisableAutoInstrumentation(getCurrentHub) {\n  const clientOptions = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([getCurrentHub, 'call', _ => _(), 'access', _2 => _2.getClient, 'call', _3 => _3(), 'optionalAccess', _4 => _4.getOptions, 'call', _5 => _5()]);\n  const instrumenter = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([clientOptions, 'optionalAccess', _6 => _6.instrumenter]) || 'sentry';\n\n  return instrumenter !== 'sentry';\n}\n\n\n//# sourceMappingURL=node-utils.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry-internal/tracing/esm/node/integrations/utils/node-utils.js?")},"./node_modules/@sentry/core/esm/api.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnvelopeEndpointWithUrlEncodedAuth: () => (/* binding */ getEnvelopeEndpointWithUrlEncodedAuth),\n/* harmony export */   getReportDialogEndpoint: () => (/* binding */ getReportDialogEndpoint)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/dsn.js\");\n\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.urlEncode)({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions = {} ,\n) {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  const dsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.makeDsn)(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dsnToString)(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\n\n//# sourceMappingURL=api.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/api.js?")},"./node_modules/@sentry/core/esm/baseclient.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseClient: () => (/* binding */ BaseClient)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/dsn.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/syncpromise.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/error.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./api.js */ \"./node_modules/@sentry/core/esm/api.js\");\n/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./envelope.js */ \"./node_modules/@sentry/core/esm/envelope.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./integration.js */ \"./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./session.js */ \"./node_modules/@sentry/core/esm/session.js\");\n/* harmony import */ var _tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./tracing/dynamicSamplingContext.js */ \"./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/prepareEvent.js */ \"./node_modules/@sentry/core/esm/utils/prepareEvent.js\");\n\n\n\n\n\n\n\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /** Options passed to the SDK. */\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n\n  /** Array of set up integrations. */\n\n  /** Indicates whether this client's integrations have been set up. */\n\n  /** Number of calls being processed */\n\n  /** Holds flushable  */\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {\n    this._options = options;\n    this._integrations = {};\n    this._integrationsInitialized = false;\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.makeDsn)(options.dsn);\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = (0,_api_js__WEBPACK_IMPORTED_MODULE_2__.getEnvelopeEndpointWithUrlEncodedAuth)(this._dsn, options);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   captureException(exception, hint, scope) {\n    // ensure we haven't captured this very object before\n    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.checkOrSetAlreadyCaught)(exception)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n    scope,\n  ) {\n    let eventId = hint && hint.event_id;\n\n    const promisedEvent = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.isPrimitive)(message)\n      ? this.eventFromMessage(String(message), level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.checkOrSetAlreadyCaught)(hint.originalException)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!(typeof session.release === 'string')) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_5__.updateSession)(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n   getSdkMetadata() {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    const transport = this._transport;\n    if (transport) {\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.resolvedSyncPromise)(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n   getEventProcessors() {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n   addEventProcessor(eventProcessor) {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /**\n   * Sets up the integrations\n   */\n   setupIntegrations(forceInitialize) {\n    if ((forceInitialize && !this._integrationsInitialized) || (this._isEnabled() && !this._integrationsInitialized)) {\n      this._integrations = (0,_integration_js__WEBPACK_IMPORTED_MODULE_7__.setupIntegrations)(this, this._options.integrations);\n      this._integrationsInitialized = true;\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   */\n   getIntegrationById(integrationId) {\n    return this._integrations[integrationId];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    try {\n      return (this._integrations[integration.id] ) || null;\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addIntegration(integration) {\n    (0,_integration_js__WEBPACK_IMPORTED_MODULE_7__.setupIntegration)(this, integration, this._integrations);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = (0,_envelope_js__WEBPACK_IMPORTED_MODULE_8__.createEventEnvelope)(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_9__.addItemToEnvelope)(\n        env,\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_9__.createAttachmentEnvelopeItem)(\n          attachment,\n          this._options.transportOptions && this._options.transportOptions.textEncoder,\n        ),\n      );\n    }\n\n    const promise = this._sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    const env = (0,_envelope_js__WEBPACK_IMPORTED_MODULE_8__.createSessionEnvelope)(session, this._dsn, this._options._metadata, this._options.tunnel);\n    void this._sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category, _event) {\n    // Note: we use `event` in replay, where we overwrite this hook.\n\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   on(hook, callback) {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-expect-error We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   emit(hook, ...rest) {\n    if (this._hooks[hook]) {\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_5__.updateSession)(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.SyncPromise(resolve => {\n      let ticked = 0;\n      const tick = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(event, hint, scope) {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    return (0,_utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_10__.prepareEvent)(options, event, hint, scope, this).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      // If a trace context is not set on the event, we use the propagationContext set on the event to\n      // generate a trace context. If the propagationContext does not have a dynamic sampling context, we\n      // also generate one for it.\n      const { propagationContext } = evt.sdkProcessingMetadata || {};\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext ;\n        evt.contexts = {\n          trace: {\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          },\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : (0,_tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_11__.getDynamicSamplingContextFromClient)(trace_id, this, scope);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason ;\n          if (sentryError.logLevel === 'log') {\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(sentryError.message);\n          } else {\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, scope) {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.rejectedSyncPromise)(\n        new _sentry_utils__WEBPACK_IMPORTED_MODULE_12__.SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    return this._prepareEvent(event, hint, scope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_12__.SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_12__.SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof _sentry_utils__WEBPACK_IMPORTED_MODULE_12__.SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_12__.SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n   _sendEnvelope(envelope) {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.error('Error while sending event:', reason);\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult,\n  beforeSendLabel,\n) {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.isThenable)(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.isPlainObject)(event) && event !== null) {\n          throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_12__.SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_12__.SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.isPlainObject)(beforeSendResult) && beforeSendResult !== null) {\n    throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_12__.SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options,\n  event,\n  hint,\n) {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event) {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\n\n//# sourceMappingURL=baseclient.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/baseclient.js?")},"./node_modules/@sentry/core/esm/checkin.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCheckInEnvelope: () => (/* binding */ createCheckInEnvelope)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/dsn.js");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/object.js");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/envelope.js");\n\n\n/**\n * Create envelope from check in item.\n */\nfunction createCheckInEnvelope(\n  checkIn,\n  dynamicSamplingContext,\n  metadata,\n  tunnel,\n  dsn,\n) {\n  const headers = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && !!dsn) {\n    headers.dsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dsnToString)(dsn);\n  }\n\n  if (dynamicSamplingContext) {\n    headers.trace = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dropUndefinedKeys)(dynamicSamplingContext) ;\n  }\n\n  const item = createCheckInEnvelopeItem(checkIn);\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.createEnvelope)(headers, [item]);\n}\n\nfunction createCheckInEnvelopeItem(checkIn) {\n  const checkInHeaders = {\n    type: \'check_in\',\n  };\n  return [checkInHeaders, checkIn];\n}\n\n\n//# sourceMappingURL=checkin.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/checkin.js?')},"./node_modules/@sentry/core/esm/constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_ENVIRONMENT: () => (/* binding */ DEFAULT_ENVIRONMENT)\n/* harmony export */ });\nconst DEFAULT_ENVIRONMENT = 'production';\n\n\n//# sourceMappingURL=constants.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/constants.js?")},"./node_modules/@sentry/core/esm/envelope.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEventEnvelope: () => (/* binding */ createEventEnvelope),\n/* harmony export */   createSessionEnvelope: () => (/* binding */ createSessionEnvelope)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/dsn.js\");\n\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getSdkMetadataForEnvelopeHeader)(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dsnToString)(dsn) }),\n  };\n\n  const envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session.toJSON()];\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEnvelope)(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getSdkMetadataForEnvelopeHeader)(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjut a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  const envelopeHeaders = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEventEnvelopeHeaders)(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem = [{ type: eventType }, event];\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEnvelope)(envelopeHeaders, [eventItem]);\n}\n\n\n//# sourceMappingURL=envelope.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/envelope.js?")},"./node_modules/@sentry/core/esm/eventProcessors.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addGlobalEventProcessor: () => (/* binding */ addGlobalEventProcessor),\n/* harmony export */   getGlobalEventProcessors: () => (/* binding */ getGlobalEventProcessors),\n/* harmony export */   notifyEventProcessors: () => (/* binding */ notifyEventProcessors)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/worldwide.js");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/syncpromise.js");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/logger.js");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/is.js");\n\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getGlobalSingleton)(\'globalEventProcessors\', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n}\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nfunction notifyEventProcessors(\n  processors,\n  event,\n  hint,\n  index = 0,\n) {\n  return new _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.SyncPromise((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== \'function\') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) ;\n\n      (typeof __SENTRY_DEBUG__ === \'undefined\' || __SENTRY_DEBUG__) &&\n        processor.id &&\n        result === null &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(`Event processor "${processor.id}" dropped event`);\n\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.isThenable)(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n\n\n//# sourceMappingURL=eventProcessors.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/eventProcessors.js?')},"./node_modules/@sentry/core/esm/exports.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addBreadcrumb: () => (/* binding */ addBreadcrumb),\n/* harmony export */   captureCheckIn: () => (/* binding */ captureCheckIn),\n/* harmony export */   captureEvent: () => (/* binding */ captureEvent),\n/* harmony export */   captureException: () => (/* binding */ captureException),\n/* harmony export */   captureMessage: () => (/* binding */ captureMessage),\n/* harmony export */   close: () => (/* binding */ close),\n/* harmony export */   configureScope: () => (/* binding */ configureScope),\n/* harmony export */   flush: () => (/* binding */ flush),\n/* harmony export */   getClient: () => (/* binding */ getClient),\n/* harmony export */   lastEventId: () => (/* binding */ lastEventId),\n/* harmony export */   setContext: () => (/* binding */ setContext),\n/* harmony export */   setExtra: () => (/* binding */ setExtra),\n/* harmony export */   setExtras: () => (/* binding */ setExtras),\n/* harmony export */   setTag: () => (/* binding */ setTag),\n/* harmony export */   setTags: () => (/* binding */ setTags),\n/* harmony export */   setUser: () => (/* binding */ setUser),\n/* harmony export */   startTransaction: () => (/* binding */ startTransaction),\n/* harmony export */   withMonitor: () => (/* binding */ withMonitor),\n/* harmony export */   withScope: () => (/* binding */ withScope)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/prepareEvent.js */ \"./node_modules/@sentry/core/esm/utils/prepareEvent.js\");\n\n\n\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n * This accepts an event hint as optional second parameter.\n * Alternatively, you can also pass a CaptureContext directly as second parameter.\n */\nfunction captureException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exception,\n  hint,\n) {\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().captureException(exception, (0,_utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_1__.parseEventHintOrCaptureContext)(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event, hint) {\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setContext(name, context) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n) {\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction captureCheckIn(checkIn, upsertMonitorConfig) {\n  const hub = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)();\n  const scope = hub.getScope();\n  const client = hub.getClient();\n  if (!client) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.uuid4)();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction withMonitor(\n  monitorSlug,\n  callback,\n  upsertMonitorConfig,\n) {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.timestampInSeconds)();\n\n  function finishCheckIn(status) {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.timestampInSeconds)() - now });\n  }\n\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = callback();\n  } catch (e) {\n    finishCheckIn('error');\n    throw e;\n  }\n\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.isThenable)(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishCheckIn('ok');\n      },\n      () => {\n        finishCheckIn('error');\n      },\n    );\n  } else {\n    finishCheckIn('ok');\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function flush(timeout) {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function close(timeout) {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nfunction lastEventId() {\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().lastEventId();\n}\n\n/**\n * Get the currently active client.\n */\nfunction getClient() {\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().getClient();\n}\n\n\n//# sourceMappingURL=exports.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/exports.js?")},"./node_modules/@sentry/core/esm/hub.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_VERSION: () => (/* binding */ API_VERSION),\n/* harmony export */   Hub: () => (/* binding */ Hub),\n/* harmony export */   ensureHubOnCarrier: () => (/* binding */ ensureHubOnCarrier),\n/* harmony export */   getCurrentHub: () => (/* binding */ getCurrentHub),\n/* harmony export */   getHubFromCarrier: () => (/* binding */ getHubFromCarrier),\n/* harmony export */   getMainCarrier: () => (/* binding */ getMainCarrier),\n/* harmony export */   makeMain: () => (/* binding */ makeMain),\n/* harmony export */   runWithAsyncContext: () => (/* binding */ runWithAsyncContext),\n/* harmony export */   setAsyncContextStrategy: () => (/* binding */ setAsyncContextStrategy),\n/* harmony export */   setHubOnCarrier: () => (/* binding */ setHubOnCarrier)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scope.js */ \"./node_modules/@sentry/core/esm/scope.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./session.js */ \"./node_modules/@sentry/core/esm/session.js\");\n\n\n\n\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nconst API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n\n  /** Contains the last event id of a captured event.  */\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n   constructor(client, scope = new _scope_js__WEBPACK_IMPORTED_MODULE_0__.Scope(),   _version = API_VERSION) {this._version = _version;\n    this._stack = [{ scope }];\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   bindClient(client) {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    const scope = _scope_js__WEBPACK_IMPORTED_MODULE_0__.Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   withScope(callback) {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /** Returns the scope of the top stack. */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n   getStack() {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureException(exception, hint) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)());\n    const syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n  ) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)());\n    const syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dateTimestampInSeconds)();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.consoleSandbox)(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this.getScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this.getScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this.getScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.getScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this.getScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   setContext(name, context) {\n    this.getScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   configureScope(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startTransaction(context, customSamplingContext) {\n    const result = this._callExtensionMethod('startTransaction', context, customSamplingContext);\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && !result) {\n      const client = this.getClient();\n      if (!client) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          \"Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'\",\n        );\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   endSession() {\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_4__.closeSession)(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startSession(context) {\n    const { scope, client } = this.getStackTop();\n    const { release, environment = _constants_js__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.GLOBAL_OBJ.navigator || {};\n\n    const session = (0,_session_js__WEBPACK_IMPORTED_MODULE_4__.makeSession)({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_4__.updateSession)(currentSession, { status: 'exited' });\n    }\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   */\n   shouldSendDefaultPii() {\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n   _withClient(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-expect-error Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _callExtensionMethod(method, ...args) {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.GLOBAL_OBJ.__SENTRY__ = _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\nfunction getGlobalHub(registry = getMainCarrier()) {\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\nfunction ensureHubOnCarrier(carrier, parent = getGlobalHub()) {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (!hasHubOnCarrier(carrier) || getHubFromCarrier(carrier).isOlderThan(API_VERSION)) {\n    const globalHubTopStack = parent.getStackTop();\n    setHubOnCarrier(carrier, new Hub(globalHubTopStack.client, _scope_js__WEBPACK_IMPORTED_MODULE_0__.Scope.clone(globalHubTopStack.scope)));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nfunction setAsyncContextStrategy(strategy) {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nfunction runWithAsyncContext(callback, options = {}) {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.getGlobalSingleton)('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\n\n//# sourceMappingURL=hub.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/hub.js?")},"./node_modules/@sentry/core/esm/integration.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addIntegration: () => (/* binding */ addIntegration),\n/* harmony export */   getIntegrationsToSetup: () => (/* binding */ getIntegrationsToSetup),\n/* harmony export */   installedIntegrations: () => (/* binding */ installedIntegrations),\n/* harmony export */   setupIntegration: () => (/* binding */ setupIntegration),\n/* harmony export */   setupIntegrations: () => (/* binding */ setupIntegrations)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _eventProcessors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./eventProcessors.js */ \"./node_modules/@sentry/core/esm/eventProcessors.js\");\n/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./exports.js */ \"./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n\n\n\n\n\nconst installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations) {\n  const integrationsByName = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nfunction getIntegrationsToSetup(options) {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations;\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.arrayify)(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(client, integrations) {\n  const integrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/** Setup a single integration.  */\nfunction setupIntegration(client, integration, integrationIndex) {\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    integration.setupOnce(_eventProcessors_js__WEBPACK_IMPORTED_MODULE_1__.addGlobalEventProcessor, _hub_js__WEBPACK_IMPORTED_MODULE_2__.getCurrentHub);\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (client.on && typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) ;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (client.addEventProcessor && typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) ;\n\n    const processor = Object.assign((event, hint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current hub's client. */\nfunction addIntegration(integration) {\n  const client = (0,_exports_js__WEBPACK_IMPORTED_MODULE_4__.getClient)();\n\n  if (!client || !client.addIntegration) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex(arr, callback) {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n\n//# sourceMappingURL=integration.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/integration.js?")},"./node_modules/@sentry/core/esm/integrations/functiontostring.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FunctionToString: () => (/* binding */ FunctionToString)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n\n\nlet originalFunctionToString;\n\n/** Patch toString calls to return proper name for wrapped functions */\nclass FunctionToString  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'FunctionToString';}\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor() {\n    this.name = FunctionToString.id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalFunctionToString = Function.prototype.toString;\n\n    // intrinsics (like Function.prototype) might be immutable in some environments\n    // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      Function.prototype.toString = function ( ...args) {\n        const context = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getOriginalFunction)(this) || this;\n        return originalFunctionToString.apply(context, args);\n      };\n    } catch (e) {\n      // ignore errors here, just don't patch this\n    }\n  }\n} FunctionToString.__initStatic();\n\n\n//# sourceMappingURL=functiontostring.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/integrations/functiontostring.js?")},"./node_modules/@sentry/core/esm/integrations/inboundfilters.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InboundFilters: () => (/* binding */ InboundFilters),\n/* harmony export */   _mergeOptions: () => (/* binding */ _mergeOptions),\n/* harmony export */   _shouldDropEvent: () => (/* binding */ _shouldDropEvent)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/string.js\");\n\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\nconst DEFAULT_IGNORE_TRANSACTIONS = [\n  /^.*\\/healthcheck$/,\n  /^.*\\/healthy$/,\n  /^.*\\/live$/,\n  /^.*\\/ready$/,\n  /^.*\\/heartbeat$/,\n  /^.*\\/health$/,\n  /^.*\\/healthz$/,\n];\n\n/** Options for the InboundFilters integration */\n\n/** Inbound filters configurable by the user */\nclass InboundFilters  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'InboundFilters';}\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor(options = {}) {\n    this.name = InboundFilters.id;\n    this._options = options;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_addGlobaleventProcessor, _getCurrentHub) {\n    // noop\n  }\n\n  /** @inheritDoc */\n   processEvent(event, _eventHint, client) {\n    const clientOptions = client.getOptions();\n    const options = _mergeOptions(this._options, clientOptions);\n    return _shouldDropEvent(event, options) ? null : event;\n  }\n} InboundFilters.__initStatic();\n\n/** JSDoc */\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [\n      ...(internalOptions.ignoreTransactions || []),\n      ...(clientOptions.ignoreTransactions || []),\n      ...(internalOptions.disableTransactionDefaults ? [] : DEFAULT_IGNORE_TRANSACTIONS),\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\n/** JSDoc */\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getEventDescription)(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getEventDescription)(event)}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getEventDescription)(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getEventDescription)(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getEventDescription)(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.stringMatchesSomePattern)(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event, ignoreTransactions) {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.stringMatchesSomePattern)(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.stringMatchesSomePattern)(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.stringMatchesSomePattern)(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event) {\n  const possibleMessages = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && possibleMessages.length === 0) {\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Could not extract message for event ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getEventDescription)(event)}`);\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Cannot extract url for event ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getEventDescription)(event)}`);\n    return null;\n  }\n}\n\n\n//# sourceMappingURL=inboundfilters.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/integrations/inboundfilters.js?")},"./node_modules/@sentry/core/esm/integrations/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FunctionToString: () => (/* reexport safe */ _functiontostring_js__WEBPACK_IMPORTED_MODULE_0__.FunctionToString),\n/* harmony export */   InboundFilters: () => (/* reexport safe */ _inboundfilters_js__WEBPACK_IMPORTED_MODULE_1__.InboundFilters),\n/* harmony export */   LinkedErrors: () => (/* reexport safe */ _linkederrors_js__WEBPACK_IMPORTED_MODULE_2__.LinkedErrors)\n/* harmony export */ });\n/* harmony import */ var _functiontostring_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./functiontostring.js */ "./node_modules/@sentry/core/esm/integrations/functiontostring.js");\n/* harmony import */ var _inboundfilters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./inboundfilters.js */ "./node_modules/@sentry/core/esm/integrations/inboundfilters.js");\n/* harmony import */ var _linkederrors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./linkederrors.js */ "./node_modules/@sentry/core/esm/integrations/linkederrors.js");\n\n\n\n//# sourceMappingURL=index.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/integrations/index.js?')},"./node_modules/@sentry/core/esm/integrations/linkederrors.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LinkedErrors: () => (/* binding */ LinkedErrors)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/aggregate-errors.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/eventbuilder.js\");\n\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nclass LinkedErrors  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'LinkedErrors';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n    this.name = LinkedErrors.id;\n  }\n\n  /** @inheritdoc */\n   setupOnce() {\n    // noop\n  }\n\n  /**\n   * @inheritDoc\n   */\n   preprocessEvent(event, hint, client) {\n    const options = client.getOptions();\n\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.applyAggregateErrorsToEvent)(\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.exceptionFromError,\n      options.stackParser,\n      options.maxValueLength,\n      this._key,\n      this._limit,\n      event,\n      hint,\n    );\n  }\n} LinkedErrors.__initStatic();\n\n\n//# sourceMappingURL=linkederrors.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/integrations/linkederrors.js?")},"./node_modules/@sentry/core/esm/integrations/requestdata.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestData: () => (/* binding */ RequestData)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/requestdata.js\");\n\n\nconst DEFAULT_OPTIONS = {\n  include: {\n    cookies: true,\n    data: true,\n    headers: true,\n    ip: false,\n    query_string: true,\n    url: true,\n    user: {\n      id: true,\n      username: true,\n      email: true,\n    },\n  },\n  transactionNamingScheme: 'methodPath',\n};\n\n/** Add data about a request to an event. Primarily for use in Node-based SDKs, but included in `@sentry/integrations`\n * so it can be used in cross-platform SDKs like `@sentry/nextjs`. */\nclass RequestData  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'RequestData';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Function for adding request data to event. Defaults to `addRequestDataToEvent` from `@sentry/node` for now, but\n   * left as a property so this integration can be moved to `@sentry/core` as a base class in case we decide to use\n   * something similar in browser-based SDKs in the future.\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {\n    this.name = RequestData.id;\n    this._addRequestData = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addRequestDataToEvent;\n    this._options = {\n      ...DEFAULT_OPTIONS,\n      ...options,\n      include: {\n        // @ts-expect-error It's mad because `method` isn't a known `include` key. (It's only here and not set by default in\n        // `addRequestDataToEvent` for legacy reasons. TODO (v8): Change that.)\n        method: true,\n        ...DEFAULT_OPTIONS.include,\n        ...options.include,\n        user:\n          options.include && typeof options.include.user === 'boolean'\n            ? options.include.user\n            : {\n                ...DEFAULT_OPTIONS.include.user,\n                // Unclear why TS still thinks `options.include.user` could be a boolean at this point\n                ...((options.include || {}).user ),\n              },\n      },\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    // Note: In the long run, most of the logic here should probably move into the request data utility functions. For\n    // the moment it lives here, though, until https://github.com/getsentry/sentry-javascript/issues/5718 is addressed.\n    // (TL;DR: Those functions touch many parts of the repo in many different ways, and need to be clened up. Once\n    // that's happened, it will be easier to add this logic in without worrying about unexpected side effects.)\n    const { transactionNamingScheme } = this._options;\n\n    addGlobalEventProcessor(event => {\n      const hub = getCurrentHub();\n      const self = hub.getIntegration(RequestData);\n\n      const { sdkProcessingMetadata = {} } = event;\n      const req = sdkProcessingMetadata.request;\n\n      // If the globally installed instance of this integration isn't associated with the current hub, `self` will be\n      // undefined\n      if (!self || !req) {\n        return event;\n      }\n\n      // The Express request handler takes a similar `include` option to that which can be passed to this integration.\n      // If passed there, we store it in `sdkProcessingMetadata`. TODO(v8): Force express and GCP people to use this\n      // integration, so that all of this passing and conversion isn't necessary\n      const addRequestDataOptions =\n        sdkProcessingMetadata.requestDataOptionsFromExpressHandler ||\n        sdkProcessingMetadata.requestDataOptionsFromGCPWrapper ||\n        convertReqDataIntegrationOptsToAddReqDataOpts(this._options);\n\n      const processedEvent = this._addRequestData(event, req, addRequestDataOptions);\n\n      // Transaction events already have the right `transaction` value\n      if (event.type === 'transaction' || transactionNamingScheme === 'handler') {\n        return processedEvent;\n      }\n\n      // In all other cases, use the request's associated transaction (if any) to overwrite the event's `transaction`\n      // value with a high-quality one\n      const reqWithTransaction = req ;\n      const transaction = reqWithTransaction._sentryTransaction;\n      if (transaction) {\n        // TODO (v8): Remove the nextjs check and just base it on `transactionNamingScheme` for all SDKs. (We have to\n        // keep it the way it is for the moment, because changing the names of transactions in Sentry has the potential\n        // to break things like alert rules.)\n        const shouldIncludeMethodInTransactionName =\n          getSDKName(hub) === 'sentry.javascript.nextjs'\n            ? transaction.name.startsWith('/api')\n            : transactionNamingScheme !== 'path';\n\n        const [transactionValue] = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.extractPathForTransaction)(req, {\n          path: true,\n          method: shouldIncludeMethodInTransactionName,\n          customRoute: transaction.name,\n        });\n\n        processedEvent.transaction = transactionValue;\n      }\n\n      return processedEvent;\n    });\n  }\n} RequestData.__initStatic();\n\n/** Convert this integration's options to match what `addRequestDataToEvent` expects */\n/** TODO: Can possibly be deleted once https://github.com/getsentry/sentry-javascript/issues/5718 is fixed */\nfunction convertReqDataIntegrationOptsToAddReqDataOpts(\n  integrationOptions,\n) {\n  const {\n    transactionNamingScheme,\n    include: { ip, user, ...requestOptions },\n  } = integrationOptions;\n\n  const requestIncludeKeys = [];\n  for (const [key, value] of Object.entries(requestOptions)) {\n    if (value) {\n      requestIncludeKeys.push(key);\n    }\n  }\n\n  let addReqDataUserOpt;\n  if (user === undefined) {\n    addReqDataUserOpt = true;\n  } else if (typeof user === 'boolean') {\n    addReqDataUserOpt = user;\n  } else {\n    const userIncludeKeys = [];\n    for (const [key, value] of Object.entries(user)) {\n      if (value) {\n        userIncludeKeys.push(key);\n      }\n    }\n    addReqDataUserOpt = userIncludeKeys;\n  }\n\n  return {\n    include: {\n      ip,\n      user: addReqDataUserOpt,\n      request: requestIncludeKeys.length !== 0 ? requestIncludeKeys : undefined,\n      transaction: transactionNamingScheme,\n    },\n  };\n}\n\nfunction getSDKName(hub) {\n  try {\n    // For a long chain like this, it's fewer bytes to combine a try-catch with assuming everything is there than to\n    // write out a long chain of `a && a.b && a.b.c && ...`\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return hub.getClient().getOptions()._metadata.sdk.name;\n  } catch (err) {\n    // In theory we should never get here\n    return undefined;\n  }\n}\n\n\n//# sourceMappingURL=requestdata.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/integrations/requestdata.js?")},"./node_modules/@sentry/core/esm/scope.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Scope: () => (/* binding */ Scope)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _eventProcessors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./eventProcessors.js */ \"./node_modules/@sentry/core/esm/eventProcessors.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./session.js */ \"./node_modules/@sentry/core/esm/session.js\");\n\n\n\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {\n  /** Flag if notifying is happening. */\n\n  /** Callback for client to receive scope changes. */\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n\n  /** Array of breadcrumbs. */\n\n  /** User */\n\n  /** Tags */\n\n  /** Extra */\n\n  /** Contexts */\n\n  /** Attachments */\n\n  /** Propagation Context for distributed tracing */\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n\n  /** Fingerprint */\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n\n  /** Transaction Name */\n\n  /** Span */\n\n  /** Session */\n\n  /** Request Mode Session Status */\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n   static clone(scope) {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n      newScope._sdkProcessingMetadata = { ...scope._sdkProcessingMetadata };\n      newScope._propagationContext = { ...scope._propagationContext };\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this._user = user || {};\n    if (this._session) {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_0__.updateSession)(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      const updatedScope = (captureContext )(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n      if (captureContext._propagationContext) {\n        this._propagationContext = captureContext._propagationContext;\n      }\n    } else if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext ;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n      if (captureContext.propagationContext) {\n        this._propagationContext = captureContext.propagationContext;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dateTimestampInSeconds)(),\n      ...breadcrumb,\n    };\n\n    const breadcrumbs = this._breadcrumbs;\n    breadcrumbs.push(mergedBreadcrumb);\n    this._breadcrumbs = breadcrumbs.length > maxCrumbs ? breadcrumbs.slice(-maxCrumbs) : breadcrumbs;\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getLastBreadcrumb() {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getAttachments() {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   */\n   applyToEvent(\n    event,\n    hint = {},\n    additionalEventProcessors,\n  ) {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      const transaction = this._span.transaction;\n      if (transaction) {\n        event.sdkProcessingMetadata = {\n          dynamicSamplingContext: transaction.getDynamicSamplingContext(),\n          ...event.sdkProcessingMetadata,\n        };\n        const transactionName = transaction.name;\n        if (transactionName) {\n          event.tags = { transaction: transactionName, ...event.tags };\n        }\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    const scopeBreadcrumbs = this._getBreadcrumbs();\n    const breadcrumbs = [...(event.breadcrumbs || []), ...scopeBreadcrumbs];\n    event.breadcrumbs = breadcrumbs.length > 0 ? breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = {\n      ...event.sdkProcessingMetadata,\n      ...this._sdkProcessingMetadata,\n      propagationContext: this._propagationContext,\n    };\n\n    // TODO (v8): Update this order to be: Global > Client > Scope\n    return (0,_eventProcessors_js__WEBPACK_IMPORTED_MODULE_3__.notifyEventProcessors)(\n      [...(additionalEventProcessors || []), ...(0,_eventProcessors_js__WEBPACK_IMPORTED_MODULE_3__.getGlobalEventProcessors)(), ...this._eventProcessors],\n      event,\n      hint,\n    );\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setPropagationContext(context) {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getPropagationContext() {\n    return this._propagationContext;\n  }\n\n  /**\n   * Get the breadcrumbs for this scope.\n   */\n   _getBreadcrumbs() {\n    return this._breadcrumbs;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n   _applyFingerprint(event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.arrayify)(event.fingerprint) : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\nfunction generatePropagationContext() {\n  return {\n    traceId: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.uuid4)(),\n    spanId: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.uuid4)().substring(16),\n  };\n}\n\n\n//# sourceMappingURL=scope.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/scope.js?")},"./node_modules/@sentry/core/esm/sdk.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initAndBind: () => (/* binding */ initAndBind)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n\n\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      // eslint-disable-next-line no-console\n      console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n    }\n  }\n  const hub = (0,_hub_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)();\n  const scope = hub.getScope();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  hub.bindClient(client);\n}\n\n\n//# sourceMappingURL=sdk.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/sdk.js?")},"./node_modules/@sentry/core/esm/server-runtime-client.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServerRuntimeClient: () => (/* binding */ ServerRuntimeClient)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/syncpromise.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/eventbuilder.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _baseclient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./baseclient.js */ \"./node_modules/@sentry/core/esm/baseclient.js\");\n/* harmony import */ var _checkin_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./checkin.js */ \"./node_modules/@sentry/core/esm/checkin.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sessionflusher_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./sessionflusher.js */ \"./node_modules/@sentry/core/esm/sessionflusher.js\");\n/* harmony import */ var _tracing_hubextensions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tracing/hubextensions.js */ \"./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./tracing/dynamicSamplingContext.js */ \"./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n\n\n\n\n\n\n\n\n\n/**\n * The Sentry Server Runtime Client SDK.\n */\nclass ServerRuntimeClient\n\n extends _baseclient_js__WEBPACK_IMPORTED_MODULE_0__.BaseClient {\n\n  /**\n   * Creates a new Edge SDK instance.\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    // Server clients always support tracing\n    (0,_tracing_hubextensions_js__WEBPACK_IMPORTED_MODULE_1__.addTracingExtensions)();\n\n    super(options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.resolvedSyncPromise)((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.eventFromUnknownInput)(_hub_js__WEBPACK_IMPORTED_MODULE_4__.getCurrentHub, this._options.stackParser, exception, hint));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level = 'info',\n    hint,\n  ) {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.resolvedSyncPromise)(\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.eventFromMessage)(this._options.stackParser, message, level, hint, this._options.attachStacktrace),\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   captureException(exception, hint, scope) {\n    // Check if the flag `autoSessionTracking` is enabled, and if `_sessionFlusher` exists because it is initialised only\n    // when the `requestHandler` middleware is used, and hence the expectation is to have SessionAggregates payload\n    // sent to the Server only when the `requestHandler` middleware is used\n    if (this._options.autoSessionTracking && this._sessionFlusher && scope) {\n      const requestSession = scope.getRequestSession();\n\n      // Necessary checks to ensure this is code block is executed only within a request\n      // Should override the status only if `requestSession.status` is `Ok`, which is its initial stage\n      if (requestSession && requestSession.status === 'ok') {\n        requestSession.status = 'errored';\n      }\n    }\n\n    return super.captureException(exception, hint, scope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // Check if the flag `autoSessionTracking` is enabled, and if `_sessionFlusher` exists because it is initialised only\n    // when the `requestHandler` middleware is used, and hence the expectation is to have SessionAggregates payload\n    // sent to the Server only when the `requestHandler` middleware is used\n    if (this._options.autoSessionTracking && this._sessionFlusher && scope) {\n      const eventType = event.type || 'exception';\n      const isException =\n        eventType === 'exception' && event.exception && event.exception.values && event.exception.values.length > 0;\n\n      // If the event is of type Exception, then a request session should be captured\n      if (isException) {\n        const requestSession = scope.getRequestSession();\n\n        // Ensure that this is happening within the bounds of a request, and make sure not to override\n        // Session Status if Errored / Crashed\n        if (requestSession && requestSession.status === 'ok') {\n          requestSession.status = 'errored';\n        }\n      }\n    }\n\n    return super.captureEvent(event, hint, scope);\n  }\n\n  /**\n   *\n   * @inheritdoc\n   */\n   close(timeout) {\n    if (this._sessionFlusher) {\n      this._sessionFlusher.close();\n    }\n    return super.close(timeout);\n  }\n\n  /** Method that initialises an instance of SessionFlusher on Client */\n   initSessionFlusher() {\n    const { release, environment } = this._options;\n    if (!release) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn('Cannot initialise an instance of SessionFlusher if no release is provided!');\n    } else {\n      this._sessionFlusher = new _sessionflusher_js__WEBPACK_IMPORTED_MODULE_6__.SessionFlusher(this, {\n        release,\n        environment,\n      });\n    }\n  }\n\n  /**\n   * Create a cron monitor check in and send it to Sentry.\n   *\n   * @param checkIn An object that describes a check in.\n   * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n   * to create a monitor automatically when sending a check in.\n   */\n   captureCheckIn(checkIn, monitorConfig, scope) {\n    const id = checkIn.status !== 'in_progress' && checkIn.checkInId ? checkIn.checkInId : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.uuid4)();\n    if (!this._isEnabled()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn('SDK not enabled, will not capture checkin.');\n      return id;\n    }\n\n    const options = this.getOptions();\n    const { release, environment, tunnel } = options;\n\n    const serializedCheckIn = {\n      check_in_id: id,\n      monitor_slug: checkIn.monitorSlug,\n      status: checkIn.status,\n      release,\n      environment,\n    };\n\n    if (checkIn.status !== 'in_progress') {\n      serializedCheckIn.duration = checkIn.duration;\n    }\n\n    if (monitorConfig) {\n      serializedCheckIn.monitor_config = {\n        schedule: monitorConfig.schedule,\n        checkin_margin: monitorConfig.checkinMargin,\n        max_runtime: monitorConfig.maxRuntime,\n        timezone: monitorConfig.timezone,\n      };\n    }\n\n    const [dynamicSamplingContext, traceContext] = this._getTraceInfoFromScope(scope);\n    if (traceContext) {\n      serializedCheckIn.contexts = {\n        trace: traceContext,\n      };\n    }\n\n    const envelope = (0,_checkin_js__WEBPACK_IMPORTED_MODULE_8__.createCheckInEnvelope)(\n      serializedCheckIn,\n      dynamicSamplingContext,\n      this.getSdkMetadata(),\n      tunnel,\n      this.getDsn(),\n    );\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.info('Sending checkin:', checkIn.monitorSlug, checkIn.status);\n    void this._sendEnvelope(envelope);\n    return id;\n  }\n\n  /**\n   * Method responsible for capturing/ending a request session by calling `incrementSessionStatusCount` to increment\n   * appropriate session aggregates bucket\n   */\n   _captureRequestSession() {\n    if (!this._sessionFlusher) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn('Discarded request mode session because autoSessionTracking option was disabled');\n    } else {\n      this._sessionFlusher.incrementSessionStatusCount();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    if (this._options.platform) {\n      event.platform = event.platform || this._options.platform;\n    }\n\n    if (this._options.runtime) {\n      event.contexts = {\n        ...event.contexts,\n        runtime: (event.contexts || {}).runtime || this._options.runtime,\n      };\n    }\n\n    if (this._options.serverName) {\n      event.server_name = event.server_name || this._options.serverName;\n    }\n\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /** Extract trace information from scope */\n   _getTraceInfoFromScope(\n    scope,\n  ) {\n    if (!scope) {\n      return [undefined, undefined];\n    }\n\n    const span = scope.getSpan();\n    if (span) {\n      const samplingContext = span.transaction ? span.transaction.getDynamicSamplingContext() : undefined;\n      return [samplingContext, span.getTraceContext()];\n    }\n\n    const { traceId, spanId, parentSpanId, dsc } = scope.getPropagationContext();\n    const traceContext = {\n      trace_id: traceId,\n      span_id: spanId,\n      parent_span_id: parentSpanId,\n    };\n    if (dsc) {\n      return [dsc, traceContext];\n    }\n\n    return [(0,_tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_9__.getDynamicSamplingContextFromClient)(traceId, this, scope), traceContext];\n  }\n}\n\n\n//# sourceMappingURL=server-runtime-client.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/server-runtime-client.js?")},"./node_modules/@sentry/core/esm/session.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   closeSession: () => (/* binding */ closeSession),\n/* harmony export */   makeSession: () => (/* binding */ makeSession),\n/* harmony export */   updateSession: () => (/* binding */ updateSession)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)();\n\n  const session = {\n    sid: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dropUndefinedKeys)({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\n\n//# sourceMappingURL=session.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/session.js?")},"./node_modules/@sentry/core/esm/sessionflusher.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SessionFlusher: () => (/* binding */ SessionFlusher)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/object.js");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hub.js */ "./node_modules/@sentry/core/esm/hub.js");\n\n\n\n/**\n * @inheritdoc\n */\nclass SessionFlusher  {\n\n   constructor(client, attrs) {\n    this._client = client;\n    this.flushTimeout = 60;\n    this._pendingAggregates = {};\n    this._isEnabled = true;\n\n    // Call to setInterval, so that flush is called every 60 seconds\n    this._intervalId = setInterval(() => this.flush(), this.flushTimeout * 1000);\n    this._sessionAttrs = attrs;\n  }\n\n  /** Checks if `pendingAggregates` has entries, and if it does flushes them by calling `sendSession` */\n   flush() {\n    const sessionAggregates = this.getSessionAggregates();\n    if (sessionAggregates.aggregates.length === 0) {\n      return;\n    }\n    this._pendingAggregates = {};\n    this._client.sendSession(sessionAggregates);\n  }\n\n  /** Massages the entries in `pendingAggregates` and returns aggregated sessions */\n   getSessionAggregates() {\n    const aggregates = Object.keys(this._pendingAggregates).map((key) => {\n      return this._pendingAggregates[parseInt(key)];\n    });\n\n    const sessionAggregates = {\n      attrs: this._sessionAttrs,\n      aggregates,\n    };\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(sessionAggregates);\n  }\n\n  /** JSDoc */\n   close() {\n    clearInterval(this._intervalId);\n    this._isEnabled = false;\n    this.flush();\n  }\n\n  /**\n   * Wrapper function for _incrementSessionStatusCount that checks if the instance of SessionFlusher is enabled then\n   * fetches the session status of the request from `Scope.getRequestSession().status` on the scope and passes them to\n   * `_incrementSessionStatusCount` along with the start date\n   */\n   incrementSessionStatusCount() {\n    if (!this._isEnabled) {\n      return;\n    }\n    const scope = (0,_hub_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().getScope();\n    const requestSession = scope.getRequestSession();\n\n    if (requestSession && requestSession.status) {\n      this._incrementSessionStatusCount(requestSession.status, new Date());\n      // This is not entirely necessarily but is added as a safe guard to indicate the bounds of a request and so in\n      // case captureRequestSession is called more than once to prevent double count\n      scope.setRequestSession(undefined);\n      /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n    }\n  }\n\n  /**\n   * Increments status bucket in pendingAggregates buffer (internal state) corresponding to status of\n   * the session received\n   */\n   _incrementSessionStatusCount(status, date) {\n    // Truncate minutes and seconds on Session Started attribute to have one minute bucket keys\n    const sessionStartedTrunc = new Date(date).setSeconds(0, 0);\n    this._pendingAggregates[sessionStartedTrunc] = this._pendingAggregates[sessionStartedTrunc] || {};\n\n    // corresponds to aggregated sessions in one specific minute bucket\n    // for example, {"started":"2021-03-16T08:00:00.000Z","exited":4, "errored": 1}\n    const aggregationCounts = this._pendingAggregates[sessionStartedTrunc];\n    if (!aggregationCounts.started) {\n      aggregationCounts.started = new Date(sessionStartedTrunc).toISOString();\n    }\n\n    switch (status) {\n      case \'errored\':\n        aggregationCounts.errored = (aggregationCounts.errored || 0) + 1;\n        return aggregationCounts.errored;\n      case \'ok\':\n        aggregationCounts.exited = (aggregationCounts.exited || 0) + 1;\n        return aggregationCounts.exited;\n      default:\n        aggregationCounts.crashed = (aggregationCounts.crashed || 0) + 1;\n        return aggregationCounts.crashed;\n    }\n  }\n}\n\n\n//# sourceMappingURL=sessionflusher.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/sessionflusher.js?')},"./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDynamicSamplingContextFromClient: () => (/* binding */ getDynamicSamplingContextFromClient)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/object.js");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ "./node_modules/@sentry/core/esm/constants.js");\n\n\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatchs the `createDsc` lifecycle hook as a side effect.\n */\nfunction getDynamicSamplingContextFromClient(\n  trace_id,\n  client,\n  scope,\n) {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n  const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n  const dsc = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({\n    environment: options.environment || _constants_js__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_ENVIRONMENT,\n    release: options.release,\n    user_segment,\n    public_key,\n    trace_id,\n  }) ;\n\n  client.emit && client.emit(\'createDsc\', dsc);\n\n  return dsc;\n}\n\n\n//# sourceMappingURL=dynamicSamplingContext.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js?')},"./node_modules/@sentry/core/esm/tracing/errors.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   registerErrorInstrumentation: () => (/* binding */ registerErrorInstrumentation)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/instrument/globalError.js");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/instrument/globalUnhandledRejection.js");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/logger.js");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ "./node_modules/@sentry/core/esm/tracing/utils.js");\n\n\n\nlet errorsInstrumented = false;\n\n/**\n * Configures global error listeners\n */\nfunction registerErrorInstrumentation() {\n  if (errorsInstrumented) {\n    return;\n  }\n\n  errorsInstrumented = true;\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addGlobalErrorInstrumentationHandler)(errorCallback);\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addGlobalUnhandledRejectionInstrumentationHandler)(errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback() {\n  const activeTransaction = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getActiveTransaction)();\n  if (activeTransaction) {\n    const status = \'internal_error\';\n    (typeof __SENTRY_DEBUG__ === \'undefined\' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n\n// The function name will be lost when bundling but we need to be able to identify this listener later to maintain the\n// node.js default exit behaviour\nerrorCallback.tag = \'sentry_tracingErrorCallback\';\n\n\n//# sourceMappingURL=errors.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/tracing/errors.js?')},"./node_modules/@sentry/core/esm/tracing/hubextensions.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addTracingExtensions: () => (/* binding */ addTracingExtensions),\n/* harmony export */   startIdleTransaction: () => (/* binding */ startIdleTransaction)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/logger.js");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../hub.js */ "./node_modules/@sentry/core/esm/hub.js");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./errors.js */ "./node_modules/@sentry/core/esm/tracing/errors.js");\n/* harmony import */ var _idletransaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./idletransaction.js */ "./node_modules/@sentry/core/esm/tracing/idletransaction.js");\n/* harmony import */ var _sampling_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sampling.js */ "./node_modules/@sentry/core/esm/tracing/sampling.js");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transaction.js */ "./node_modules/@sentry/core/esm/tracing/transaction.js");\n\n\n\n\n\n\n\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders() {\n  const scope = this.getScope();\n  const span = scope.getSpan();\n\n  return span\n    ? {\n        \'sentry-trace\': span.toTraceparent(),\n      }\n    : {};\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn\'t yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * "extension method."\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n\n  transactionContext,\n  customSamplingContext,\n) {\n  const client = this.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  const configInstrumenter = options.instrumenter || \'sentry\';\n  const transactionInstrumenter = transactionContext.instrumenter || \'sentry\';\n\n  if (configInstrumenter !== transactionInstrumenter) {\n    (typeof __SENTRY_DEBUG__ === \'undefined\' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error(\n        `A transaction was started with instrumenter=\\`${transactionInstrumenter}\\`, but the SDK is configured with the \\`${configInstrumenter}\\` instrumenter.\nThe transaction will not be sampled. Please use the ${configInstrumenter} instrumentation to start transactions.`,\n      );\n\n    transactionContext.sampled = false;\n  }\n\n  let transaction = new _transaction_js__WEBPACK_IMPORTED_MODULE_1__.Transaction(transactionContext, this);\n  transaction = (0,_sampling_js__WEBPACK_IMPORTED_MODULE_2__.sampleTransaction)(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit(\'startTransaction\', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nfunction startIdleTransaction(\n  hub,\n  transactionContext,\n  idleTimeout,\n  finalTimeout,\n  onScope,\n  customSamplingContext,\n  heartbeatInterval,\n) {\n  const client = hub.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  let transaction = new _idletransaction_js__WEBPACK_IMPORTED_MODULE_3__.IdleTransaction(transactionContext, hub, idleTimeout, finalTimeout, heartbeatInterval, onScope);\n  transaction = (0,_sampling_js__WEBPACK_IMPORTED_MODULE_2__.sampleTransaction)(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit(\'startTransaction\', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Adds tracing extensions to the global hub.\n */\nfunction addTracingExtensions() {\n  const carrier = (0,_hub_js__WEBPACK_IMPORTED_MODULE_4__.getMainCarrier)();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n\n  (0,_errors_js__WEBPACK_IMPORTED_MODULE_5__.registerErrorInstrumentation)();\n}\n\n\n//# sourceMappingURL=hubextensions.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/tracing/hubextensions.js?')},"./node_modules/@sentry/core/esm/tracing/idletransaction.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IdleTransaction: () => (/* binding */ IdleTransaction),\n/* harmony export */   IdleTransactionSpanRecorder: () => (/* binding */ IdleTransactionSpanRecorder),\n/* harmony export */   TRACING_DEFAULTS: () => (/* binding */ TRACING_DEFAULTS)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _span_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./span.js */ \"./node_modules/@sentry/core/esm/tracing/span.js\");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transaction.js */ \"./node_modules/@sentry/core/esm/tracing/transaction.js\");\n\n\n\n\nconst TRACING_DEFAULTS = {\n  idleTimeout: 1000,\n  finalTimeout: 30000,\n  heartbeatInterval: 5000,\n};\n\nconst FINISH_REASON_TAG = 'finishReason';\n\nconst IDLE_TRANSACTION_FINISH_REASONS = [\n  'heartbeatFailed',\n  'idleTimeout',\n  'documentHidden',\n  'finalTimeout',\n  'externalFinish',\n  'cancelled',\n];\n\n/**\n * @inheritDoc\n */\nclass IdleTransactionSpanRecorder extends _span_js__WEBPACK_IMPORTED_MODULE_0__.SpanRecorder {\n   constructor(\n      _pushActivity,\n      _popActivity,\n     transactionSpanId,\n    maxlen,\n  ) {\n    super(maxlen);this._pushActivity = _pushActivity;this._popActivity = _popActivity;this.transactionSpanId = transactionSpanId;  }\n\n  /**\n   * @inheritDoc\n   */\n   add(span) {\n    // We should make sure we do not push and pop activities for\n    // the transaction that this span recorder belongs to.\n    if (span.spanId !== this.transactionSpanId) {\n      // We patch span.finish() to pop an activity after setting an endTimestamp.\n      span.finish = (endTimestamp) => {\n        span.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampInSeconds)();\n        this._popActivity(span.spanId);\n      };\n\n      // We should only push new activities if the span does not have an end timestamp.\n      if (span.endTimestamp === undefined) {\n        this._pushActivity(span.spanId);\n      }\n    }\n\n    super.add(span);\n  }\n}\n\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nclass IdleTransaction extends _transaction_js__WEBPACK_IMPORTED_MODULE_2__.Transaction {\n  // Activities store a list of active spans\n\n  // Track state of activities in previous heartbeat\n\n  // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n\n  // We should not use heartbeat if we finished a transaction\n\n  // Idle timeout was canceled and we should finish the transaction with the last span end.\n\n  /**\n   * Timer that tracks Transaction idleTimeout\n   */\n\n   constructor(\n    transactionContext,\n      _idleHub,\n    /**\n     * The time to wait in ms until the idle transaction will be finished. This timer is started each time\n     * there are no active spans on this transaction.\n     */\n      _idleTimeout = TRACING_DEFAULTS.idleTimeout,\n    /**\n     * The final value in ms that a transaction cannot exceed\n     */\n      _finalTimeout = TRACING_DEFAULTS.finalTimeout,\n      _heartbeatInterval = TRACING_DEFAULTS.heartbeatInterval,\n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n      _onScope = false,\n  ) {\n    super(transactionContext, _idleHub);this._idleHub = _idleHub;this._idleTimeout = _idleTimeout;this._finalTimeout = _finalTimeout;this._heartbeatInterval = _heartbeatInterval;this._onScope = _onScope;\n    this.activities = {};\n    this._heartbeatCounter = 0;\n    this._finished = false;\n    this._idleTimeoutCanceledPermanently = false;\n    this._beforeFinishCallbacks = [];\n    this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[4];\n\n    if (_onScope) {\n      // We set the transaction here on the scope so error events pick up the trace\n      // context and attach it to the error.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(`Setting idle transaction on scope. Span ID: ${this.spanId}`);\n      _idleHub.configureScope(scope => scope.setSpan(this));\n    }\n\n    this._restartIdleTimeout();\n    setTimeout(() => {\n      if (!this._finished) {\n        this.setStatus('deadline_exceeded');\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[3];\n        this.finish();\n      }\n    }, this._finalTimeout);\n  }\n\n  /** {@inheritDoc} */\n   finish(endTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampInSeconds)()) {\n    this._finished = true;\n    this.activities = {};\n\n    if (this.op === 'ui.action.click') {\n      this.setTag(FINISH_REASON_TAG, this._finishReason);\n    }\n\n    if (this.spanRecorder) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestamp * 1000).toISOString(), this.op);\n\n      for (const callback of this._beforeFinishCallbacks) {\n        callback(this, endTimestamp);\n      }\n\n      this.spanRecorder.spans = this.spanRecorder.spans.filter((span) => {\n        // If we are dealing with the transaction itself, we just return it\n        if (span.spanId === this.spanId) {\n          return true;\n        }\n\n        // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n        if (!span.endTimestamp) {\n          span.endTimestamp = endTimestamp;\n          span.setStatus('cancelled');\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n        }\n\n        const spanStartedBeforeTransactionFinish = span.startTimestamp < endTimestamp;\n\n        // Add a delta with idle timeout so that we prevent false positives\n        const timeoutWithMarginOfError = (this._finalTimeout + this._idleTimeout) / 1000;\n        const spanEndedBeforeFinalTimeout = span.endTimestamp - this.startTimestamp < timeoutWithMarginOfError;\n\n        if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n          const stringifiedSpan = JSON.stringify(span, undefined, 2);\n          if (!spanStartedBeforeTransactionFinish) {\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('[Tracing] discarding Span since it happened after Transaction was finished', stringifiedSpan);\n          } else if (!spanEndedBeforeFinalTimeout) {\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('[Tracing] discarding Span since it finished after Transaction final timeout', stringifiedSpan);\n          }\n        }\n\n        return spanStartedBeforeTransactionFinish && spanEndedBeforeFinalTimeout;\n      });\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('[Tracing] flushing IdleTransaction');\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('[Tracing] No active IdleTransaction');\n    }\n\n    // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n    if (this._onScope) {\n      const scope = this._idleHub.getScope();\n      if (scope.getTransaction() === this) {\n        scope.setSpan(undefined);\n      }\n    }\n\n    return super.finish(endTimestamp);\n  }\n\n  /**\n   * Register a callback function that gets excecuted before the transaction finishes.\n   * Useful for cleanup or if you want to add any additional spans based on current context.\n   *\n   * This is exposed because users have no other way of running something before an idle transaction\n   * finishes.\n   */\n   registerBeforeFinishCallback(callback) {\n    this._beforeFinishCallbacks.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   initSpanRecorder(maxlen) {\n    if (!this.spanRecorder) {\n      const pushActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._pushActivity(id);\n      };\n      const popActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._popActivity(id);\n      };\n\n      this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanId, maxlen);\n\n      // Start heartbeat so that transactions do not run forever.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('Starting heartbeat');\n      this._pingHeartbeat();\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Cancels the existing idle timeout, if there is one.\n   * @param restartOnChildSpanChange Default is `true`.\n   *                                 If set to false the transaction will end\n   *                                 with the last child span.\n   */\n   cancelIdleTimeout(\n    endTimestamp,\n    {\n      restartOnChildSpanChange,\n    }\n\n = {\n      restartOnChildSpanChange: true,\n    },\n  ) {\n    this._idleTimeoutCanceledPermanently = restartOnChildSpanChange === false;\n    if (this._idleTimeoutID) {\n      clearTimeout(this._idleTimeoutID);\n      this._idleTimeoutID = undefined;\n\n      if (Object.keys(this.activities).length === 0 && this._idleTimeoutCanceledPermanently) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n        this.finish(endTimestamp);\n      }\n    }\n  }\n\n  /**\n   * Temporary method used to externally set the transaction's `finishReason`\n   *\n   * ** WARNING**\n   * This is for the purpose of experimentation only and will be removed in the near future, do not use!\n   *\n   * @internal\n   *\n   */\n   setFinishReason(reason) {\n    this._finishReason = reason;\n  }\n\n  /**\n   * Restarts idle timeout, if there is no running idle timeout it will start one.\n   */\n   _restartIdleTimeout(endTimestamp) {\n    this.cancelIdleTimeout();\n    this._idleTimeoutID = setTimeout(() => {\n      if (!this._finished && Object.keys(this.activities).length === 0) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[1];\n        this.finish(endTimestamp);\n      }\n    }, this._idleTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n   _pushActivity(spanId) {\n    this.cancelIdleTimeout(undefined, { restartOnChildSpanChange: !this._idleTimeoutCanceledPermanently });\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(`[Tracing] pushActivity: ${spanId}`);\n    this.activities[spanId] = true;\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n   _popActivity(spanId) {\n    if (this.activities[spanId]) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(`[Tracing] popActivity ${spanId}`);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this.activities[spanId];\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    }\n\n    if (Object.keys(this.activities).length === 0) {\n      const endTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampInSeconds)();\n      if (this._idleTimeoutCanceledPermanently) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n        this.finish(endTimestamp);\n      } else {\n        // We need to add the timeout here to have the real endtimestamp of the transaction\n        // Remember timestampInSeconds is in seconds, timeout is in ms\n        this._restartIdleTimeout(endTimestamp + this._idleTimeout / 1000);\n      }\n    }\n  }\n\n  /**\n   * Checks when entries of this.activities are not changing for 3 beats.\n   * If this occurs we finish the transaction.\n   */\n   _beat() {\n    // We should not be running heartbeat if the idle transaction is finished.\n    if (this._finished) {\n      return;\n    }\n\n    const heartbeatString = Object.keys(this.activities).join('');\n\n    if (heartbeatString === this._prevHeartbeatString) {\n      this._heartbeatCounter++;\n    } else {\n      this._heartbeatCounter = 1;\n    }\n\n    this._prevHeartbeatString = heartbeatString;\n\n    if (this._heartbeatCounter >= 3) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n      this.setStatus('deadline_exceeded');\n      this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[0];\n      this.finish();\n    } else {\n      this._pingHeartbeat();\n    }\n  }\n\n  /**\n   * Pings the heartbeat\n   */\n   _pingHeartbeat() {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`);\n    setTimeout(() => {\n      this._beat();\n    }, this._heartbeatInterval);\n  }\n}\n\n\n//# sourceMappingURL=idletransaction.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/tracing/idletransaction.js?")},"./node_modules/@sentry/core/esm/tracing/measurement.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setMeasurement: () => (/* binding */ setMeasurement)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ "./node_modules/@sentry/core/esm/tracing/utils.js");\n\n\n/**\n * Adds a measurement to the current active transaction.\n */\nfunction setMeasurement(name, value, unit) {\n  const transaction = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getActiveTransaction)();\n  if (transaction) {\n    transaction.setMeasurement(name, value, unit);\n  }\n}\n\n\n//# sourceMappingURL=measurement.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/tracing/measurement.js?')},"./node_modules/@sentry/core/esm/tracing/sampling.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sampleTransaction: () => (/* binding */ sampleTransaction)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/hasTracingEnabled.js */ \"./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n\n\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * This method muttes the given `transaction` and will set the `sampled` value on it.\n * It returns the same transaction, for convenience.\n */\nfunction sampleTransaction(\n  transaction,\n  options,\n  samplingContext,\n) {\n  // nothing to do if tracing is not enabled\n  if (!(0,_utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_0__.hasTracingEnabled)(options)) {\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  if (transaction.sampled !== undefined) {\n    transaction.setMetadata({\n      sampleRate: Number(transaction.sampled),\n    });\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` nor `enableTracing` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setMetadata({\n      sampleRate: Number(sampleRate),\n    });\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n    transaction.setMetadata({\n      sampleRate: Number(sampleRate),\n    });\n  } else {\n    // When `enableTracing === true`, we use a sample rate of 100%\n    sampleRate = 1;\n    transaction.setMetadata({\n      sampleRate,\n    });\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  transaction.sampled = Math.random() < (sampleRate );\n\n  // if we're not going to keep it, we're done\n  if (!transaction.sampled) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`[Tracing] starting ${transaction.op} transaction - ${transaction.name}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.isNaN)(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\n\n//# sourceMappingURL=sampling.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/tracing/sampling.js?")},"./node_modules/@sentry/core/esm/tracing/span.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Span: () => (/* binding */ Span),\n/* harmony export */   SpanRecorder: () => (/* binding */ SpanRecorder),\n/* harmony export */   spanStatusfromHttpCode: () => (/* binding */ spanStatusfromHttpCode)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nclass SpanRecorder {\n\n   constructor(maxlen = 1000) {\n    this._maxlen = maxlen;\n    this.spans = [];\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n   add(span) {\n    if (this.spans.length > this._maxlen) {\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nclass Span  {\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Internal keeper of the status\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Timestamp in seconds when the span was created.\n   */\n\n  /**\n   * Timestamp in seconds when the span ended.\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  /**\n   * List of spans that were finalized\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * The instrumenter that created this span.\n   */\n\n  /**\n   * The origin of the span, giving context about what created the span.\n   */\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(spanContext = {}) {\n    this.traceId = spanContext.traceId || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)();\n    this.spanId = spanContext.spanId || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)().substring(16);\n    this.startTimestamp = spanContext.startTimestamp || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampInSeconds)();\n    this.tags = spanContext.tags || {};\n    this.data = spanContext.data || {};\n    this.instrumenter = spanContext.instrumenter || 'sentry';\n    this.origin = spanContext.origin || 'manual';\n\n    if (spanContext.parentSpanId) {\n      this.parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this.sampled = spanContext.sampled;\n    }\n    if (spanContext.op) {\n      this.op = spanContext.op;\n    }\n    if (spanContext.description) {\n      this.description = spanContext.description;\n    }\n    if (spanContext.name) {\n      this.description = spanContext.name;\n    }\n    if (spanContext.status) {\n      this.status = spanContext.status;\n    }\n    if (spanContext.endTimestamp) {\n      this.endTimestamp = spanContext.endTimestamp;\n    }\n  }\n\n  /** An alias for `description` of the Span. */\n   get name() {\n    return this.description || '';\n  }\n  /** Update the name of the span. */\n   set name(name) {\n    this.setName(name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startChild(\n    spanContext,\n  ) {\n    const childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this.spanId,\n      sampled: this.sampled,\n      traceId: this.traceId,\n    });\n\n    childSpan.spanRecorder = this.spanRecorder;\n    if (childSpan.spanRecorder) {\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    childSpan.transaction = this.transaction;\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && childSpan.transaction) {\n      const opStr = (spanContext && spanContext.op) || '< unknown op >';\n      const nameStr = childSpan.transaction.name || '< unknown name >';\n      const idStr = childSpan.transaction.spanId;\n\n      const logMessage = `[Tracing] Starting '${opStr}' span on transaction '${nameStr}' (${idStr}).`;\n      childSpan.transaction.metadata.spanMetadata[childSpan.spanId] = { logMessage };\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(logMessage);\n    }\n\n    return childSpan;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   setData(key, value) {\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setStatus(value) {\n    this.status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setHttpStatus(httpStatus) {\n    this.setTag('http.status_code', String(httpStatus));\n    this.setData('http.response.status_code', httpStatus);\n    const spanStatus = spanStatusfromHttpCode(httpStatus);\n    if (spanStatus !== 'unknown_error') {\n      this.setStatus(spanStatus);\n    }\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setName(name) {\n    this.description = name;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isSuccess() {\n    return this.status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    if (\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      // Don't call this for transactions\n      this.transaction &&\n      this.transaction.spanId !== this.spanId\n    ) {\n      const { logMessage } = this.transaction.metadata.spanMetadata[this.spanId];\n      if (logMessage) {\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log((logMessage ).replace('Starting', 'Finishing'));\n      }\n    }\n\n    this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampInSeconds)();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toTraceparent() {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.generateSentryTraceHeader)(this.traceId, this.spanId, this.sampled);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.dropUndefinedKeys)({\n      data: this.data,\n      description: this.description,\n      endTimestamp: this.endTimestamp,\n      op: this.op,\n      parentSpanId: this.parentSpanId,\n      sampled: this.sampled,\n      spanId: this.spanId,\n      startTimestamp: this.startTimestamp,\n      status: this.status,\n      tags: this.tags,\n      traceId: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(spanContext) {\n    this.data = spanContext.data || {};\n    this.description = spanContext.description;\n    this.endTimestamp = spanContext.endTimestamp;\n    this.op = spanContext.op;\n    this.parentSpanId = spanContext.parentSpanId;\n    this.sampled = spanContext.sampled;\n    this.spanId = spanContext.spanId || this.spanId;\n    this.startTimestamp = spanContext.startTimestamp || this.startTimestamp;\n    this.status = spanContext.status;\n    this.tags = spanContext.tags || {};\n    this.traceId = spanContext.traceId || this.traceId;\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTraceContext() {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.dropUndefinedKeys)({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      trace_id: this.traceId,\n      origin: this.origin,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toJSON()\n\n {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.dropUndefinedKeys)({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      start_timestamp: this.startTimestamp,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this.endTimestamp,\n      trace_id: this.traceId,\n      origin: this.origin,\n    });\n  }\n}\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nfunction spanStatusfromHttpCode(httpStatus) {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n\n\n//# sourceMappingURL=span.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/tracing/span.js?")},"./node_modules/@sentry/core/esm/tracing/spanstatus.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpanStatus: () => (/* binding */ SpanStatus)\n/* harmony export */ });\n/** The status of an Span.\n *\n * @deprecated Use string literals - if you require type casting, cast to SpanStatusType type\n */\n// eslint-disable-next-line import/export\nvar SpanStatus; (function (SpanStatus) {\n  /** The operation completed successfully. */\n  const Ok = 'ok'; SpanStatus[\"Ok\"] = Ok;\n  /** Deadline expired before operation could complete. */\n  const DeadlineExceeded = 'deadline_exceeded'; SpanStatus[\"DeadlineExceeded\"] = DeadlineExceeded;\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  const Unauthenticated = 'unauthenticated'; SpanStatus[\"Unauthenticated\"] = Unauthenticated;\n  /** 403 Forbidden */\n  const PermissionDenied = 'permission_denied'; SpanStatus[\"PermissionDenied\"] = PermissionDenied;\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  const NotFound = 'not_found'; SpanStatus[\"NotFound\"] = NotFound;\n  /** 429 Too Many Requests */\n  const ResourceExhausted = 'resource_exhausted'; SpanStatus[\"ResourceExhausted\"] = ResourceExhausted;\n  /** Client specified an invalid argument. 4xx. */\n  const InvalidArgument = 'invalid_argument'; SpanStatus[\"InvalidArgument\"] = InvalidArgument;\n  /** 501 Not Implemented */\n  const Unimplemented = 'unimplemented'; SpanStatus[\"Unimplemented\"] = Unimplemented;\n  /** 503 Service Unavailable */\n  const Unavailable = 'unavailable'; SpanStatus[\"Unavailable\"] = Unavailable;\n  /** Other/generic 5xx. */\n  const InternalError = 'internal_error'; SpanStatus[\"InternalError\"] = InternalError;\n  /** Unknown. Any non-standard HTTP status code. */\n  const UnknownError = 'unknown_error'; SpanStatus[\"UnknownError\"] = UnknownError;\n  /** The operation was cancelled (typically by the user). */\n  const Cancelled = 'cancelled'; SpanStatus[\"Cancelled\"] = Cancelled;\n  /** Already exists (409) */\n  const AlreadyExists = 'already_exists'; SpanStatus[\"AlreadyExists\"] = AlreadyExists;\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  const FailedPrecondition = 'failed_precondition'; SpanStatus[\"FailedPrecondition\"] = FailedPrecondition;\n  /** The operation was aborted, typically due to a concurrency issue. */\n  const Aborted = 'aborted'; SpanStatus[\"Aborted\"] = Aborted;\n  /** Operation was attempted past the valid range. */\n  const OutOfRange = 'out_of_range'; SpanStatus[\"OutOfRange\"] = OutOfRange;\n  /** Unrecoverable data loss or corruption */\n  const DataLoss = 'data_loss'; SpanStatus[\"DataLoss\"] = DataLoss;\n})(SpanStatus || (SpanStatus = {}));\n\n\n//# sourceMappingURL=spanstatus.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/tracing/spanstatus.js?")},"./node_modules/@sentry/core/esm/tracing/trace.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   continueTrace: () => (/* binding */ continueTrace),\n/* harmony export */   getActiveSpan: () => (/* binding */ getActiveSpan),\n/* harmony export */   startActiveSpan: () => (/* binding */ startActiveSpan),\n/* harmony export */   startInactiveSpan: () => (/* binding */ startInactiveSpan),\n/* harmony export */   startSpan: () => (/* binding */ startSpan),\n/* harmony export */   startSpanManual: () => (/* binding */ startSpanManual),\n/* harmony export */   trace: () => (/* binding */ trace)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/hasTracingEnabled.js */ \"./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n\n\n\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n *\n * This function is meant to be used internally and may break at any time. Use at your own risk.\n *\n * @internal\n * @private\n */\nfunction trace(\n  context,\n  callback,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onError = () => {},\n) {\n  const ctx = normalizeContext(context);\n\n  const hub = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)();\n  const scope = hub.getScope();\n  const parentSpan = scope.getSpan();\n\n  const activeSpan = createChildSpanOrTransaction(hub, parentSpan, ctx);\n\n  scope.setSpan(activeSpan);\n\n  function finishAndSetSpan() {\n    activeSpan && activeSpan.finish();\n    hub.getScope().setSpan(parentSpan);\n  }\n\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = callback(activeSpan);\n  } catch (e) {\n    activeSpan && activeSpan.setStatus('internal_error');\n    onError(e);\n    finishAndSetSpan();\n    throw e;\n  }\n\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isThenable)(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishAndSetSpan();\n      },\n      e => {\n        activeSpan && activeSpan.setStatus('internal_error');\n        onError(e);\n        finishAndSetSpan();\n      },\n    );\n  } else {\n    finishAndSetSpan();\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getSpan()`, as long as the function is executed while the scope is active.\n *\n * If you want to create a span that is not set as active, use {@link startInactiveSpan}.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nfunction startSpan(context, callback) {\n  const ctx = normalizeContext(context);\n\n  const hub = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)();\n  const scope = hub.getScope();\n  const parentSpan = scope.getSpan();\n\n  const activeSpan = createChildSpanOrTransaction(hub, parentSpan, ctx);\n  scope.setSpan(activeSpan);\n\n  function finishAndSetSpan() {\n    activeSpan && activeSpan.finish();\n    hub.getScope().setSpan(parentSpan);\n  }\n\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = callback(activeSpan);\n  } catch (e) {\n    activeSpan && activeSpan.setStatus('internal_error');\n    finishAndSetSpan();\n    throw e;\n  }\n\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isThenable)(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishAndSetSpan();\n      },\n      () => {\n        activeSpan && activeSpan.setStatus('internal_error');\n        finishAndSetSpan();\n      },\n    );\n  } else {\n    finishAndSetSpan();\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * @deprecated Use {@link startSpan} instead.\n */\nconst startActiveSpan = startSpan;\n\n/**\n * Similar to `Sentry.startSpan`. Wraps a function with a transaction/span, but does not finish the span\n * after the function is done automatically.\n *\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nfunction startSpanManual(\n  context,\n  callback,\n) {\n  const ctx = normalizeContext(context);\n\n  const hub = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)();\n  const scope = hub.getScope();\n  const parentSpan = scope.getSpan();\n\n  const activeSpan = createChildSpanOrTransaction(hub, parentSpan, ctx);\n  scope.setSpan(activeSpan);\n\n  function finishAndSetSpan() {\n    activeSpan && activeSpan.finish();\n    hub.getScope().setSpan(parentSpan);\n  }\n\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = callback(activeSpan, finishAndSetSpan);\n  } catch (e) {\n    activeSpan && activeSpan.setStatus('internal_error');\n    throw e;\n  }\n\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isThenable)(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(undefined, () => {\n      activeSpan && activeSpan.setStatus('internal_error');\n    });\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Creates a span. This span is not set as active, so will not get automatic instrumentation spans\n * as children or be able to be accessed via `Sentry.getSpan()`.\n *\n * If you want to create a span that is set as active, use {@link startSpan}.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate` or `tracesSampler`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nfunction startInactiveSpan(context) {\n  if (!(0,_utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_2__.hasTracingEnabled)()) {\n    return undefined;\n  }\n\n  const ctx = { ...context };\n  // If a name is set and a description is not, set the description to the name.\n  if (ctx.name !== undefined && ctx.description === undefined) {\n    ctx.description = ctx.name;\n  }\n\n  const hub = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)();\n  const parentSpan = getActiveSpan();\n  return parentSpan ? parentSpan.startChild(ctx) : hub.startTransaction(ctx);\n}\n\n/**\n * Returns the currently active span.\n */\nfunction getActiveSpan() {\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().getScope().getSpan();\n}\n\n/**\n * Continue a trace from `sentry-trace` and `baggage` values.\n * These values can be obtained from incoming request headers,\n * or in the browser from `<meta name=\"sentry-trace\">` and `<meta name=\"baggage\">` HTML tags.\n *\n * It also takes an optional `request` option, which if provided will also be added to the scope & transaction metadata.\n * The callback receives a transactionContext that may be used for `startTransaction` or `startSpan`.\n */\nfunction continueTrace(\n  {\n    sentryTrace,\n    baggage,\n  }\n\n,\n  callback,\n) {\n  const hub = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)();\n  const currentScope = hub.getScope();\n\n  const { traceparentData, dynamicSamplingContext, propagationContext } = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.tracingContextFromHeaders)(\n    sentryTrace,\n    baggage,\n  );\n\n  currentScope.setPropagationContext(propagationContext);\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && traceparentData) {\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log(`[Tracing] Continuing trace ${traceparentData.traceId}.`);\n  }\n\n  const transactionContext = {\n    ...traceparentData,\n    metadata: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.dropUndefinedKeys)({\n      dynamicSamplingContext: traceparentData && !dynamicSamplingContext ? {} : dynamicSamplingContext,\n    }),\n  };\n\n  if (!callback) {\n    return transactionContext;\n  }\n\n  return callback(transactionContext);\n}\n\nfunction createChildSpanOrTransaction(\n  hub,\n  parentSpan,\n  ctx,\n) {\n  if (!(0,_utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_2__.hasTracingEnabled)()) {\n    return undefined;\n  }\n  return parentSpan ? parentSpan.startChild(ctx) : hub.startTransaction(ctx);\n}\n\nfunction normalizeContext(context) {\n  const ctx = { ...context };\n  // If a name is set and a description is not, set the description to the name.\n  if (ctx.name !== undefined && ctx.description === undefined) {\n    ctx.description = ctx.name;\n  }\n\n  return ctx;\n}\n\n\n//# sourceMappingURL=trace.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/tracing/trace.js?")},"./node_modules/@sentry/core/esm/tracing/transaction.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Transaction: () => (/* binding */ Transaction)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dynamicSamplingContext.js */ \"./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _span_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./span.js */ \"./node_modules/@sentry/core/esm/tracing/span.js\");\n\n\n\n\n\n/** JSDoc */\nclass Transaction extends _span_js__WEBPACK_IMPORTED_MODULE_0__.Span  {\n\n  /**\n   * The reference to the current hub.\n   */\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(transactionContext, hub) {\n    super(transactionContext);\n    // We need to delete description since it's set by the Span class constructor\n    // but not needed for transactions.\n    delete this.description;\n\n    this._measurements = {};\n    this._contexts = {};\n\n    this._hub = hub || (0,_hub_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)();\n\n    this._name = transactionContext.name || '';\n\n    this.metadata = {\n      source: 'custom',\n      ...transactionContext.metadata,\n      spanMetadata: {},\n    };\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    this.transaction = this;\n\n    // If Dynamic Sampling Context is provided during the creation of the transaction, we freeze it as it usually means\n    // there is incoming Dynamic Sampling Context. (Either through an incoming request, a baggage meta-tag, or other means)\n    const incomingDynamicSamplingContext = this.metadata.dynamicSamplingContext;\n    if (incomingDynamicSamplingContext) {\n      // We shallow copy this in case anything writes to the original reference of the passed in `dynamicSamplingContext`\n      this._frozenDynamicSamplingContext = { ...incomingDynamicSamplingContext };\n    }\n  }\n\n  /** Getter for `name` property */\n   get name() {\n    return this._name;\n  }\n\n  /** Setter for `name` property, which also sets `source` as custom */\n   set name(newName) {\n    this.setName(newName);\n  }\n\n  /**\n   * JSDoc\n   */\n   setName(name, source = 'custom') {\n    this._name = name;\n    this.metadata.source = source;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n   initSpanRecorder(maxlen = 1000) {\n    if (!this.spanRecorder) {\n      this.spanRecorder = new _span_js__WEBPACK_IMPORTED_MODULE_0__.SpanRecorder(maxlen);\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setMeasurement(name, value, unit = '') {\n    this._measurements[name] = { value, unit };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setMetadata(newMetadata) {\n    this.metadata = { ...this.metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    const transaction = this._finishTransaction(endTimestamp);\n    if (!transaction) {\n      return undefined;\n    }\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    const spanContext = super.toContext();\n\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dropUndefinedKeys)({\n      ...spanContext,\n      name: this.name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(transactionContext) {\n    super.updateWithContext(transactionContext);\n\n    this.name = transactionContext.name || '';\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @experimental\n   */\n   getDynamicSamplingContext() {\n    if (this._frozenDynamicSamplingContext) {\n      return this._frozenDynamicSamplingContext;\n    }\n\n    const hub = this._hub || (0,_hub_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)();\n    const client = hub.getClient();\n\n    if (!client) return {};\n\n    const scope = hub.getScope();\n    const dsc = (0,_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_3__.getDynamicSamplingContextFromClient)(this.traceId, client, scope);\n\n    const maybeSampleRate = this.metadata.sampleRate;\n    if (maybeSampleRate !== undefined) {\n      dsc.sample_rate = `${maybeSampleRate}`;\n    }\n\n    // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n    const source = this.metadata.source;\n    if (source && source !== 'url') {\n      dsc.transaction = this.name;\n    }\n\n    if (this.sampled !== undefined) {\n      dsc.sampled = String(this.sampled);\n    }\n\n    // Uncomment if we want to make DSC immutable\n    // this._frozenDynamicSamplingContext = dsc;\n\n    return dsc;\n  }\n\n  /**\n   * Override the current hub with a new one.\n   * Used if you want another hub to finish the transaction.\n   *\n   * @internal\n   */\n   setHub(hub) {\n    this._hub = hub;\n  }\n\n  /**\n   * Finish the transaction & prepare the event to send to Sentry.\n   */\n   _finishTransaction(endTimestamp) {\n    // This transaction is already finished, so we should not flush it again.\n    if (this.endTimestamp !== undefined) {\n      return undefined;\n    }\n\n    if (!this.name) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this.name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.finish(endTimestamp);\n\n    const client = this._hub.getClient();\n    if (client && client.emit) {\n      client.emit('finishTransaction', this);\n    }\n\n    if (this.sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    const finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter(s => s !== this && s.endTimestamp) : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      this.endTimestamp = finishedSpans.reduce((prev, current) => {\n        if (prev.endTimestamp && current.endTimestamp) {\n          return prev.endTimestamp > current.endTimestamp ? prev : current;\n        }\n        return prev;\n      }).endTimestamp;\n    }\n\n    const metadata = this.metadata;\n\n    const transaction = {\n      contexts: {\n        ...this._contexts,\n        // We don't want to override trace context\n        trace: this.getTraceContext(),\n      },\n      spans: finishedSpans,\n      start_timestamp: this.startTimestamp,\n      tags: this.tags,\n      timestamp: this.endTimestamp,\n      transaction: this.name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        ...metadata,\n        dynamicSamplingContext: this.getDynamicSamplingContext(),\n      },\n      ...(metadata.source && {\n        transaction_info: {\n          source: metadata.source,\n        },\n      }),\n    };\n\n    const hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log(\n          '[Measurements] Adding measurements to transaction',\n          JSON.stringify(this._measurements, undefined, 2),\n        );\n      transaction.measurements = this._measurements;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log(`[Tracing] Finishing ${this.op} transaction: ${this.name}.`);\n\n    return transaction;\n  }\n}\n\n\n//# sourceMappingURL=transaction.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/tracing/transaction.js?")},"./node_modules/@sentry/core/esm/tracing/utils.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractTraceparentData: () => (/* binding */ extractTraceparentData),\n/* harmony export */   getActiveTransaction: () => (/* binding */ getActiveTransaction),\n/* harmony export */   stripUrlQueryAndFragment: () => (/* reexport safe */ _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.stripUrlQueryAndFragment)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/tracing.js");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/url.js");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hub.js */ "./node_modules/@sentry/core/esm/hub.js");\n\n\n\n\n/** Grabs active transaction off scope, if any */\nfunction getActiveTransaction(maybeHub) {\n  const hub = maybeHub || (0,_hub_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)();\n  const scope = hub.getScope();\n  return scope.getTransaction() ;\n}\n\n/**\n * The `extractTraceparentData` function and `TRACEPARENT_REGEXP` constant used\n * to be declared in this file. It was later moved into `@sentry/utils` as part of a\n * move to remove `@sentry/tracing` dependencies from `@sentry/node` (`extractTraceparentData`\n * is the only tracing function used by `@sentry/node`).\n *\n * These exports are kept here for backwards compatability\'s sake.\n *\n * See https://github.com/getsentry/sentry-javascript/issues/4642 for more details.\n *\n * @deprecated Import this function from `@sentry/utils` instead\n */\nconst extractTraceparentData = _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.extractTraceparentData;\n\n\n//# sourceMappingURL=utils.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/tracing/utils.js?')},"./node_modules/@sentry/core/esm/transports/base.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_TRANSPORT_BUFFER_SIZE: () => (/* binding */ DEFAULT_TRANSPORT_BUFFER_SIZE),\n/* harmony export */   createTransport: () => (/* binding */ createTransport)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/promisebuffer.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/ratelimit.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/syncpromise.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/error.js\");\n\n\nconst DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.makePromiseBuffer)(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n) {\n  let rateLimits = {};\n  const flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    const filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.forEachEnvelopeItem)(envelope, (item, type) => {\n      const envelopeItemDataCategory = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.envelopeItemTypeToDataCategory)(type);\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.isRateLimited)(rateLimits, envelopeItemDataCategory)) {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.resolvedSyncPromise)();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.createEnvelope)(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason) => {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.forEachEnvelopeItem)(filteredEnvelope, (item, type) => {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.envelopeItemTypeToDataCategory)(type), event);\n      });\n    };\n\n    const requestTask = () =>\n      makeRequest({ body: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.serializeEnvelope)(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.updateRateLimits)(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.SentryError) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.resolvedSyncPromise)();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  // We use this to identifify if the transport is the base transport\n  // TODO (v8): Remove this again as we'll no longer need it\n  send.__sentry__baseTransport__ = true;\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item, type) {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item )[1] : undefined;\n}\n\n\n//# sourceMappingURL=base.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/transports/base.js?")},"./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasTracingEnabled: () => (/* binding */ hasTracingEnabled)\n/* harmony export */ });\n/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../exports.js */ \"./node_modules/@sentry/core/esm/exports.js\");\n\n\n// Treeshakable guard to remove all code related to tracing\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nfunction hasTracingEnabled(\n  maybeOptions,\n) {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const client = (0,_exports_js__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n  const options = maybeOptions || (client && client.getOptions());\n  return !!options && (options.enableTracing || 'tracesSampleRate' in options || 'tracesSampler' in options);\n}\n\n\n//# sourceMappingURL=hasTracingEnabled.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js?")},"./node_modules/@sentry/core/esm/utils/isSentryRequestUrl.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isSentryRequestUrl: () => (/* binding */ isSentryRequestUrl)\n/* harmony export */ });\n/**\n * Checks whether given url points to Sentry server\n * @param url url to verify\n */\nfunction isSentryRequestUrl(url, hub) {\n  const client = hub.getClient();\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n\n  return checkDsn(url, dsn) || checkTunnel(url, tunnel);\n}\n\nfunction checkTunnel(url, tunnel) {\n  if (!tunnel) {\n    return false;\n  }\n\n  return removeTrailingSlash(url) === removeTrailingSlash(tunnel);\n}\n\nfunction checkDsn(url, dsn) {\n  return dsn ? url.includes(dsn.host) : false;\n}\n\nfunction removeTrailingSlash(str) {\n  return str[str.length - 1] === '/' ? str.slice(0, -1) : str;\n}\n\n\n//# sourceMappingURL=isSentryRequestUrl.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/utils/isSentryRequestUrl.js?")},"./node_modules/@sentry/core/esm/utils/prepareEvent.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyDebugIds: () => (/* binding */ applyDebugIds),\n/* harmony export */   applyDebugMeta: () => (/* binding */ applyDebugMeta),\n/* harmony export */   parseEventHintOrCaptureContext: () => (/* binding */ parseEventHintOrCaptureContext),\n/* harmony export */   prepareEvent: () => (/* binding */ prepareEvent)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/syncpromise.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../eventProcessors.js */ \"./node_modules/@sentry/core/esm/eventProcessors.js\");\n/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scope.js */ \"./node_modules/@sentry/core/esm/scope.js\");\n\n\n\n\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nfunction prepareEvent(\n  options,\n  event,\n  hint,\n  scope,\n  client,\n) {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = options;\n  const prepared = {\n    ...event,\n    event_id: event.event_id || hint.event_id || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)(),\n    timestamp: event.timestamp || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dateTimestampInSeconds)(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  let finalScope = scope;\n  if (hint.captureContext) {\n    finalScope = _scope_js__WEBPACK_IMPORTED_MODULE_2__.Scope.clone(finalScope).update(hint.captureContext);\n  }\n\n  if (hint.mechanism) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addExceptionMechanism)(prepared, hint.mechanism);\n  }\n\n  // We prepare the result here with a resolved Event.\n  let result = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.resolvedSyncPromise)(prepared);\n\n  const clientEventProcessors = client && client.getEventProcessors ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  //\n  // We need to check for the existence of `finalScope.getAttachments`\n  // because `getAttachments` can be undefined if users are using an older version\n  // of `@sentry/core` that does not have the `getAttachments` method.\n  // See: https://github.com/getsentry/sentry-javascript/issues/5229\n  if (finalScope) {\n    // Collect attachments from the hint and scope\n    if (finalScope.getAttachments) {\n      const attachments = [...(hint.attachments || []), ...finalScope.getAttachments()];\n\n      if (attachments.length) {\n        hint.attachments = attachments;\n      }\n    }\n\n    // In case we have a hub we reassign it.\n    result = finalScope.applyToEvent(prepared, hint, clientEventProcessors);\n  } else {\n    // Apply client & global event processors even if there is no scope\n    // TODO (v8): Update the order to be Global > Client\n    result = (0,_eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__.notifyEventProcessors)([...clientEventProcessors, ...(0,_eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__.getGlobalEventProcessors)()], prepared, hint);\n  }\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event, options) {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : _constants_js__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.truncate)(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.truncate)(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.truncate)(request.url, maxValueLength);\n  }\n}\n\nconst debugIdStackParserCache = new WeakMap();\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nfunction applyDebugIds(event, stackParser) {\n  const debugIdMap = _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  let debugIdStackFramesCache;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce((acc, debugIdStackTrace) => {\n    let parsedStack;\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      if (stackFrame.filename) {\n        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nfunction applyDebugMeta(event) {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.keys(filenameDebugIdMap).forEach(filename => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id: filenameDebugIdMap[filename],\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event, integrationNames) {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event, depth, maxBreadth) {\n  if (!event) {\n    return null;\n  }\n\n  const normalized = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      // We cannot use the spread operator here because `toJSON` on `span` is non-enumerable\n      if (span.data) {\n        span.data = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(span.data, depth, maxBreadth);\n      }\n      return span;\n    });\n  }\n\n  return normalized;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nfunction parseEventHintOrCaptureContext(\n  hint,\n) {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(\n  hint,\n) {\n  return hint instanceof _scope_js__WEBPACK_IMPORTED_MODULE_2__.Scope || typeof hint === 'function';\n}\n\nconst captureContextKeys = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'requestSession',\n  'propagationContext',\n] ;\n\nfunction hintIsScopeContext(hint) {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key ));\n}\n\n\n//# sourceMappingURL=prepareEvent.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/utils/prepareEvent.js?")},"./node_modules/@sentry/core/esm/version.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SDK_VERSION: () => (/* binding */ SDK_VERSION)\n/* harmony export */ });\nconst SDK_VERSION = '7.82.0';\n\n\n//# sourceMappingURL=version.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/core/esm/version.js?")},"./node_modules/@sentry/node/esm/anr/debugger.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   captureStackTrace: () => (/* binding */ captureStackTrace)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/anr.js\");\n/* harmony import */ var _module_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../module.js */ \"./node_modules/@sentry/node/esm/module.js\");\n/* harmony import */ var _websocket_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./websocket.js */ \"./node_modules/@sentry/node/esm/anr/websocket.js\");\n\n\n\n\n// The only messages we care about\n\n/**\n * Wraps a websocket connection with the basic logic of the Node debugger protocol.\n * @param url The URL to connect to\n * @param onMessage A callback that will be called with each return message from the debugger\n * @returns A function that can be used to send commands to the debugger\n */\nasync function webSocketDebugger(\n  url,\n  onMessage,\n) {\n  let id = 0;\n  const webSocket = await (0,_websocket_js__WEBPACK_IMPORTED_MODULE_0__.createWebSocketClient)(url);\n\n  webSocket.on('message', (data) => {\n    const message = JSON.parse(data.toString()) ;\n    onMessage(message);\n  });\n\n  return (method) => {\n    webSocket.send(JSON.stringify({ id: id++, method }));\n  };\n}\n\n/**\n * Captures stack traces from the Node debugger.\n * @param url The URL to connect to\n * @param callback A callback that will be called with the stack frames\n * @returns A function that triggers the debugger to pause and capture a stack trace\n */\nasync function captureStackTrace(url, callback) {\n  const sendCommand = await webSocketDebugger(\n    url,\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.createDebugPauseMessageHandler)(cmd => sendCommand(cmd), _module_js__WEBPACK_IMPORTED_MODULE_2__.getModuleFromFilename, callback),\n  );\n\n  return () => {\n    sendCommand('Debugger.enable');\n    sendCommand('Debugger.pause');\n  };\n}\n\n\n//# sourceMappingURL=debugger.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/anr/debugger.js?")},"./node_modules/@sentry/node/esm/anr/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   enableAnrDetection: () => (/* binding */ enableAnrDetection),\n/* harmony export */   isAnrChildProcess: () => (/* binding */ isAnrChildProcess)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/session.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/eventProcessors.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/anr.js\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _debugger_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./debugger.js */ \"./node_modules/@sentry/node/esm/anr/debugger.js\");\n\n\n\n\n\n\nconst DEFAULT_INTERVAL = 50;\nconst DEFAULT_HANG_THRESHOLD = 5000;\n\nfunction createAnrEvent(blockedMs, frames) {\n  return {\n    level: 'error',\n    exception: {\n      values: [\n        {\n          type: 'ApplicationNotResponding',\n          value: `Application Not Responding for at least ${blockedMs} ms`,\n          stacktrace: { frames },\n          mechanism: {\n            // This ensures the UI doesn't say 'Crashed in' for the stack trace\n            type: 'ANR',\n          },\n        },\n      ],\n    },\n  };\n}\n\n/**\n * Starts the node debugger and returns the inspector url.\n *\n * When inspector.url() returns undefined, it means the port is already in use so we try the next port.\n */\nfunction startInspector(startPort = 9229) {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const inspector = __webpack_require__(/*! inspector */ \"inspector\");\n  let inspectorUrl = undefined;\n  let port = startPort;\n\n  while (inspectorUrl === undefined && port < startPort + 100) {\n    inspector.open(port);\n    inspectorUrl = inspector.url();\n    port++;\n  }\n\n  return inspectorUrl;\n}\n\nfunction startChildProcess(options) {\n  function log(message, ...args) {\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`[ANR] ${message}`, ...args);\n  }\n\n  const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getCurrentHub)();\n\n  try {\n    const env = { ...process.env };\n    env.SENTRY_ANR_CHILD_PROCESS = 'true';\n\n    if (options.captureStackTrace) {\n      env.SENTRY_INSPECT_URL = startInspector();\n    }\n\n    log(`Spawning child process with execPath:'${process.execPath}' and entryScript:'${options.entryScript}'`);\n\n    const child = (0,child_process__WEBPACK_IMPORTED_MODULE_0__.spawn)(process.execPath, [options.entryScript], {\n      env,\n      stdio: _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.isEnabled() ? ['inherit', 'inherit', 'inherit', 'ipc'] : ['ignore', 'ignore', 'ignore', 'ipc'],\n    });\n    // The child process should not keep the main process alive\n    child.unref();\n\n    const timer = setInterval(() => {\n      try {\n        const currentSession = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([hub, 'access', _2 => _2.getScope, 'call', _3 => _3(), 'optionalAccess', _4 => _4.getSession, 'call', _5 => _5()]);\n        // We need to copy the session object and remove the toJSON method so it can be sent to the child process\n        // serialized without making it a SerializedSession\n        const session = currentSession ? { ...currentSession, toJSON: undefined } : undefined;\n        // message the child process to tell it the main event loop is still running\n        child.send({ session });\n      } catch (_) {\n        //\n      }\n    }, options.pollInterval);\n\n    child.on('message', (msg) => {\n      if (msg === 'session-ended') {\n        log('ANR event sent from child process. Clearing session in this process.');\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([hub, 'access', _6 => _6.getScope, 'call', _7 => _7(), 'optionalAccess', _8 => _8.setSession, 'call', _9 => _9(undefined)]);\n      }\n    });\n\n    const end = (type) => {\n      return (...args) => {\n        clearInterval(timer);\n        log(`Child process ${type}`, ...args);\n      };\n    };\n\n    child.on('error', end('error'));\n    child.on('disconnect', end('disconnect'));\n    child.on('exit', end('exit'));\n  } catch (e) {\n    log('Failed to start child process', e);\n  }\n}\n\nfunction createHrTimer() {\n  let lastPoll = process.hrtime();\n\n  return {\n    getTimeMs: () => {\n      const [seconds, nanoSeconds] = process.hrtime(lastPoll);\n      return Math.floor(seconds * 1e3 + nanoSeconds / 1e6);\n    },\n    reset: () => {\n      lastPoll = process.hrtime();\n    },\n  };\n}\n\nfunction handleChildProcess(options) {\n  process.title = 'sentry-anr';\n\n  function log(message) {\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`[ANR child process] ${message}`);\n  }\n\n  log('Started');\n  let session;\n\n  function sendAnrEvent(frames) {\n    if (session) {\n      log('Sending abnormal session');\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.updateSession)(session, { status: 'abnormal', abnormal_mechanism: 'anr_foreground' });\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([_sentry_core__WEBPACK_IMPORTED_MODULE_5__.getClient, 'call', _10 => _10(), 'optionalAccess', _11 => _11.sendSession, 'call', _12 => _12(session)]);\n\n      try {\n        // Notify the main process that the session has ended so the session can be cleared from the scope\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._optionalChain)([process, 'access', _13 => _13.send, 'optionalCall', _14 => _14('session-ended')]);\n      } catch (_) {\n        // ignore\n      }\n    }\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.captureEvent)(createAnrEvent(options.anrThreshold, frames));\n\n    void (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.flush)(3000).then(() => {\n      // We only capture one event to avoid spamming users with errors\n      process.exit();\n    });\n  }\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.addGlobalEventProcessor)(event => {\n    // Strip sdkProcessingMetadata from all child process events to remove trace info\n    delete event.sdkProcessingMetadata;\n    event.tags = {\n      ...event.tags,\n      'process.name': 'ANR',\n    };\n    return event;\n  });\n\n  let debuggerPause;\n\n  // if attachStackTrace is enabled, we'll have a debugger url to connect to\n  if (process.env.SENTRY_INSPECT_URL) {\n    log('Connecting to debugger');\n\n    debuggerPause = (0,_debugger_js__WEBPACK_IMPORTED_MODULE_7__.captureStackTrace)(process.env.SENTRY_INSPECT_URL, frames => {\n      log('Capturing event with stack frames');\n      sendAnrEvent(frames);\n    });\n  }\n\n  async function watchdogTimeout() {\n    log('Watchdog timeout');\n\n    try {\n      const pauseAndCapture = await debuggerPause;\n\n      if (pauseAndCapture) {\n        log('Pausing debugger to capture stack trace');\n        pauseAndCapture();\n        return;\n      }\n    } catch (_) {\n      // ignore\n    }\n\n    log('Capturing event');\n    sendAnrEvent();\n  }\n\n  const { poll } = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.watchdogTimer)(createHrTimer, options.pollInterval, options.anrThreshold, watchdogTimeout);\n\n  process.on('message', (msg) => {\n    if (msg.session) {\n      session = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.makeSession)(msg.session);\n    }\n    poll();\n  });\n  process.on('disconnect', () => {\n    // Parent process has exited.\n    process.exit();\n  });\n}\n\n/**\n * Returns true if the current process is an ANR child process.\n */\nfunction isAnrChildProcess() {\n  return !!process.send && !!process.env.SENTRY_ANR_CHILD_PROCESS;\n}\n\n/**\n * **Note** This feature is still in beta so there may be breaking changes in future releases.\n *\n * Starts a child process that detects Application Not Responding (ANR) errors.\n *\n * It's important to await on the returned promise before your app code to ensure this code does not run in the ANR\n * child process.\n *\n * ```js\n * import { init, enableAnrDetection } from '@sentry/node';\n *\n * init({ dsn: \"__DSN__\" });\n *\n * // with ESM + Node 14+\n * await enableAnrDetection({ captureStackTrace: true });\n * runApp();\n *\n * // with CJS or Node 10+\n * enableAnrDetection({ captureStackTrace: true }).then(() => {\n *   runApp();\n * });\n * ```\n */\nfunction enableAnrDetection(options) {\n  // When pm2 runs the script in cluster mode, process.argv[1] is the pm2 script and process.env.pm_exec_path is the\n  // path to the entry script\n  const entryScript = options.entryScript || process.env.pm_exec_path || process.argv[1];\n\n  const anrOptions = {\n    entryScript,\n    pollInterval: options.pollInterval || DEFAULT_INTERVAL,\n    anrThreshold: options.anrThreshold || DEFAULT_HANG_THRESHOLD,\n    captureStackTrace: !!options.captureStackTrace,\n    // eslint-disable-next-line deprecation/deprecation\n    debug: !!options.debug,\n  };\n\n  if (isAnrChildProcess()) {\n    handleChildProcess(anrOptions);\n    // In the child process, the promise never resolves which stops the app code from running\n    return new Promise(() => {\n      // Never resolve\n    });\n  } else {\n    startChildProcess(anrOptions);\n    // In the main process, the promise resolves immediately\n    return Promise.resolve();\n  }\n}\n\n\n//# sourceMappingURL=index.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/anr/index.js?")},"./node_modules/@sentry/node/esm/anr/websocket.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createWebSocketClient: () => (/* binding */ createWebSocketClient)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(http__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\n/* eslint-disable no-bitwise */\n\nconst OPCODES = {\n  CONTINUATION: 0,\n  TEXT: 1,\n  BINARY: 2,\n  TERMINATE: 8,\n  PING: 9,\n  PONG: 10,\n};\n\nconst GUID = '258EAFA5-E914-47DA-95CA-C5AB0DC85B11';\n\nfunction isCompleteFrame(frame) {\n  return Buffer.byteLength(frame.payload) >= frame.payloadLength;\n}\n\nfunction unmaskPayload(payload, mask, offset) {\n  if (mask === undefined) {\n    return payload;\n  }\n\n  for (let i = 0; i < payload.length; i++) {\n    payload[i] ^= mask[(offset + i) & 3];\n  }\n\n  return payload;\n}\n\nfunction buildFrame(opts) {\n  const { opcode, fin, data } = opts;\n\n  let offset = 6;\n  let dataLength = data.length;\n\n  if (dataLength >= 65536) {\n    offset += 8;\n    dataLength = 127;\n  } else if (dataLength > 125) {\n    offset += 2;\n    dataLength = 126;\n  }\n\n  const head = Buffer.allocUnsafe(offset);\n\n  head[0] = fin ? opcode | 128 : opcode;\n  head[1] = dataLength;\n\n  if (dataLength === 126) {\n    head.writeUInt16BE(data.length, 2);\n  } else if (dataLength === 127) {\n    head.writeUInt32BE(0, 2);\n    head.writeUInt32BE(data.length, 6);\n  }\n\n  const mask = crypto__WEBPACK_IMPORTED_MODULE_0__.randomBytes(4);\n  head[1] |= 128;\n  head[offset - 4] = mask[0];\n  head[offset - 3] = mask[1];\n  head[offset - 2] = mask[2];\n  head[offset - 1] = mask[3];\n\n  const masked = Buffer.alloc(dataLength);\n  for (let i = 0; i < dataLength; ++i) {\n    masked[i] = data[i] ^ mask[i & 3];\n  }\n\n  return Buffer.concat([head, masked]);\n}\n\nfunction parseFrame(buffer) {\n  const firstByte = buffer.readUInt8(0);\n  const isFinalFrame = Boolean((firstByte >>> 7) & 1);\n  const opcode = firstByte & 15;\n\n  const secondByte = buffer.readUInt8(1);\n  const isMasked = Boolean((secondByte >>> 7) & 1);\n\n  // Keep track of our current position as we advance through the buffer\n  let currentOffset = 2;\n  let payloadLength = secondByte & 127;\n  if (payloadLength > 125) {\n    if (payloadLength === 126) {\n      payloadLength = buffer.readUInt16BE(currentOffset);\n      currentOffset += 2;\n    } else if (payloadLength === 127) {\n      const leftPart = buffer.readUInt32BE(currentOffset);\n      currentOffset += 4;\n\n      // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n\n      // if payload length is greater than this number.\n      if (leftPart >= Number.MAX_SAFE_INTEGER) {\n        throw new Error('Unsupported WebSocket frame: payload length > 2^53 - 1');\n      }\n\n      const rightPart = buffer.readUInt32BE(currentOffset);\n      currentOffset += 4;\n\n      payloadLength = leftPart * Math.pow(2, 32) + rightPart;\n    } else {\n      throw new Error('Unknown payload length');\n    }\n  }\n\n  // Get the masking key if one exists\n  let mask;\n  if (isMasked) {\n    mask = buffer.slice(currentOffset, currentOffset + 4);\n    currentOffset += 4;\n  }\n\n  const payload = unmaskPayload(buffer.slice(currentOffset), mask, 0);\n\n  return {\n    fin: isFinalFrame,\n    opcode,\n    mask,\n    payload,\n    payloadLength,\n  };\n}\n\nfunction createKey(key) {\n  return crypto__WEBPACK_IMPORTED_MODULE_0__.createHash('sha1').update(`${key}${GUID}`).digest('base64');\n}\n\nclass WebSocketInterface extends events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter {\n\n   constructor(socket) {\n    super();\n    // When a frame is set here then any additional continuation frames payloads will be appended\n    this._unfinishedFrame = undefined;\n\n    // When a frame is set here, all additional chunks will be appended until we reach the correct payloadLength\n    this._incompleteFrame = undefined;\n\n    this._socket = socket;\n    this._alive = true;\n\n    socket.on('data', buff => {\n      this._addBuffer(buff);\n    });\n\n    socket.on('error', (err) => {\n      if (err.code === 'ECONNRESET') {\n        this.emit('close');\n      } else {\n        this.emit('error');\n      }\n    });\n\n    socket.on('close', () => {\n      this.end();\n    });\n  }\n\n   end() {\n    if (!this._alive) {\n      return;\n    }\n\n    this._alive = false;\n    this.emit('close');\n    this._socket.end();\n  }\n\n   send(buff) {\n    this._sendFrame({\n      opcode: OPCODES.TEXT,\n      fin: true,\n      data: Buffer.from(buff),\n    });\n  }\n\n   _sendFrame(frameOpts) {\n    this._socket.write(buildFrame(frameOpts));\n  }\n\n   _completeFrame(frame) {\n    // If we have an unfinished frame then only allow continuations\n    const { _unfinishedFrame: unfinishedFrame } = this;\n    if (unfinishedFrame !== undefined) {\n      if (frame.opcode === OPCODES.CONTINUATION) {\n        unfinishedFrame.payload = Buffer.concat([\n          unfinishedFrame.payload,\n          unmaskPayload(frame.payload, unfinishedFrame.mask, unfinishedFrame.payload.length),\n        ]);\n\n        if (frame.fin) {\n          this._unfinishedFrame = undefined;\n          this._completeFrame(unfinishedFrame);\n        }\n        return;\n      } else {\n        // Silently ignore the previous frame...\n        this._unfinishedFrame = undefined;\n      }\n    }\n\n    if (frame.fin) {\n      if (frame.opcode === OPCODES.PING) {\n        this._sendFrame({\n          opcode: OPCODES.PONG,\n          fin: true,\n          data: frame.payload,\n        });\n      } else {\n        // Trim off any excess payload\n        let excess;\n        if (frame.payload.length > frame.payloadLength) {\n          excess = frame.payload.slice(frame.payloadLength);\n          frame.payload = frame.payload.slice(0, frame.payloadLength);\n        }\n\n        this.emit('message', frame.payload);\n\n        if (excess !== undefined) {\n          this._addBuffer(excess);\n        }\n      }\n    } else {\n      this._unfinishedFrame = frame;\n    }\n  }\n\n   _addBufferToIncompleteFrame(incompleteFrame, buff) {\n    incompleteFrame.payload = Buffer.concat([\n      incompleteFrame.payload,\n      unmaskPayload(buff, incompleteFrame.mask, incompleteFrame.payload.length),\n    ]);\n\n    if (isCompleteFrame(incompleteFrame)) {\n      this._incompleteFrame = undefined;\n      this._completeFrame(incompleteFrame);\n    }\n  }\n\n   _addBuffer(buff) {\n    // Check if we're still waiting for the rest of a payload\n    const { _incompleteFrame: incompleteFrame } = this;\n    if (incompleteFrame !== undefined) {\n      this._addBufferToIncompleteFrame(incompleteFrame, buff);\n      return;\n    }\n\n    // There needs to be atleast two values in the buffer for us to parse\n    // a frame from it.\n    // See: https://github.com/getsentry/sentry-javascript/issues/9307\n    if (buff.length <= 1) {\n      return;\n    }\n\n    const frame = parseFrame(buff);\n\n    if (isCompleteFrame(frame)) {\n      // Frame has been completed!\n      this._completeFrame(frame);\n    } else {\n      this._incompleteFrame = frame;\n    }\n  }\n}\n\n/**\n * Creates a WebSocket client\n */\nasync function createWebSocketClient(rawUrl) {\n  const parts = url__WEBPACK_IMPORTED_MODULE_3__.parse(rawUrl);\n\n  return new Promise((resolve, reject) => {\n    const key = crypto__WEBPACK_IMPORTED_MODULE_0__.randomBytes(16).toString('base64');\n    const digest = createKey(key);\n\n    const req = http__WEBPACK_IMPORTED_MODULE_2__.request({\n      hostname: parts.hostname,\n      port: parts.port,\n      path: parts.path,\n      method: 'GET',\n      headers: {\n        Connection: 'Upgrade',\n        Upgrade: 'websocket',\n        'Sec-WebSocket-Key': key,\n        'Sec-WebSocket-Version': '13',\n      },\n    });\n\n    req.on('response', (res) => {\n      if (res.statusCode && res.statusCode >= 400) {\n        process.stderr.write(`Unexpected HTTP code: ${res.statusCode}\\n`);\n        res.pipe(process.stderr);\n      } else {\n        res.pipe(process.stderr);\n      }\n    });\n\n    req.on('upgrade', (res, socket) => {\n      if (res.headers['sec-websocket-accept'] !== digest) {\n        socket.end();\n        reject(new Error(`Digest mismatch ${digest} !== ${res.headers['sec-websocket-accept']}`));\n        return;\n      }\n\n      const client = new WebSocketInterface(socket);\n      resolve(client);\n    });\n\n    req.on('error', err => {\n      reject(err);\n    });\n\n    req.end();\n  });\n}\n\n\n//# sourceMappingURL=websocket.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/anr/websocket.js?")},"./node_modules/@sentry/node/esm/async/domain.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setDomainAsyncContextStrategy: () => (/* binding */ setDomainAsyncContextStrategy)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/hub.js");\n/* harmony import */ var domain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! domain */ "domain");\n/* harmony import */ var domain__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(domain__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n\nfunction getActiveDomain() {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n  return domain__WEBPACK_IMPORTED_MODULE_0__.active ;\n}\n\nfunction getCurrentHub() {\n  const activeDomain = getActiveDomain();\n\n  // If there\'s no active domain, just return undefined and the global hub will be used\n  if (!activeDomain) {\n    return undefined;\n  }\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.ensureHubOnCarrier)(activeDomain);\n\n  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getHubFromCarrier)(activeDomain);\n}\n\nfunction createNewHub(parent) {\n  const carrier = {};\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.ensureHubOnCarrier)(carrier, parent);\n  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getHubFromCarrier)(carrier);\n}\n\nfunction runWithAsyncContext(callback, options) {\n  const activeDomain = getActiveDomain();\n\n  if (activeDomain && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([options, \'optionalAccess\', _ => _.reuseExisting])) {\n    // We\'re already in a domain, so we don\'t need to create a new one, just call the callback with the current hub\n    return callback();\n  }\n\n  const local = domain__WEBPACK_IMPORTED_MODULE_0__.create() ;\n\n  const parentHub = activeDomain ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getHubFromCarrier)(activeDomain) : undefined;\n  const newHub = createNewHub(parentHub);\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.setHubOnCarrier)(local, newHub);\n\n  return local.bind(() => {\n    return callback();\n  })();\n}\n\n/**\n * Sets the async context strategy to use Node.js domains.\n */\nfunction setDomainAsyncContextStrategy() {\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.setAsyncContextStrategy)({ getCurrentHub, runWithAsyncContext });\n}\n\n\n//# sourceMappingURL=domain.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/async/domain.js?')},"./node_modules/@sentry/node/esm/async/hooks.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setHooksAsyncContextStrategy: () => (/* binding */ setHooksAsyncContextStrategy)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/hub.js");\n/* harmony import */ var async_hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! async_hooks */ "async_hooks");\n/* harmony import */ var async_hooks__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(async_hooks__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n\nlet asyncStorage;\n\n/**\n * Sets the async context strategy to use AsyncLocalStorage which requires Node v12.17.0 or v13.10.0.\n */\nfunction setHooksAsyncContextStrategy() {\n  if (!asyncStorage) {\n    asyncStorage = new async_hooks__WEBPACK_IMPORTED_MODULE_0__.AsyncLocalStorage();\n  }\n\n  function getCurrentHub() {\n    return asyncStorage.getStore();\n  }\n\n  function createNewHub(parent) {\n    const carrier = {};\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.ensureHubOnCarrier)(carrier, parent);\n    return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getHubFromCarrier)(carrier);\n  }\n\n  function runWithAsyncContext(callback, options) {\n    const existingHub = getCurrentHub();\n\n    if (existingHub && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([options, \'optionalAccess\', _ => _.reuseExisting])) {\n      // We\'re already in an async context, so we don\'t need to create a new one\n      // just call the callback with the current hub\n      return callback();\n    }\n\n    const newHub = createNewHub(existingHub);\n\n    return asyncStorage.run(newHub, () => {\n      return callback();\n    });\n  }\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.setAsyncContextStrategy)({ getCurrentHub, runWithAsyncContext });\n}\n\n\n//# sourceMappingURL=hooks.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/async/hooks.js?')},"./node_modules/@sentry/node/esm/async/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setNodeAsyncContextStrategy: () => (/* binding */ setNodeAsyncContextStrategy)\n/* harmony export */ });\n/* harmony import */ var _nodeVersion_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../nodeVersion.js */ "./node_modules/@sentry/node/esm/nodeVersion.js");\n/* harmony import */ var _domain_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./domain.js */ "./node_modules/@sentry/node/esm/async/domain.js");\n/* harmony import */ var _hooks_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hooks.js */ "./node_modules/@sentry/node/esm/async/hooks.js");\n\n\n\n\n/**\n * Sets the correct async context strategy for Node.js\n *\n * Node.js >= 14 uses AsyncLocalStorage\n * Node.js < 14 uses domains\n */\nfunction setNodeAsyncContextStrategy() {\n  if (_nodeVersion_js__WEBPACK_IMPORTED_MODULE_0__.NODE_VERSION.major && _nodeVersion_js__WEBPACK_IMPORTED_MODULE_0__.NODE_VERSION.major >= 14) {\n    (0,_hooks_js__WEBPACK_IMPORTED_MODULE_1__.setHooksAsyncContextStrategy)();\n  } else {\n    (0,_domain_js__WEBPACK_IMPORTED_MODULE_2__.setDomainAsyncContextStrategy)();\n  }\n}\n\n\n//# sourceMappingURL=index.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/async/index.js?')},"./node_modules/@sentry/node/esm/client.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NodeClient: () => (/* binding */ NodeClient)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/server-runtime-client.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/version.js\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n\n/**\n * The Sentry Node SDK Client.\n *\n * @see NodeClientOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass NodeClient extends _sentry_core__WEBPACK_IMPORTED_MODULE_2__.ServerRuntimeClient {\n  /**\n   * Creates a new Node SDK instance.\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.node',\n      packages: [\n        {\n          name: 'npm:@sentry/node',\n          version: _sentry_core__WEBPACK_IMPORTED_MODULE_3__.SDK_VERSION,\n        },\n      ],\n      version: _sentry_core__WEBPACK_IMPORTED_MODULE_3__.SDK_VERSION,\n    };\n\n    // Until node supports global TextEncoder in all versions we support, we are forced to pass it from util\n    options.transportOptions = {\n      textEncoder: new util__WEBPACK_IMPORTED_MODULE_1__.TextEncoder(),\n      ...options.transportOptions,\n    };\n\n    const clientOptions = {\n      ...options,\n      platform: 'node',\n      runtime: { name: 'node', version: global.process.version },\n      serverName: options.serverName || global.process.env.SENTRY_NAME || os__WEBPACK_IMPORTED_MODULE_0__.hostname(),\n    };\n\n    super(clientOptions);\n  }\n}\n\n\n//# sourceMappingURL=client.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/client.js?")},"./node_modules/@sentry/node/esm/handlers.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   errorHandler: () => (/* binding */ errorHandler),\n/* harmony export */   extractRequestData: () => (/* reexport safe */ _requestDataDeprecated_js__WEBPACK_IMPORTED_MODULE_0__.extractRequestData),\n/* harmony export */   parseRequest: () => (/* reexport safe */ _requestDataDeprecated_js__WEBPACK_IMPORTED_MODULE_0__.parseRequest),\n/* harmony export */   requestHandler: () => (/* binding */ requestHandler),\n/* harmony export */   tracingHandler: () => (/* binding */ tracingHandler),\n/* harmony export */   trpcMiddleware: () => (/* binding */ trpcMiddleware)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/requestdata.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _sdk_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./sdk.js */ \"./node_modules/@sentry/node/esm/sdk.js\");\n/* harmony import */ var _requestDataDeprecated_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestDataDeprecated.js */ \"./node_modules/@sentry/node/esm/requestDataDeprecated.js\");\n\n\n\n\n\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Express-compatible tracing handler.\n * @see Exposed as `Handlers.tracingHandler`\n */\nfunction tracingHandler()\n\n {\n  return function sentryTracingMiddleware(\n    req,\n    res,\n    next,\n  ) {\n    const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)();\n    const options = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([hub, 'access', _ => _.getClient, 'call', _2 => _2(), 'optionalAccess', _3 => _3.getOptions, 'call', _4 => _4()]);\n\n    if (\n      !options ||\n      options.instrumenter !== 'sentry' ||\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([req, 'access', _5 => _5.method, 'optionalAccess', _6 => _6.toUpperCase, 'call', _7 => _7()]) === 'OPTIONS' ||\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([req, 'access', _8 => _8.method, 'optionalAccess', _9 => _9.toUpperCase, 'call', _10 => _10()]) === 'HEAD'\n    ) {\n      return next();\n    }\n\n    const sentryTrace = req.headers && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.isString)(req.headers['sentry-trace']) ? req.headers['sentry-trace'] : undefined;\n    const baggage = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([req, 'access', _11 => _11.headers, 'optionalAccess', _12 => _12.baggage]);\n    if (!(0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.hasTracingEnabled)(options)) {\n      return next();\n    }\n\n    const [name, source] = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.extractPathForTransaction)(req, { path: true, method: true });\n    const transaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.continueTrace)({ sentryTrace, baggage }, ctx =>\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_7__.startTransaction)(\n        {\n          name,\n          op: 'http.server',\n          origin: 'auto.http.node.tracingHandler',\n          ...ctx,\n          metadata: {\n            ...ctx.metadata,\n            // The request should already have been stored in `scope.sdkProcessingMetadata` (which will become\n            // `event.sdkProcessingMetadata` the same way the metadata here will) by `sentryRequestMiddleware`, but on the\n            // off chance someone is using `sentryTracingMiddleware` without `sentryRequestMiddleware`, it doesn't hurt to\n            // be sure\n            request: req,\n            source,\n          },\n        },\n        // extra context passed to the tracesSampler\n        { request: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.extractRequestData)(req) },\n      ),\n    );\n\n    // We put the transaction on the scope so users can attach children to it\n    hub.configureScope(scope => {\n      scope.setSpan(transaction);\n    });\n\n    // We also set __sentry_transaction on the response so people can grab the transaction there to add\n    // spans to it later.\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    (res ).__sentry_transaction = transaction;\n\n    res.once('finish', () => {\n      // Push `transaction.finish` to the next event loop so open spans have a chance to finish before the transaction\n      // closes\n      setImmediate(() => {\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.addRequestDataToTransaction)(transaction, req);\n        transaction.setHttpStatus(res.statusCode);\n        transaction.finish();\n      });\n    });\n\n    next();\n  };\n}\n\n/**\n * Backwards compatibility shim which can be removed in v8. Forces the given options to follow the\n * `AddRequestDataToEventOptions` interface.\n *\n * TODO (v8): Get rid of this, and stop passing `requestDataOptionsFromExpressHandler` to `setSDKProcessingMetadata`.\n */\nfunction convertReqHandlerOptsToAddReqDataOpts(\n  reqHandlerOptions = {},\n) {\n  let addRequestDataOptions;\n\n  if ('include' in reqHandlerOptions) {\n    addRequestDataOptions = { include: reqHandlerOptions.include };\n  } else {\n    // eslint-disable-next-line deprecation/deprecation\n    const { ip, request, transaction, user } = reqHandlerOptions ;\n\n    if (ip || request || transaction || user) {\n      addRequestDataOptions = { include: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.dropUndefinedKeys)({ ip, request, transaction, user }) };\n    }\n  }\n\n  return addRequestDataOptions;\n}\n\n/**\n * Express compatible request handler.\n * @see Exposed as `Handlers.requestHandler`\n */\nfunction requestHandler(\n  options,\n) {\n  // TODO (v8): Get rid of this\n  const requestDataOptions = convertReqHandlerOptsToAddReqDataOpts(options);\n\n  const currentHub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)();\n  const client = currentHub.getClient();\n  // Initialise an instance of SessionFlusher on the client when `autoSessionTracking` is enabled and the\n  // `requestHandler` middleware is used indicating that we are running in SessionAggregates mode\n  if (client && (0,_sdk_js__WEBPACK_IMPORTED_MODULE_9__.isAutoSessionTrackingEnabled)(client)) {\n    client.initSessionFlusher();\n\n    // If Scope contains a Single mode Session, it is removed in favor of using Session Aggregates mode\n    const scope = currentHub.getScope();\n    if (scope.getSession()) {\n      scope.setSession();\n    }\n  }\n\n  return function sentryRequestMiddleware(\n    req,\n    res,\n    next,\n  ) {\n    if (options && options.flushTimeout && options.flushTimeout > 0) {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const _end = res.end;\n      res.end = function (chunk, encoding, cb) {\n        void (0,_sentry_core__WEBPACK_IMPORTED_MODULE_7__.flush)(options.flushTimeout)\n          .then(() => {\n            _end.call(this, chunk, encoding, cb);\n          })\n          .then(null, e => {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_10__.logger.error(e);\n            _end.call(this, chunk, encoding, cb);\n          });\n      };\n    }\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.runWithAsyncContext)(() => {\n      const currentHub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)();\n      currentHub.configureScope(scope => {\n        scope.setSDKProcessingMetadata({\n          request: req,\n          // TODO (v8): Stop passing this\n          requestDataOptionsFromExpressHandler: requestDataOptions,\n        });\n\n        const client = currentHub.getClient();\n        if ((0,_sdk_js__WEBPACK_IMPORTED_MODULE_9__.isAutoSessionTrackingEnabled)(client)) {\n          const scope = currentHub.getScope();\n          // Set `status` of `RequestSession` to Ok, at the beginning of the request\n          scope.setRequestSession({ status: 'ok' });\n        }\n      });\n\n      res.once('finish', () => {\n        const client = currentHub.getClient();\n        if ((0,_sdk_js__WEBPACK_IMPORTED_MODULE_9__.isAutoSessionTrackingEnabled)(client)) {\n          setImmediate(() => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (client && (client )._captureRequestSession) {\n              // Calling _captureRequestSession to capture request session at the end of the request by incrementing\n              // the correct SessionAggregates bucket i.e. crashed, errored or exited\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n              (client )._captureRequestSession();\n            }\n          });\n        }\n      });\n      next();\n    });\n  };\n}\n\n/** JSDoc */\n\n/** JSDoc */\nfunction getStatusCodeFromResponse(error) {\n  const statusCode = error.status || error.statusCode || error.status_code || (error.output && error.output.statusCode);\n  return statusCode ? parseInt(statusCode , 10) : 500;\n}\n\n/** Returns true if response code is internal server error */\nfunction defaultShouldHandleError(error) {\n  const status = getStatusCodeFromResponse(error);\n  return status >= 500;\n}\n\n/**\n * Express compatible error handler.\n * @see Exposed as `Handlers.errorHandler`\n */\nfunction errorHandler(options\n\n)\n\n {\n  return function sentryErrorMiddleware(\n    error,\n    _req,\n    res,\n    next,\n  ) {\n    const shouldHandleError = (options && options.shouldHandleError) || defaultShouldHandleError;\n\n    if (shouldHandleError(error)) {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_7__.withScope)(_scope => {\n        // The request should already have been stored in `scope.sdkProcessingMetadata` by `sentryRequestMiddleware`,\n        // but on the off chance someone is using `sentryErrorMiddleware` without `sentryRequestMiddleware`, it doesn't\n        // hurt to be sure\n        _scope.setSDKProcessingMetadata({ request: _req });\n\n        // For some reason we need to set the transaction on the scope again\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        const transaction = (res ).__sentry_transaction ;\n        if (transaction && _scope.getSpan() === undefined) {\n          _scope.setSpan(transaction);\n        }\n\n        const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_7__.getClient)();\n        if (client && (0,_sdk_js__WEBPACK_IMPORTED_MODULE_9__.isAutoSessionTrackingEnabled)(client)) {\n          // Check if the `SessionFlusher` is instantiated on the client to go into this branch that marks the\n          // `requestSession.status` as `Crashed`, and this check is necessary because the `SessionFlusher` is only\n          // instantiated when the the`requestHandler` middleware is initialised, which indicates that we should be\n          // running in SessionAggregates mode\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          const isSessionAggregatesMode = (client )._sessionFlusher !== undefined;\n          if (isSessionAggregatesMode) {\n            const requestSession = _scope.getRequestSession();\n            // If an error bubbles to the `errorHandler`, then this is an unhandled error, and should be reported as a\n            // Crashed session. The `_requestSession.status` is checked to ensure that this error is happening within\n            // the bounds of a request, and if so the status is updated\n            if (requestSession && requestSession.status !== undefined) {\n              requestSession.status = 'crashed';\n            }\n          }\n        }\n\n        const eventId = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_7__.captureException)(error, { mechanism: { type: 'middleware', handled: false } });\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        (res ).sentry = eventId;\n        next(error);\n      });\n\n      return;\n    }\n\n    next(error);\n  };\n}\n\n/**\n * Sentry tRPC middleware that names the handling transaction after the called procedure.\n *\n * Use the Sentry tRPC middleware in combination with the Sentry server integration,\n * e.g. Express Request Handlers or Next.js SDK.\n */\nfunction trpcMiddleware(options = {}) {\n  return function ({ path, type, next, rawInput }) {\n    const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)();\n    const clientOptions = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([hub, 'access', _13 => _13.getClient, 'call', _14 => _14(), 'optionalAccess', _15 => _15.getOptions, 'call', _16 => _16()]);\n    const sentryTransaction = hub.getScope().getTransaction();\n\n    if (sentryTransaction) {\n      sentryTransaction.setName(`trpc/${path}`, 'route');\n      sentryTransaction.op = 'rpc.server';\n\n      const trpcContext = {\n        procedure_type: type,\n      };\n\n      if (options.attachRpcInput !== undefined ? options.attachRpcInput : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([clientOptions, 'optionalAccess', _17 => _17.sendDefaultPii])) {\n        trpcContext.input = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_11__.normalize)(rawInput);\n      }\n\n      sentryTransaction.setContext('trpc', trpcContext);\n    }\n\n    function shouldCaptureError(e) {\n      if (typeof e === 'object' && e && 'code' in e) {\n        // Is likely TRPCError - we only want to capture internal server errors\n        return e.code === 'INTERNAL_SERVER_ERROR';\n      } else {\n        // Is likely random error that bubbles up\n        return true;\n      }\n    }\n\n    function handleErrorCase(e) {\n      if (shouldCaptureError(e)) {\n        (0,_sentry_core__WEBPACK_IMPORTED_MODULE_7__.captureException)(e, { mechanism: { handled: false } });\n      }\n    }\n\n    let maybePromiseResult;\n\n    try {\n      maybePromiseResult = next();\n    } catch (e) {\n      handleErrorCase(e);\n      throw e;\n    }\n\n    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.isThenable)(maybePromiseResult)) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      Promise.resolve(maybePromiseResult).then(null, e => {\n        handleErrorCase(e);\n      });\n    }\n\n    // We return the original promise just to be safe.\n    return maybePromiseResult;\n  };\n}\n\n\n//# sourceMappingURL=handlers.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/handlers.js?")},"./node_modules/@sentry/node/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_USER_INCLUDES: () => (/* reexport safe */ _sentry_utils__WEBPACK_IMPORTED_MODULE_15__.DEFAULT_USER_INCLUDES),\n/* harmony export */   Handlers: () => (/* reexport module object */ _handlers_js__WEBPACK_IMPORTED_MODULE_19__),\n/* harmony export */   Hub: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.Hub),\n/* harmony export */   Integrations: () => (/* binding */ INTEGRATIONS),\n/* harmony export */   NodeClient: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_12__.NodeClient),\n/* harmony export */   SDK_VERSION: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_1__.SDK_VERSION),\n/* harmony export */   Scope: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_2__.Scope),\n/* harmony export */   addBreadcrumb: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.addBreadcrumb),\n/* harmony export */   addGlobalEventProcessor: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_4__.addGlobalEventProcessor),\n/* harmony export */   addIntegration: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_5__.addIntegration),\n/* harmony export */   addRequestDataToEvent: () => (/* reexport safe */ _sentry_utils__WEBPACK_IMPORTED_MODULE_15__.addRequestDataToEvent),\n/* harmony export */   autoDiscoverNodePerformanceMonitoringIntegrations: () => (/* reexport safe */ _tracing_index_js__WEBPACK_IMPORTED_MODULE_11__.autoDiscoverNodePerformanceMonitoringIntegrations),\n/* harmony export */   captureCheckIn: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.captureCheckIn),\n/* harmony export */   captureEvent: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.captureEvent),\n/* harmony export */   captureException: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.captureException),\n/* harmony export */   captureMessage: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.captureMessage),\n/* harmony export */   close: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.close),\n/* harmony export */   configureScope: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.configureScope),\n/* harmony export */   continueTrace: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_6__.continueTrace),\n/* harmony export */   createTransport: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_7__.createTransport),\n/* harmony export */   deepReadDirSync: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_16__.deepReadDirSync),\n/* harmony export */   defaultIntegrations: () => (/* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_14__.defaultIntegrations),\n/* harmony export */   defaultStackParser: () => (/* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_14__.defaultStackParser),\n/* harmony export */   enableAnrDetection: () => (/* reexport safe */ _anr_index_js__WEBPACK_IMPORTED_MODULE_18__.enableAnrDetection),\n/* harmony export */   extractRequestData: () => (/* reexport safe */ _sentry_utils__WEBPACK_IMPORTED_MODULE_15__.extractRequestData),\n/* harmony export */   extractTraceparentData: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_8__.extractTraceparentData),\n/* harmony export */   flush: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.flush),\n/* harmony export */   getActiveSpan: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_6__.getActiveSpan),\n/* harmony export */   getActiveTransaction: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_8__.getActiveTransaction),\n/* harmony export */   getClient: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.getClient),\n/* harmony export */   getCurrentHub: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub),\n/* harmony export */   getHubFromCarrier: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.getHubFromCarrier),\n/* harmony export */   getModuleFromFilename: () => (/* reexport safe */ _module_js__WEBPACK_IMPORTED_MODULE_17__.getModuleFromFilename),\n/* harmony export */   getSentryRelease: () => (/* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_14__.getSentryRelease),\n/* harmony export */   init: () => (/* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_14__.init),\n/* harmony export */   lastEventId: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.lastEventId),\n/* harmony export */   makeMain: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.makeMain),\n/* harmony export */   makeNodeTransport: () => (/* reexport safe */ _transports_http_js__WEBPACK_IMPORTED_MODULE_13__.makeNodeTransport),\n/* harmony export */   runWithAsyncContext: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.runWithAsyncContext),\n/* harmony export */   setContext: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.setContext),\n/* harmony export */   setExtra: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.setExtra),\n/* harmony export */   setExtras: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.setExtras),\n/* harmony export */   setMeasurement: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_9__.setMeasurement),\n/* harmony export */   setTag: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.setTag),\n/* harmony export */   setTags: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.setTags),\n/* harmony export */   setUser: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.setUser),\n/* harmony export */   spanStatusfromHttpCode: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_10__.spanStatusfromHttpCode),\n/* harmony export */   startActiveSpan: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_6__.startActiveSpan),\n/* harmony export */   startInactiveSpan: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_6__.startInactiveSpan),\n/* harmony export */   startSpan: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_6__.startSpan),\n/* harmony export */   startSpanManual: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_6__.startSpanManual),\n/* harmony export */   startTransaction: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.startTransaction),\n/* harmony export */   trace: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_6__.trace),\n/* harmony export */   withMonitor: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.withMonitor),\n/* harmony export */   withScope: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_3__.withScope)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/integrations/index.js");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/hub.js");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/version.js");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/scope.js");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/exports.js");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/eventProcessors.js");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/integration.js");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/tracing/trace.js");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/transports/base.js");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/tracing/utils.js");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/tracing/measurement.js");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/tracing/span.js");\n/* harmony import */ var _tracing_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./tracing/index.js */ "./node_modules/@sentry/node/esm/tracing/index.js");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./client.js */ "./node_modules/@sentry/node/esm/client.js");\n/* harmony import */ var _transports_http_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./transports/http.js */ "./node_modules/@sentry/node/esm/transports/http.js");\n/* harmony import */ var _sdk_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./sdk.js */ "./node_modules/@sentry/node/esm/sdk.js");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/requestdata.js");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./utils.js */ "./node_modules/@sentry/node/esm/utils.js");\n/* harmony import */ var _module_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./module.js */ "./node_modules/@sentry/node/esm/module.js");\n/* harmony import */ var _anr_index_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./anr/index.js */ "./node_modules/@sentry/node/esm/anr/index.js");\n/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./handlers.js */ "./node_modules/@sentry/node/esm/handlers.js");\n/* harmony import */ var _integrations_index_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./integrations/index.js */ "./node_modules/@sentry/node/esm/integrations/index.js");\n/* harmony import */ var _tracing_integrations_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./tracing/integrations.js */ "./node_modules/@sentry/node/esm/tracing/integrations.js");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst INTEGRATIONS = {\n  ..._sentry_core__WEBPACK_IMPORTED_MODULE_20__,\n  ..._integrations_index_js__WEBPACK_IMPORTED_MODULE_21__,\n  ..._tracing_integrations_js__WEBPACK_IMPORTED_MODULE_22__,\n};\n\n\n//# sourceMappingURL=index.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/index.js?')},"./node_modules/@sentry/node/esm/integrations/console.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Console: () => (/* binding */ Console)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/hub.js");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/instrument/console.js");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/severity.js");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! util */ "util");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n\n/** Console module integration */\nclass Console  {constructor() { Console.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = \'Console\';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Console.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addConsoleInstrumentationHandler)(({ args, level }) => {\n      const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getCurrentHub)();\n\n      if (!hub.getIntegration(Console)) {\n        return;\n      }\n\n      hub.addBreadcrumb(\n        {\n          category: \'console\',\n          level: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.severityLevelFromString)(level),\n          message: util__WEBPACK_IMPORTED_MODULE_0__.format.apply(undefined, args),\n        },\n        {\n          input: [...args],\n          level,\n        },\n      );\n    });\n  }\n} Console.__initStatic();\n\n\n//# sourceMappingURL=console.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/integrations/console.js?')},"./node_modules/@sentry/node/esm/integrations/context.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Context: () => (/* binding */ Context),\n/* harmony export */   getDeviceContext: () => (/* binding */ getDeviceContext),\n/* harmony export */   readDirAsync: () => (/* binding */ readDirAsync),\n/* harmony export */   readFileAsync: () => (/* binding */ readFileAsync)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\n\n// TODO: Required until we drop support for Node v8\nconst readFileAsync = (0,util__WEBPACK_IMPORTED_MODULE_4__.promisify)(fs__WEBPACK_IMPORTED_MODULE_1__.readFile);\nconst readDirAsync = (0,util__WEBPACK_IMPORTED_MODULE_4__.promisify)(fs__WEBPACK_IMPORTED_MODULE_1__.readdir);\n\n/** Add node modules / packages to the event */\nclass Context  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Context';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Context.id;}\n\n  /**\n   * Caches context so it's only evaluated once\n   */\n\n   constructor(\n      _options = {\n      app: true,\n      os: true,\n      device: true,\n      culture: true,\n      cloudResource: true,\n    },\n  ) {this._options = _options;Context.prototype.__init.call(this);}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor) {\n    addGlobalEventProcessor(event => this.addContext(event));\n  }\n\n  /** Processes an event and adds context */\n   async addContext(event) {\n    if (this._cachedContext === undefined) {\n      this._cachedContext = this._getContexts();\n    }\n\n    const updatedContext = this._updateContext(await this._cachedContext);\n\n    event.contexts = {\n      ...event.contexts,\n      app: { ...updatedContext.app, ...(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._optionalChain)([event, 'access', _ => _.contexts, 'optionalAccess', _2 => _2.app]) },\n      os: { ...updatedContext.os, ...(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._optionalChain)([event, 'access', _3 => _3.contexts, 'optionalAccess', _4 => _4.os]) },\n      device: { ...updatedContext.device, ...(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._optionalChain)([event, 'access', _5 => _5.contexts, 'optionalAccess', _6 => _6.device]) },\n      culture: { ...updatedContext.culture, ...(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._optionalChain)([event, 'access', _7 => _7.contexts, 'optionalAccess', _8 => _8.culture]) },\n      cloud_resource: { ...updatedContext.cloud_resource, ...(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._optionalChain)([event, 'access', _9 => _9.contexts, 'optionalAccess', _10 => _10.cloud_resource]) },\n    };\n\n    return event;\n  }\n\n  /**\n   * Updates the context with dynamic values that can change\n   */\n   _updateContext(contexts) {\n    // Only update properties if they exist\n    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._optionalChain)([contexts, 'optionalAccess', _11 => _11.app, 'optionalAccess', _12 => _12.app_memory])) {\n      contexts.app.app_memory = process.memoryUsage().rss;\n    }\n\n    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__._optionalChain)([contexts, 'optionalAccess', _13 => _13.device, 'optionalAccess', _14 => _14.free_memory])) {\n      contexts.device.free_memory = os__WEBPACK_IMPORTED_MODULE_2__.freemem();\n    }\n\n    return contexts;\n  }\n\n  /**\n   * Gets the contexts for the current environment\n   */\n   async _getContexts() {\n    const contexts = {};\n\n    if (this._options.os) {\n      contexts.os = await getOsContext();\n    }\n\n    if (this._options.app) {\n      contexts.app = getAppContext();\n    }\n\n    if (this._options.device) {\n      contexts.device = getDeviceContext(this._options.device);\n    }\n\n    if (this._options.culture) {\n      const culture = getCultureContext();\n\n      if (culture) {\n        contexts.culture = culture;\n      }\n    }\n\n    if (this._options.cloudResource) {\n      contexts.cloud_resource = getCloudResourceContext();\n    }\n\n    return contexts;\n  }\n}Context.__initStatic();\n\n/**\n * Returns the operating system context.\n *\n * Based on the current platform, this uses a different strategy to provide the\n * most accurate OS information. Since this might involve spawning subprocesses\n * or accessing the file system, this should only be executed lazily and cached.\n *\n *  - On macOS (Darwin), this will execute the `sw_vers` utility. The context\n *    has a `name`, `version`, `build` and `kernel_version` set.\n *  - On Linux, this will try to load a distribution release from `/etc` and set\n *    the `name`, `version` and `kernel_version` fields.\n *  - On all other platforms, only a `name` and `version` will be returned. Note\n *    that `version` might actually be the kernel version.\n */\nasync function getOsContext() {\n  const platformId = os__WEBPACK_IMPORTED_MODULE_2__.platform();\n  switch (platformId) {\n    case 'darwin':\n      return getDarwinInfo();\n    case 'linux':\n      return getLinuxInfo();\n    default:\n      return {\n        name: PLATFORM_NAMES[platformId] || platformId,\n        version: os__WEBPACK_IMPORTED_MODULE_2__.release(),\n      };\n  }\n}\n\nfunction getCultureContext() {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    if (typeof (process.versions ).icu !== 'string') {\n      // Node was built without ICU support\n      return;\n    }\n\n    // Check that node was built with full Intl support. Its possible it was built without support for non-English\n    // locales which will make resolvedOptions inaccurate\n    //\n    // https://nodejs.org/api/intl.html#detecting-internationalization-support\n    const january = new Date(9e8);\n    const spanish = new Intl.DateTimeFormat('es', { month: 'long' });\n    if (spanish.format(january) === 'enero') {\n      const options = Intl.DateTimeFormat().resolvedOptions();\n\n      return {\n        locale: options.locale,\n        timezone: options.timeZone,\n      };\n    }\n  } catch (err) {\n    //\n  }\n\n  return;\n}\n\nfunction getAppContext() {\n  const app_memory = process.memoryUsage().rss;\n  const app_start_time = new Date(Date.now() - process.uptime() * 1000).toISOString();\n\n  return { app_start_time, app_memory };\n}\n\n/**\n * Gets device information from os\n */\nfunction getDeviceContext(deviceOpt) {\n  const device = {};\n\n  // Sometimes os.uptime() throws due to lacking permissions: https://github.com/getsentry/sentry-javascript/issues/8202\n  let uptime;\n  try {\n    uptime = os__WEBPACK_IMPORTED_MODULE_2__.uptime && os__WEBPACK_IMPORTED_MODULE_2__.uptime();\n  } catch (e) {\n    // noop\n  }\n\n  // os.uptime or its return value seem to be undefined in certain environments (e.g. Azure functions).\n  // Hence, we only set boot time, if we get a valid uptime value.\n  // @see https://github.com/getsentry/sentry-javascript/issues/5856\n  if (typeof uptime === 'number') {\n    device.boot_time = new Date(Date.now() - uptime * 1000).toISOString();\n  }\n\n  device.arch = os__WEBPACK_IMPORTED_MODULE_2__.arch();\n\n  if (deviceOpt === true || deviceOpt.memory) {\n    device.memory_size = os__WEBPACK_IMPORTED_MODULE_2__.totalmem();\n    device.free_memory = os__WEBPACK_IMPORTED_MODULE_2__.freemem();\n  }\n\n  if (deviceOpt === true || deviceOpt.cpu) {\n    const cpuInfo = os__WEBPACK_IMPORTED_MODULE_2__.cpus();\n    if (cpuInfo && cpuInfo.length) {\n      const firstCpu = cpuInfo[0];\n\n      device.processor_count = cpuInfo.length;\n      device.cpu_description = firstCpu.model;\n      device.processor_frequency = firstCpu.speed;\n    }\n  }\n\n  return device;\n}\n\n/** Mapping of Node's platform names to actual OS names. */\nconst PLATFORM_NAMES = {\n  aix: 'IBM AIX',\n  freebsd: 'FreeBSD',\n  openbsd: 'OpenBSD',\n  sunos: 'SunOS',\n  win32: 'Windows',\n};\n\n/** Linux version file to check for a distribution. */\n\n/** Mapping of linux release files located in /etc to distributions. */\nconst LINUX_DISTROS = [\n  { name: 'fedora-release', distros: ['Fedora'] },\n  { name: 'redhat-release', distros: ['Red Hat Linux', 'Centos'] },\n  { name: 'redhat_version', distros: ['Red Hat Linux'] },\n  { name: 'SuSE-release', distros: ['SUSE Linux'] },\n  { name: 'lsb-release', distros: ['Ubuntu Linux', 'Arch Linux'] },\n  { name: 'debian_version', distros: ['Debian'] },\n  { name: 'debian_release', distros: ['Debian'] },\n  { name: 'arch-release', distros: ['Arch Linux'] },\n  { name: 'gentoo-release', distros: ['Gentoo Linux'] },\n  { name: 'novell-release', distros: ['SUSE Linux'] },\n  { name: 'alpine-release', distros: ['Alpine Linux'] },\n];\n\n/** Functions to extract the OS version from Linux release files. */\nconst LINUX_VERSIONS\n\n = {\n  alpine: content => content,\n  arch: content => matchFirst(/distrib_release=(.*)/, content),\n  centos: content => matchFirst(/release ([^ ]+)/, content),\n  debian: content => content,\n  fedora: content => matchFirst(/release (..)/, content),\n  mint: content => matchFirst(/distrib_release=(.*)/, content),\n  red: content => matchFirst(/release ([^ ]+)/, content),\n  suse: content => matchFirst(/VERSION = (.*)\\n/, content),\n  ubuntu: content => matchFirst(/distrib_release=(.*)/, content),\n};\n\n/**\n * Executes a regular expression with one capture group.\n *\n * @param regex A regular expression to execute.\n * @param text Content to execute the RegEx on.\n * @returns The captured string if matched; otherwise undefined.\n */\nfunction matchFirst(regex, text) {\n  const match = regex.exec(text);\n  return match ? match[1] : undefined;\n}\n\n/** Loads the macOS operating system context. */\nasync function getDarwinInfo() {\n  // Default values that will be used in case no operating system information\n  // can be loaded. The default version is computed via heuristics from the\n  // kernel version, but the build ID is missing.\n  const darwinInfo = {\n    kernel_version: os__WEBPACK_IMPORTED_MODULE_2__.release(),\n    name: 'Mac OS X',\n    version: `10.${Number(os__WEBPACK_IMPORTED_MODULE_2__.release().split('.')[0]) - 4}`,\n  };\n\n  try {\n    // We try to load the actual macOS version by executing the `sw_vers` tool.\n    // This tool should be available on every standard macOS installation. In\n    // case this fails, we stick with the values computed above.\n\n    const output = await new Promise((resolve, reject) => {\n      (0,child_process__WEBPACK_IMPORTED_MODULE_0__.execFile)('/usr/bin/sw_vers', (error, stdout) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n        resolve(stdout);\n      });\n    });\n\n    darwinInfo.name = matchFirst(/^ProductName:\\s+(.*)$/m, output);\n    darwinInfo.version = matchFirst(/^ProductVersion:\\s+(.*)$/m, output);\n    darwinInfo.build = matchFirst(/^BuildVersion:\\s+(.*)$/m, output);\n  } catch (e) {\n    // ignore\n  }\n\n  return darwinInfo;\n}\n\n/** Returns a distribution identifier to look up version callbacks. */\nfunction getLinuxDistroId(name) {\n  return name.split(' ')[0].toLowerCase();\n}\n\n/** Loads the Linux operating system context. */\nasync function getLinuxInfo() {\n  // By default, we cannot assume anything about the distribution or Linux\n  // version. `os.release()` returns the kernel version and we assume a generic\n  // \"Linux\" name, which will be replaced down below.\n  const linuxInfo = {\n    kernel_version: os__WEBPACK_IMPORTED_MODULE_2__.release(),\n    name: 'Linux',\n  };\n\n  try {\n    // We start guessing the distribution by listing files in the /etc\n    // directory. This is were most Linux distributions (except Knoppix) store\n    // release files with certain distribution-dependent meta data. We search\n    // for exactly one known file defined in `LINUX_DISTROS` and exit if none\n    // are found. In case there are more than one file, we just stick with the\n    // first one.\n    const etcFiles = await readDirAsync('/etc');\n    const distroFile = LINUX_DISTROS.find(file => etcFiles.includes(file.name));\n    if (!distroFile) {\n      return linuxInfo;\n    }\n\n    // Once that file is known, load its contents. To make searching in those\n    // files easier, we lowercase the file contents. Since these files are\n    // usually quite small, this should not allocate too much memory and we only\n    // hold on to it for a very short amount of time.\n    const distroPath = (0,path__WEBPACK_IMPORTED_MODULE_3__.join)('/etc', distroFile.name);\n    const contents = ((await readFileAsync(distroPath, { encoding: 'utf-8' })) ).toLowerCase();\n\n    // Some Linux distributions store their release information in the same file\n    // (e.g. RHEL and Centos). In those cases, we scan the file for an\n    // identifier, that basically consists of the first word of the linux\n    // distribution name (e.g. \"red\" for Red Hat). In case there is no match, we\n    // just assume the first distribution in our list.\n    const { distros } = distroFile;\n    linuxInfo.name = distros.find(d => contents.indexOf(getLinuxDistroId(d)) >= 0) || distros[0];\n\n    // Based on the found distribution, we can now compute the actual version\n    // number. This is different for every distribution, so several strategies\n    // are computed in `LINUX_VERSIONS`.\n    const id = getLinuxDistroId(linuxInfo.name);\n    linuxInfo.version = LINUX_VERSIONS[id](contents);\n  } catch (e) {\n    // ignore\n  }\n\n  return linuxInfo;\n}\n\n/**\n * Grabs some information about hosting provider based on best effort.\n */\nfunction getCloudResourceContext() {\n  if (process.env.VERCEL) {\n    // https://vercel.com/docs/concepts/projects/environment-variables/system-environment-variables#system-environment-variables\n    return {\n      'cloud.provider': 'vercel',\n      'cloud.region': process.env.VERCEL_REGION,\n    };\n  } else if (process.env.AWS_REGION) {\n    // https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html\n    return {\n      'cloud.provider': 'aws',\n      'cloud.region': process.env.AWS_REGION,\n      'cloud.platform': process.env.AWS_EXECUTION_ENV,\n    };\n  } else if (process.env.GCP_PROJECT) {\n    // https://cloud.google.com/composer/docs/how-to/managing/environment-variables#reserved_variables\n    return {\n      'cloud.provider': 'gcp',\n    };\n  } else if (process.env.ALIYUN_REGION_ID) {\n    // TODO: find where I found these environment variables - at least gc.github.com returns something\n    return {\n      'cloud.provider': 'alibaba_cloud',\n      'cloud.region': process.env.ALIYUN_REGION_ID,\n    };\n  } else if (process.env.WEBSITE_SITE_NAME && process.env.REGION_NAME) {\n    // https://learn.microsoft.com/en-us/azure/app-service/reference-app-settings?tabs=kudu%2Cdotnet#app-environment\n    return {\n      'cloud.provider': 'azure',\n      'cloud.region': process.env.REGION_NAME,\n    };\n  } else if (process.env.IBM_CLOUD_REGION) {\n    // TODO: find where I found these environment variables - at least gc.github.com returns something\n    return {\n      'cloud.provider': 'ibm_cloud',\n      'cloud.region': process.env.IBM_CLOUD_REGION,\n    };\n  } else if (process.env.TENCENTCLOUD_REGION) {\n    // https://www.tencentcloud.com/document/product/583/32748\n    return {\n      'cloud.provider': 'tencent_cloud',\n      'cloud.region': process.env.TENCENTCLOUD_REGION,\n      'cloud.account.id': process.env.TENCENTCLOUD_APPID,\n      'cloud.availability_zone': process.env.TENCENTCLOUD_ZONE,\n    };\n  } else if (process.env.NETLIFY) {\n    // https://docs.netlify.com/configure-builds/environment-variables/#read-only-variables\n    return {\n      'cloud.provider': 'netlify',\n    };\n  } else if (process.env.FLY_REGION) {\n    // https://fly.io/docs/reference/runtime-environment/\n    return {\n      'cloud.provider': 'fly.io',\n      'cloud.region': process.env.FLY_REGION,\n    };\n  } else if (process.env.DYNO) {\n    // https://devcenter.heroku.com/articles/dynos#local-environment-variables\n    return {\n      'cloud.provider': 'heroku',\n    };\n  } else {\n    return undefined;\n  }\n}\n\n\n//# sourceMappingURL=context.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/integrations/context.js?")},"./node_modules/@sentry/node/esm/integrations/contextlines.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContextLines: () => (/* binding */ ContextLines)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/lru.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n\nconst FILE_CONTENT_CACHE = new _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.LRUMap(100);\nconst DEFAULT_LINES_OF_CONTEXT = 7;\n\n// TODO: Replace with promisify when minimum supported node >= v8\nfunction readTextFileAsync(path) {\n  return new Promise((resolve, reject) => {\n    (0,fs__WEBPACK_IMPORTED_MODULE_0__.readFile)(path, 'utf8', (err, data) => {\n      if (err) reject(err);\n      else resolve(data);\n    });\n  });\n}\n\n/** Add node modules / packages to the event */\nclass ContextLines  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'ContextLines';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = ContextLines.id;}\n\n   constructor(  _options = {}) {this._options = _options;ContextLines.prototype.__init.call(this);}\n\n  /** Get's the number of context lines to add */\n   get _contextLines() {\n    return this._options.frameContextLines !== undefined ? this._options.frameContextLines : DEFAULT_LINES_OF_CONTEXT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    addGlobalEventProcessor(event => {\n      const self = getCurrentHub().getIntegration(ContextLines);\n      if (!self) {\n        return event;\n      }\n      return this.addSourceContext(event);\n    });\n  }\n\n  /** Processes an event and adds context lines */\n   async addSourceContext(event) {\n    // keep a lookup map of which files we've already enqueued to read,\n    // so we don't enqueue the same file multiple times which would cause multiple i/o reads\n    const enqueuedReadSourceFileTasks = {};\n    const readSourceFileTasks = [];\n\n    if (this._contextLines > 0 && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([event, 'access', _2 => _2.exception, 'optionalAccess', _3 => _3.values])) {\n      for (const exception of event.exception.values) {\n        if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([exception, 'access', _4 => _4.stacktrace, 'optionalAccess', _5 => _5.frames])) {\n          continue;\n        }\n\n        // We want to iterate in reverse order as calling cache.get will bump the file in our LRU cache.\n        // This ends up prioritizes source context for frames at the top of the stack instead of the bottom.\n        for (let i = exception.stacktrace.frames.length - 1; i >= 0; i--) {\n          const frame = exception.stacktrace.frames[i];\n          // Call cache.get to bump the file to the top of the cache and ensure we have not already\n          // enqueued a read operation for this filename\n          if (\n            frame.filename &&\n            !enqueuedReadSourceFileTasks[frame.filename] &&\n            !FILE_CONTENT_CACHE.get(frame.filename)\n          ) {\n            readSourceFileTasks.push(_readSourceFile(frame.filename));\n            enqueuedReadSourceFileTasks[frame.filename] = 1;\n          }\n        }\n      }\n    }\n\n    // check if files to read > 0, if so, await all of them to be read before adding source contexts.\n    // Normally, Promise.all here could be short circuited if one of the promises rejects, but we\n    // are guarding from that by wrapping the i/o read operation in a try/catch.\n    if (readSourceFileTasks.length > 0) {\n      await Promise.all(readSourceFileTasks);\n    }\n\n    // Perform the same loop as above, but this time we can assume all files are in the cache\n    // and attempt to add source context to frames.\n    if (this._contextLines > 0 && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([event, 'access', _6 => _6.exception, 'optionalAccess', _7 => _7.values])) {\n      for (const exception of event.exception.values) {\n        if (exception.stacktrace && exception.stacktrace.frames) {\n          await this.addSourceContextToFrames(exception.stacktrace.frames);\n        }\n      }\n    }\n\n    return event;\n  }\n\n  /** Adds context lines to frames */\n   addSourceContextToFrames(frames) {\n    for (const frame of frames) {\n      // Only add context if we have a filename and it hasn't already been added\n      if (frame.filename && frame.context_line === undefined) {\n        const sourceFileLines = FILE_CONTENT_CACHE.get(frame.filename);\n\n        if (sourceFileLines) {\n          try {\n            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addContextToFrame)(sourceFileLines, frame, this._contextLines);\n          } catch (e) {\n            // anomaly, being defensive in case\n            // unlikely to ever happen in practice but can definitely happen in theory\n          }\n        }\n      }\n    }\n  }\n}ContextLines.__initStatic();\n\n/**\n * Reads file contents and caches them in a global LRU cache.\n * If reading fails, mark the file as null in the cache so we don't try again.\n *\n * @param filename filepath to read content from.\n */\nasync function _readSourceFile(filename) {\n  const cachedFile = FILE_CONTENT_CACHE.get(filename);\n\n  // We have already attempted to read this file and failed, do not try again\n  if (cachedFile === null) {\n    return null;\n  }\n\n  // We have a cache hit, return it\n  if (cachedFile !== undefined) {\n    return cachedFile;\n  }\n\n  // Guard from throwing if readFile fails, this enables us to use Promise.all and\n  // not have it short circuiting if one of the promises rejects + since context lines are added\n  // on a best effort basis, we want to throw here anyways.\n\n  // If we made it to here, it means that our file is not cache nor marked as failed, so attempt to read it\n  let content = null;\n  try {\n    const rawFileContents = await readTextFileAsync(filename);\n    content = rawFileContents.split('\\n');\n  } catch (_) {\n    // if we fail, we will mark the file as null in the cache and short circuit next time we try to read it\n  }\n\n  FILE_CONTENT_CACHE.set(filename, content);\n  return content;\n}\n\n\n//# sourceMappingURL=contextlines.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/integrations/contextlines.js?")},"./node_modules/@sentry/node/esm/integrations/http.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Http: () => (/* binding */ Http)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/utils/isSentryRequestUrl.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/lru.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/baggage.js\");\n/* harmony import */ var _nodeVersion_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../nodeVersion.js */ \"./node_modules/@sentry/node/esm/nodeVersion.js\");\n/* harmony import */ var _utils_http_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/http.js */ \"./node_modules/@sentry/node/esm/integrations/utils/http.js\");\n\n\n\n\n\n\n/**\n * The http module integration instruments Node's internal http module. It creates breadcrumbs, transactions for outgoing\n * http requests and attaches trace data when tracing is enabled via its `tracing` option.\n */\nclass Http  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Http';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Http.id;}\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {Http.prototype.__init.call(this);\n    this._breadcrumbs = typeof options.breadcrumbs === 'undefined' ? true : options.breadcrumbs;\n    this._tracing = !options.tracing ? undefined : options.tracing === true ? {} : options.tracing;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(\n    _addGlobalEventProcessor,\n    setupOnceGetCurrentHub,\n  ) {\n    // No need to instrument if we don't want to track anything\n    if (!this._breadcrumbs && !this._tracing) {\n      return;\n    }\n\n    const clientOptions = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([setupOnceGetCurrentHub, 'call', _ => _(), 'access', _2 => _2.getClient, 'call', _3 => _3(), 'optionalAccess', _4 => _4.getOptions, 'call', _5 => _5()]);\n\n    // Do not auto-instrument for other instrumenter\n    if (clientOptions && clientOptions.instrumenter !== 'sentry') {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('HTTP Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const shouldCreateSpanForRequest =\n      // eslint-disable-next-line deprecation/deprecation\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([this, 'access', _6 => _6._tracing, 'optionalAccess', _7 => _7.shouldCreateSpanForRequest]) || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([clientOptions, 'optionalAccess', _8 => _8.shouldCreateSpanForRequest]);\n    // eslint-disable-next-line deprecation/deprecation\n    const tracePropagationTargets = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([clientOptions, 'optionalAccess', _9 => _9.tracePropagationTargets]) || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([this, 'access', _10 => _10._tracing, 'optionalAccess', _11 => _11.tracePropagationTargets]);\n\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const httpModule = __webpack_require__(/*! http */ \"http\");\n    const wrappedHttpHandlerMaker = _createWrappedRequestMethodFactory(\n      httpModule,\n      this._breadcrumbs,\n      shouldCreateSpanForRequest,\n      tracePropagationTargets,\n    );\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.fill)(httpModule, 'get', wrappedHttpHandlerMaker);\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.fill)(httpModule, 'request', wrappedHttpHandlerMaker);\n\n    // NOTE: Prior to Node 9, `https` used internals of `http` module, thus we don't patch it.\n    // If we do, we'd get double breadcrumbs and double spans for `https` calls.\n    // It has been changed in Node 9, so for all versions equal and above, we patch `https` separately.\n    if (_nodeVersion_js__WEBPACK_IMPORTED_MODULE_3__.NODE_VERSION.major && _nodeVersion_js__WEBPACK_IMPORTED_MODULE_3__.NODE_VERSION.major > 8) {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      const httpsModule = __webpack_require__(/*! https */ \"https\");\n      const wrappedHttpsHandlerMaker = _createWrappedRequestMethodFactory(\n        httpsModule,\n        this._breadcrumbs,\n        shouldCreateSpanForRequest,\n        tracePropagationTargets,\n      );\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.fill)(httpsModule, 'get', wrappedHttpsHandlerMaker);\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.fill)(httpsModule, 'request', wrappedHttpsHandlerMaker);\n    }\n  }\n}Http.__initStatic();\n\n// for ease of reading below\n\n/**\n * Function which creates a function which creates wrapped versions of internal `request` and `get` calls within `http`\n * and `https` modules. (NB: Not a typo - this is a creator^2!)\n *\n * @param breadcrumbsEnabled Whether or not to record outgoing requests as breadcrumbs\n * @param tracingEnabled Whether or not to record outgoing requests as tracing spans\n *\n * @returns A function which accepts the exiting handler and returns a wrapped handler\n */\nfunction _createWrappedRequestMethodFactory(\n  httpModule,\n  breadcrumbsEnabled,\n  shouldCreateSpanForRequest,\n  tracePropagationTargets,\n) {\n  // We're caching results so we don't have to recompute regexp every time we create a request.\n  const createSpanUrlMap = new _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.LRUMap(100);\n  const headersUrlMap = new _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.LRUMap(100);\n\n  const shouldCreateSpan = (url) => {\n    if (shouldCreateSpanForRequest === undefined) {\n      return true;\n    }\n\n    const cachedDecision = createSpanUrlMap.get(url);\n    if (cachedDecision !== undefined) {\n      return cachedDecision;\n    }\n\n    const decision = shouldCreateSpanForRequest(url);\n    createSpanUrlMap.set(url, decision);\n    return decision;\n  };\n\n  const shouldAttachTraceData = (url) => {\n    if (tracePropagationTargets === undefined) {\n      return true;\n    }\n\n    const cachedDecision = headersUrlMap.get(url);\n    if (cachedDecision !== undefined) {\n      return cachedDecision;\n    }\n\n    const decision = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.stringMatchesSomePattern)(url, tracePropagationTargets);\n    headersUrlMap.set(url, decision);\n    return decision;\n  };\n\n  /**\n   * Captures Breadcrumb based on provided request/response pair\n   */\n  function addRequestBreadcrumb(\n    event,\n    requestSpanData,\n    req,\n    res,\n  ) {\n    if (!(0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getCurrentHub)().getIntegration(Http)) {\n      return;\n    }\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getCurrentHub)().addBreadcrumb(\n      {\n        category: 'http',\n        data: {\n          status_code: res && res.statusCode,\n          ...requestSpanData,\n        },\n        type: 'http',\n      },\n      {\n        event,\n        request: req,\n        response: res,\n      },\n    );\n  }\n\n  return function wrappedRequestMethodFactory(originalRequestMethod) {\n    return function wrappedMethod( ...args) {\n      const requestArgs = (0,_utils_http_js__WEBPACK_IMPORTED_MODULE_7__.normalizeRequestArgs)(httpModule, args);\n      const requestOptions = requestArgs[0];\n      // eslint-disable-next-line deprecation/deprecation\n      const rawRequestUrl = (0,_utils_http_js__WEBPACK_IMPORTED_MODULE_7__.extractRawUrl)(requestOptions);\n      const requestUrl = (0,_utils_http_js__WEBPACK_IMPORTED_MODULE_7__.extractUrl)(requestOptions);\n\n      // we don't want to record requests to Sentry as either breadcrumbs or spans, so just use the original method\n      if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_8__.isSentryRequestUrl)(requestUrl, (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getCurrentHub)())) {\n        return originalRequestMethod.apply(httpModule, requestArgs);\n      }\n\n      const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getCurrentHub)();\n      const scope = hub.getScope();\n      const parentSpan = scope.getSpan();\n\n      const data = getRequestSpanData(requestUrl, requestOptions);\n\n      const requestSpan = shouldCreateSpan(rawRequestUrl)\n        ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([parentSpan, 'optionalAccess', _12 => _12.startChild, 'call', _13 => _13({\n            op: 'http.client',\n            origin: 'auto.http.node.http',\n            description: `${data['http.method']} ${data.url}`,\n            data,\n          })])\n        : undefined;\n\n      if (shouldAttachTraceData(rawRequestUrl)) {\n        if (requestSpan) {\n          const sentryTraceHeader = requestSpan.toTraceparent();\n          const dynamicSamplingContext = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([requestSpan, 'optionalAccess', _14 => _14.transaction, 'optionalAccess', _15 => _15.getDynamicSamplingContext, 'call', _16 => _16()]);\n          addHeadersToRequestOptions(requestOptions, requestUrl, sentryTraceHeader, dynamicSamplingContext);\n        } else {\n          const client = hub.getClient();\n          const { traceId, sampled, dsc } = scope.getPropagationContext();\n          const sentryTraceHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_9__.generateSentryTraceHeader)(traceId, undefined, sampled);\n          const dynamicSamplingContext =\n            dsc || (client ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_10__.getDynamicSamplingContextFromClient)(traceId, client, scope) : undefined);\n          addHeadersToRequestOptions(requestOptions, requestUrl, sentryTraceHeader, dynamicSamplingContext);\n        }\n      } else {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(\n            `[Tracing] Not adding sentry-trace header to outgoing request (${requestUrl}) due to mismatching tracePropagationTargets option.`,\n          );\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalRequestMethod\n        .apply(httpModule, requestArgs)\n        .once('response', function ( res) {\n          // eslint-disable-next-line @typescript-eslint/no-this-alias\n          const req = this;\n          if (breadcrumbsEnabled) {\n            addRequestBreadcrumb('response', data, req, res);\n          }\n          if (requestSpan) {\n            if (res.statusCode) {\n              requestSpan.setHttpStatus(res.statusCode);\n            }\n            requestSpan.description = (0,_utils_http_js__WEBPACK_IMPORTED_MODULE_7__.cleanSpanDescription)(requestSpan.description, requestOptions, req);\n            requestSpan.finish();\n          }\n        })\n        .once('error', function () {\n          // eslint-disable-next-line @typescript-eslint/no-this-alias\n          const req = this;\n\n          if (breadcrumbsEnabled) {\n            addRequestBreadcrumb('error', data, req);\n          }\n          if (requestSpan) {\n            requestSpan.setHttpStatus(500);\n            requestSpan.description = (0,_utils_http_js__WEBPACK_IMPORTED_MODULE_7__.cleanSpanDescription)(requestSpan.description, requestOptions, req);\n            requestSpan.finish();\n          }\n        });\n    };\n  };\n}\n\nfunction addHeadersToRequestOptions(\n  requestOptions,\n  requestUrl,\n  sentryTraceHeader,\n  dynamicSamplingContext,\n) {\n  // Don't overwrite sentry-trace and baggage header if it's already set.\n  const headers = requestOptions.headers || {};\n  if (headers['sentry-trace']) {\n    return;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`[Tracing] Adding sentry-trace header ${sentryTraceHeader} to outgoing request to \"${requestUrl}\": `);\n  const sentryBaggage = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_11__.dynamicSamplingContextToSentryBaggageHeader)(dynamicSamplingContext);\n  const sentryBaggageHeader =\n    sentryBaggage && sentryBaggage.length > 0 ? normalizeBaggageHeader(requestOptions, sentryBaggage) : undefined;\n\n  requestOptions.headers = {\n    ...requestOptions.headers,\n    'sentry-trace': sentryTraceHeader,\n    // Setting a header to `undefined` will crash in node so we only set the baggage header when it's defined\n    ...(sentryBaggageHeader && { baggage: sentryBaggageHeader }),\n  };\n}\n\nfunction getRequestSpanData(requestUrl, requestOptions) {\n  const method = requestOptions.method || 'GET';\n  const data = {\n    url: requestUrl,\n    'http.method': method,\n  };\n  if (requestOptions.hash) {\n    // strip leading \"#\"\n    data['http.fragment'] = requestOptions.hash.substring(1);\n  }\n  if (requestOptions.search) {\n    // strip leading \"?\"\n    data['http.query'] = requestOptions.search.substring(1);\n  }\n  return data;\n}\n\nfunction normalizeBaggageHeader(\n  requestOptions,\n  sentryBaggageHeader,\n) {\n  if (!requestOptions.headers || !requestOptions.headers.baggage) {\n    return sentryBaggageHeader;\n  } else if (!sentryBaggageHeader) {\n    return requestOptions.headers.baggage ;\n  } else if (Array.isArray(requestOptions.headers.baggage)) {\n    return [...requestOptions.headers.baggage, sentryBaggageHeader];\n  }\n  // Type-cast explanation:\n  // Technically this the following could be of type `(number | string)[]` but for the sake of simplicity\n  // we say this is undefined behaviour, since it would not be baggage spec conform if the user did this.\n  return [requestOptions.headers.baggage, sentryBaggageHeader] ;\n}\n\n\n//# sourceMappingURL=http.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/integrations/http.js?")},"./node_modules/@sentry/node/esm/integrations/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Console: () => (/* reexport safe */ _console_js__WEBPACK_IMPORTED_MODULE_0__.Console),\n/* harmony export */   Context: () => (/* reexport safe */ _context_js__WEBPACK_IMPORTED_MODULE_6__.Context),\n/* harmony export */   ContextLines: () => (/* reexport safe */ _contextlines_js__WEBPACK_IMPORTED_MODULE_5__.ContextLines),\n/* harmony export */   Http: () => (/* reexport safe */ _http_js__WEBPACK_IMPORTED_MODULE_1__.Http),\n/* harmony export */   LocalVariables: () => (/* reexport safe */ _localvariables_js__WEBPACK_IMPORTED_MODULE_8__.LocalVariables),\n/* harmony export */   Modules: () => (/* reexport safe */ _modules_js__WEBPACK_IMPORTED_MODULE_4__.Modules),\n/* harmony export */   OnUncaughtException: () => (/* reexport safe */ _onuncaughtexception_js__WEBPACK_IMPORTED_MODULE_2__.OnUncaughtException),\n/* harmony export */   OnUnhandledRejection: () => (/* reexport safe */ _onunhandledrejection_js__WEBPACK_IMPORTED_MODULE_3__.OnUnhandledRejection),\n/* harmony export */   RequestData: () => (/* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_7__.RequestData),\n/* harmony export */   Spotlight: () => (/* reexport safe */ _spotlight_js__WEBPACK_IMPORTED_MODULE_10__.Spotlight),\n/* harmony export */   Undici: () => (/* reexport safe */ _undici_index_js__WEBPACK_IMPORTED_MODULE_9__.Undici)\n/* harmony export */ });\n/* harmony import */ var _console_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./console.js */ "./node_modules/@sentry/node/esm/integrations/console.js");\n/* harmony import */ var _http_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./http.js */ "./node_modules/@sentry/node/esm/integrations/http.js");\n/* harmony import */ var _onuncaughtexception_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./onuncaughtexception.js */ "./node_modules/@sentry/node/esm/integrations/onuncaughtexception.js");\n/* harmony import */ var _onunhandledrejection_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./onunhandledrejection.js */ "./node_modules/@sentry/node/esm/integrations/onunhandledrejection.js");\n/* harmony import */ var _modules_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules.js */ "./node_modules/@sentry/node/esm/integrations/modules.js");\n/* harmony import */ var _contextlines_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./contextlines.js */ "./node_modules/@sentry/node/esm/integrations/contextlines.js");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./context.js */ "./node_modules/@sentry/node/esm/integrations/context.js");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/integrations/requestdata.js");\n/* harmony import */ var _localvariables_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./localvariables.js */ "./node_modules/@sentry/node/esm/integrations/localvariables.js");\n/* harmony import */ var _undici_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./undici/index.js */ "./node_modules/@sentry/node/esm/integrations/undici/index.js");\n/* harmony import */ var _spotlight_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./spotlight.js */ "./node_modules/@sentry/node/esm/integrations/spotlight.js");\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/integrations/index.js?')},"./node_modules/@sentry/node/esm/integrations/localvariables.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalVariables: () => (/* binding */ LocalVariables),\n/* harmony export */   createCallbackList: () => (/* binding */ createCallbackList),\n/* harmony export */   createRateLimiter: () => (/* binding */ createRateLimiter)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/lru.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _nodeVersion_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../nodeVersion.js */ \"./node_modules/@sentry/node/esm/nodeVersion.js\");\n\n\n\n\n/**\n * Creates a rate limiter\n * @param maxPerSecond Maximum number of calls per second\n * @param enable Callback to enable capture\n * @param disable Callback to disable capture\n * @returns A function to call to increment the rate limiter count\n */\nfunction createRateLimiter(\n  maxPerSecond,\n  enable,\n  disable,\n) {\n  let count = 0;\n  let retrySeconds = 5;\n  let disabledTimeout = 0;\n\n  setInterval(() => {\n    if (disabledTimeout === 0) {\n      if (count > maxPerSecond) {\n        retrySeconds *= 2;\n        disable(retrySeconds);\n\n        // Cap at one day\n        if (retrySeconds > 86400) {\n          retrySeconds = 86400;\n        }\n        disabledTimeout = retrySeconds;\n      }\n    } else {\n      disabledTimeout -= 1;\n\n      if (disabledTimeout === 0) {\n        enable();\n      }\n    }\n\n    count = 0;\n  }, 1000).unref();\n\n  return () => {\n    count += 1;\n  };\n}\n\n/** Creates a container for callbacks to be called sequentially */\nfunction createCallbackList(complete) {\n  // A collection of callbacks to be executed last to first\n  let callbacks = [];\n\n  let completedCalled = false;\n  function checkedComplete(result) {\n    callbacks = [];\n    if (completedCalled) {\n      return;\n    }\n    completedCalled = true;\n    complete(result);\n  }\n\n  // complete should be called last\n  callbacks.push(checkedComplete);\n\n  function add(fn) {\n    callbacks.push(fn);\n  }\n\n  function next(result) {\n    const popped = callbacks.pop() || checkedComplete;\n\n    try {\n      popped(result);\n    } catch (_) {\n      // If there is an error, we still want to call the complete callback\n      checkedComplete(result);\n    }\n  }\n\n  return { add, next };\n}\n\n/**\n * Promise API is available as `Experimental` and in Node 19 only.\n *\n * Callback-based API is `Stable` since v14 and `Experimental` since v8.\n * Because of that, we are creating our own `AsyncSession` class.\n *\n * https://nodejs.org/docs/latest-v19.x/api/inspector.html#promises-api\n * https://nodejs.org/docs/latest-v14.x/api/inspector.html\n */\nclass AsyncSession  {\n\n  /** Throws if inspector API is not available */\n   constructor() {\n    /*\n    TODO: We really should get rid of this require statement below for a couple of reasons:\n    1. It makes the integration unusable in the SvelteKit SDK, as it's not possible to use `require`\n       in SvelteKit server code (at least not by default).\n    2. Throwing in a constructor is bad practice\n\n    More context for a future attempt to fix this:\n    We already tried replacing it with import but didn't get it to work because of async problems.\n    We still called import in the constructor but assigned to a promise which we \"awaited\" in\n    `configureAndConnect`. However, this broke the Node integration tests as no local variables\n    were reported any more. We probably missed a place where we need to await the promise, too.\n    */\n\n    // Node can be built without inspector support so this can throw\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const { Session } = __webpack_require__(/*! inspector */ \"inspector\");\n    this._session = new Session();\n  }\n\n  /** @inheritdoc */\n   configureAndConnect(onPause, captureAll) {\n    this._session.connect();\n\n    this._session.on('Debugger.paused', event => {\n      onPause(event, () => {\n        // After the pause work is complete, resume execution or the exception context memory is leaked\n        this._session.post('Debugger.resume');\n      });\n    });\n\n    this._session.post('Debugger.enable');\n    this._session.post('Debugger.setPauseOnExceptions', { state: captureAll ? 'all' : 'uncaught' });\n  }\n\n   setPauseOnExceptions(captureAll) {\n    this._session.post('Debugger.setPauseOnExceptions', { state: captureAll ? 'all' : 'uncaught' });\n  }\n\n  /** @inheritdoc */\n   getLocalVariables(objectId, complete) {\n    this._getProperties(objectId, props => {\n      const { add, next } = createCallbackList(complete);\n\n      for (const prop of props) {\n        if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([prop, 'optionalAccess', _2 => _2.value, 'optionalAccess', _3 => _3.objectId]) && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([prop, 'optionalAccess', _4 => _4.value, 'access', _5 => _5.className]) === 'Array') {\n          const id = prop.value.objectId;\n          add(vars => this._unrollArray(id, prop.name, vars, next));\n        } else if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([prop, 'optionalAccess', _6 => _6.value, 'optionalAccess', _7 => _7.objectId]) && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([prop, 'optionalAccess', _8 => _8.value, 'optionalAccess', _9 => _9.className]) === 'Object') {\n          const id = prop.value.objectId;\n          add(vars => this._unrollObject(id, prop.name, vars, next));\n        } else if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([prop, 'optionalAccess', _10 => _10.value, 'optionalAccess', _11 => _11.value]) || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([prop, 'optionalAccess', _12 => _12.value, 'optionalAccess', _13 => _13.description])) {\n          add(vars => this._unrollOther(prop, vars, next));\n        }\n      }\n\n      next({});\n    });\n  }\n\n  /**\n   * Gets all the PropertyDescriptors of an object\n   */\n   _getProperties(objectId, next) {\n    this._session.post(\n      'Runtime.getProperties',\n      {\n        objectId,\n        ownProperties: true,\n      },\n      (err, params) => {\n        if (err) {\n          next([]);\n        } else {\n          next(params.result);\n        }\n      },\n    );\n  }\n\n  /**\n   * Unrolls an array property\n   */\n   _unrollArray(objectId, name, vars, next) {\n    this._getProperties(objectId, props => {\n      vars[name] = props\n        .filter(v => v.name !== 'length' && !isNaN(parseInt(v.name, 10)))\n        .sort((a, b) => parseInt(a.name, 10) - parseInt(b.name, 10))\n        .map(v => (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([v, 'optionalAccess', _14 => _14.value, 'optionalAccess', _15 => _15.value]));\n\n      next(vars);\n    });\n  }\n\n  /**\n   * Unrolls an object property\n   */\n   _unrollObject(objectId, name, vars, next) {\n    this._getProperties(objectId, props => {\n      vars[name] = props\n        .map(v => [v.name, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([v, 'optionalAccess', _16 => _16.value, 'optionalAccess', _17 => _17.value])])\n        .reduce((obj, [key, val]) => {\n          obj[key] = val;\n          return obj;\n        }, {} );\n\n      next(vars);\n    });\n  }\n\n  /**\n   * Unrolls other properties\n   */\n   _unrollOther(prop, vars, next) {\n    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([prop, 'optionalAccess', _18 => _18.value, 'optionalAccess', _19 => _19.value])) {\n      vars[prop.name] = prop.value.value;\n    } else if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([prop, 'optionalAccess', _20 => _20.value, 'optionalAccess', _21 => _21.description]) && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([prop, 'optionalAccess', _22 => _22.value, 'optionalAccess', _23 => _23.type]) !== 'function') {\n      vars[prop.name] = `<${prop.value.description}>`;\n    }\n\n    next(vars);\n  }\n}\n\n/**\n * When using Vercel pkg, the inspector module is not available.\n * https://github.com/getsentry/sentry-javascript/issues/6769\n */\nfunction tryNewAsyncSession() {\n  try {\n    return new AsyncSession();\n  } catch (e) {\n    return undefined;\n  }\n}\n\n// Add types for the exception event data\n\n/** Could this be an anonymous function? */\nfunction isAnonymous(name) {\n  return name !== undefined && ['', '?', '<anonymous>'].includes(name);\n}\n\n/** Do the function names appear to match? */\nfunction functionNamesMatch(a, b) {\n  return a === b || (isAnonymous(a) && isAnonymous(b));\n}\n\n/** Creates a unique hash from stack frames */\nfunction hashFrames(frames) {\n  if (frames === undefined) {\n    return;\n  }\n\n  // Only hash the 10 most recent frames (ie. the last 10)\n  return frames.slice(-10).reduce((acc, frame) => `${acc},${frame.function},${frame.lineno},${frame.colno}`, '');\n}\n\n/**\n * We use the stack parser to create a unique hash from the exception stack trace\n * This is used to lookup vars when the exception passes through the event processor\n */\nfunction hashFromStack(stackParser, stack) {\n  if (stack === undefined) {\n    return undefined;\n  }\n\n  return hashFrames(stackParser(stack, 1));\n}\n\n/**\n * Adds local variables to exception frames\n *\n * Default: 50\n */\nclass LocalVariables  {\n   static __initStatic() {this.id = 'LocalVariables';}\n\n    __init() {this.name = LocalVariables.id;}\n\n    __init2() {this._cachedFrames = new _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.LRUMap(20);}\n\n   constructor(\n      _options = {},\n      _session = tryNewAsyncSession(),\n  ) {this._options = _options;this._session = _session;LocalVariables.prototype.__init.call(this);LocalVariables.prototype.__init2.call(this);}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    this._setup(addGlobalEventProcessor, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([getCurrentHub, 'call', _24 => _24(), 'access', _25 => _25.getClient, 'call', _26 => _26(), 'optionalAccess', _27 => _27.getOptions, 'call', _28 => _28()]));\n  }\n\n  /** Setup in a way that's easier to call from tests */\n   _setup(\n    addGlobalEventProcessor,\n    clientOptions,\n  ) {\n    if (this._session && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([clientOptions, 'optionalAccess', _29 => _29.includeLocalVariables])) {\n      // Only setup this integration if the Node version is >= v18\n      // https://github.com/getsentry/sentry-javascript/issues/7697\n      const unsupportedNodeVersion = (_nodeVersion_js__WEBPACK_IMPORTED_MODULE_2__.NODE_VERSION.major || 0) < 18;\n\n      if (unsupportedNodeVersion) {\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('The `LocalVariables` integration is only supported on Node >= v18.');\n        return;\n      }\n\n      const captureAll = this._options.captureAllExceptions !== false;\n\n      this._session.configureAndConnect(\n        (ev, complete) =>\n          this._handlePaused(clientOptions.stackParser, ev , complete),\n        captureAll,\n      );\n\n      if (captureAll) {\n        const max = this._options.maxExceptionsPerSecond || 50;\n\n        this._rateLimiter = createRateLimiter(\n          max,\n          () => {\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log('Local variables rate-limit lifted.');\n            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([this, 'access', _30 => _30._session, 'optionalAccess', _31 => _31.setPauseOnExceptions, 'call', _32 => _32(true)]);\n          },\n          seconds => {\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(\n              `Local variables rate-limit exceeded. Disabling capturing of caught exceptions for ${seconds} seconds.`,\n            );\n            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([this, 'access', _33 => _33._session, 'optionalAccess', _34 => _34.setPauseOnExceptions, 'call', _35 => _35(false)]);\n          },\n        );\n      }\n\n      addGlobalEventProcessor(async event => this._addLocalVariables(event));\n    }\n  }\n\n  /**\n   * Handle the pause event\n   */\n   _handlePaused(\n    stackParser,\n    { params: { reason, data, callFrames } },\n    complete,\n  ) {\n    if (reason !== 'exception' && reason !== 'promiseRejection') {\n      complete();\n      return;\n    }\n\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([this, 'access', _36 => _36._rateLimiter, 'optionalCall', _37 => _37()]);\n\n    // data.description contains the original error.stack\n    const exceptionHash = hashFromStack(stackParser, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([data, 'optionalAccess', _38 => _38.description]));\n\n    if (exceptionHash == undefined) {\n      complete();\n      return;\n    }\n\n    const { add, next } = createCallbackList(frames => {\n      this._cachedFrames.set(exceptionHash, frames);\n      complete();\n    });\n\n    // Because we're queuing up and making all these calls synchronously, we can potentially overflow the stack\n    // For this reason we only attempt to get local variables for the first 5 frames\n    for (let i = 0; i < Math.min(callFrames.length, 5); i++) {\n      const { scopeChain, functionName, this: obj } = callFrames[i];\n\n      const localScope = scopeChain.find(scope => scope.type === 'local');\n\n      // obj.className is undefined in ESM modules\n      const fn = obj.className === 'global' || !obj.className ? functionName : `${obj.className}.${functionName}`;\n\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([localScope, 'optionalAccess', _39 => _39.object, 'access', _40 => _40.objectId]) === undefined) {\n        add(frames => {\n          frames[i] = { function: fn };\n          next(frames);\n        });\n      } else {\n        const id = localScope.object.objectId;\n        add(frames =>\n          (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([this, 'access', _41 => _41._session, 'optionalAccess', _42 => _42.getLocalVariables, 'call', _43 => _43(id, vars => {\n            frames[i] = { function: fn, vars };\n            next(frames);\n          })]),\n        );\n      }\n    }\n\n    next([]);\n  }\n\n  /**\n   * Adds local variables event stack frames.\n   */\n   _addLocalVariables(event) {\n    for (const exception of (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([event, 'optionalAccess', _44 => _44.exception, 'optionalAccess', _45 => _45.values]) || []) {\n      this._addLocalVariablesToException(exception);\n    }\n\n    return event;\n  }\n\n  /**\n   * Adds local variables to the exception stack frames.\n   */\n   _addLocalVariablesToException(exception) {\n    const hash = hashFrames((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([exception, 'optionalAccess', _46 => _46.stacktrace, 'optionalAccess', _47 => _47.frames]));\n\n    if (hash === undefined) {\n      return;\n    }\n\n    // Check if we have local variables for an exception that matches the hash\n    // remove is identical to get but also removes the entry from the cache\n    const cachedFrames = this._cachedFrames.remove(hash);\n\n    if (cachedFrames === undefined) {\n      return;\n    }\n\n    const frameCount = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([exception, 'access', _48 => _48.stacktrace, 'optionalAccess', _49 => _49.frames, 'optionalAccess', _50 => _50.length]) || 0;\n\n    for (let i = 0; i < frameCount; i++) {\n      // Sentry frames are in reverse order\n      const frameIndex = frameCount - i - 1;\n\n      // Drop out if we run out of frames to match up\n      if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([exception, 'optionalAccess', _51 => _51.stacktrace, 'optionalAccess', _52 => _52.frames, 'optionalAccess', _53 => _53[frameIndex]]) || !cachedFrames[i]) {\n        break;\n      }\n\n      if (\n        // We need to have vars to add\n        cachedFrames[i].vars === undefined ||\n        // We're not interested in frames that are not in_app because the vars are not relevant\n        exception.stacktrace.frames[frameIndex].in_app === false ||\n        // The function names need to match\n        !functionNamesMatch(exception.stacktrace.frames[frameIndex].function, cachedFrames[i].function)\n      ) {\n        continue;\n      }\n\n      exception.stacktrace.frames[frameIndex].vars = cachedFrames[i].vars;\n    }\n  }\n}LocalVariables.__initStatic();\n\n\n//# sourceMappingURL=localvariables.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/integrations/localvariables.js?")},"./node_modules/@sentry/node/esm/integrations/modules.js":(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Modules: () => (/* binding */ Modules)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nlet moduleCache;\n\n/** Extract information about paths */\nfunction getPaths() {\n  try {\n    return __webpack_require__.c ? Object.keys(__webpack_require__.c ) : [];\n  } catch (e) {\n    return [];\n  }\n}\n\n/** Extract information about package.json modules */\nfunction collectModules()\n\n {\n  const mainPaths = (__webpack_require__.c[__webpack_require__.s] && __webpack_require__.c[__webpack_require__.s].paths) || [];\n  const paths = getPaths();\n  const infos\n\n = {};\n  const seen\n\n = {};\n\n  paths.forEach(path => {\n    let dir = path;\n\n    /** Traverse directories upward in the search of package.json file */\n    const updir = () => {\n      const orig = dir;\n      dir = (0,path__WEBPACK_IMPORTED_MODULE_1__.dirname)(orig);\n\n      if (!dir || orig === dir || seen[orig]) {\n        return undefined;\n      }\n      if (mainPaths.indexOf(dir) < 0) {\n        return updir();\n      }\n\n      const pkgfile = (0,path__WEBPACK_IMPORTED_MODULE_1__.join)(orig, 'package.json');\n      seen[orig] = true;\n\n      if (!(0,fs__WEBPACK_IMPORTED_MODULE_0__.existsSync)(pkgfile)) {\n        return updir();\n      }\n\n      try {\n        const info = JSON.parse((0,fs__WEBPACK_IMPORTED_MODULE_0__.readFileSync)(pkgfile, 'utf8'))\n\n;\n        infos[info.name] = info.version;\n      } catch (_oO) {\n        // no-empty\n      }\n    };\n\n    updir();\n  });\n\n  return infos;\n}\n\n/** Add node modules / packages to the event */\nclass Modules  {constructor() { Modules.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Modules';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Modules.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    addGlobalEventProcessor(event => {\n      if (!getCurrentHub().getIntegration(Modules)) {\n        return event;\n      }\n      return {\n        ...event,\n        modules: {\n          ...event.modules,\n          ...this._getModules(),\n        },\n      };\n    });\n  }\n\n  /** Fetches the list of modules and the versions loaded by the entry file for your node.js app. */\n   _getModules() {\n    if (!moduleCache) {\n      moduleCache = collectModules();\n    }\n    return moduleCache;\n  }\n} Modules.__initStatic();\n\n\n//# sourceMappingURL=modules.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/integrations/modules.js?")},"./node_modules/@sentry/node/esm/integrations/onuncaughtexception.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OnUncaughtException: () => (/* binding */ OnUncaughtException)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _utils_errorhandling_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/errorhandling.js */ \"./node_modules/@sentry/node/esm/integrations/utils/errorhandling.js\");\n\n\n\n\n/** Global Exception handler */\nclass OnUncaughtException  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'OnUncaughtException';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = OnUncaughtException.id;}\n\n  /**\n   * @inheritDoc\n   */\n    __init2() {this.handler = this._makeErrorHandler();}\n\n  // CAREFUL: Please think twice before updating the way _options looks because the Next.js SDK depends on it in `index.server.ts`\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {OnUncaughtException.prototype.__init.call(this);OnUncaughtException.prototype.__init2.call(this);\n    this._options = {\n      exitEvenIfOtherHandlersAreRegistered: true,\n      ...options,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    global.process.on('uncaughtException', this.handler);\n  }\n\n  /**\n   * @hidden\n   */\n   _makeErrorHandler() {\n    const timeout = 2000;\n    let caughtFirstError = false;\n    let caughtSecondError = false;\n    let calledFatalError = false;\n    let firstError;\n\n    return (error) => {\n      let onFatalError = _utils_errorhandling_js__WEBPACK_IMPORTED_MODULE_0__.logAndExitProcess;\n      const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getClient)();\n\n      if (this._options.onFatalError) {\n        onFatalError = this._options.onFatalError;\n      } else if (client && client.getOptions().onFatalError) {\n        onFatalError = client.getOptions().onFatalError ;\n      }\n\n      // Attaching a listener to `uncaughtException` will prevent the node process from exiting. We generally do not\n      // want to alter this behaviour so we check for other listeners that users may have attached themselves and adjust\n      // exit behaviour of the SDK accordingly:\n      // - If other listeners are attached, do not exit.\n      // - If the only listener attached is ours, exit.\n      const userProvidedListenersCount = (\n        global.process.listeners('uncaughtException')\n      ).reduce((acc, listener) => {\n        if (\n          // There are 3 listeners we ignore:\n          listener.name === 'domainUncaughtExceptionClear' || // as soon as we're using domains this listener is attached by node itself\n          (listener.tag && listener.tag === 'sentry_tracingErrorCallback') || // the handler we register for tracing\n          listener === this.handler // the handler we register in this integration\n        ) {\n          return acc;\n        } else {\n          return acc + 1;\n        }\n      }, 0);\n\n      const processWouldExit = userProvidedListenersCount === 0;\n      const shouldApplyFatalHandlingLogic = this._options.exitEvenIfOtherHandlersAreRegistered || processWouldExit;\n\n      if (!caughtFirstError) {\n        const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getCurrentHub)();\n\n        // this is the first uncaught error and the ultimate reason for shutting down\n        // we want to do absolutely everything possible to ensure it gets captured\n        // also we want to make sure we don't go recursion crazy if more errors happen after this one\n        firstError = error;\n        caughtFirstError = true;\n\n        if (hub.getIntegration(OnUncaughtException)) {\n          hub.withScope((scope) => {\n            scope.setLevel('fatal');\n            hub.captureException(error, {\n              originalException: error,\n              data: { mechanism: { handled: false, type: 'onuncaughtexception' } },\n            });\n            if (!calledFatalError && shouldApplyFatalHandlingLogic) {\n              calledFatalError = true;\n              onFatalError(error);\n            }\n          });\n        } else {\n          if (!calledFatalError && shouldApplyFatalHandlingLogic) {\n            calledFatalError = true;\n            onFatalError(error);\n          }\n        }\n      } else {\n        if (shouldApplyFatalHandlingLogic) {\n          if (calledFatalError) {\n            // we hit an error *after* calling onFatalError - pretty boned at this point, just shut it down\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n              _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn(\n                'uncaught exception after calling fatal error shutdown callback - this is bad! forcing shutdown',\n              );\n            (0,_utils_errorhandling_js__WEBPACK_IMPORTED_MODULE_0__.logAndExitProcess)(error);\n          } else if (!caughtSecondError) {\n            // two cases for how we can hit this branch:\n            //   - capturing of first error blew up and we just caught the exception from that\n            //     - quit trying to capture, proceed with shutdown\n            //   - a second independent error happened while waiting for first error to capture\n            //     - want to avoid causing premature shutdown before first error capture finishes\n            // it's hard to immediately tell case 1 from case 2 without doing some fancy/questionable domain stuff\n            // so let's instead just delay a bit before we proceed with our action here\n            // in case 1, we just wait a bit unnecessarily but ultimately do the same thing\n            // in case 2, the delay hopefully made us wait long enough for the capture to finish\n            // two potential nonideal outcomes:\n            //   nonideal case 1: capturing fails fast, we sit around for a few seconds unnecessarily before proceeding correctly by calling onFatalError\n            //   nonideal case 2: case 2 happens, 1st error is captured but slowly, timeout completes before capture and we treat second error as the sendErr of (nonexistent) failure from trying to capture first error\n            // note that after hitting this branch, we might catch more errors where (caughtSecondError && !calledFatalError)\n            //   we ignore them - they don't matter to us, we're just waiting for the second error timeout to finish\n            caughtSecondError = true;\n            setTimeout(() => {\n              if (!calledFatalError) {\n                // it was probably case 1, let's treat err as the sendErr and call onFatalError\n                calledFatalError = true;\n                onFatalError(firstError, error);\n              }\n            }, timeout); // capturing could take at least sendTimeout to fail, plus an arbitrary second for how long it takes to collect surrounding source etc\n          }\n        }\n      }\n    };\n  }\n} OnUncaughtException.__initStatic();\n\n\n//# sourceMappingURL=onuncaughtexception.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/integrations/onuncaughtexception.js?")},"./node_modules/@sentry/node/esm/integrations/onunhandledrejection.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OnUnhandledRejection: () => (/* binding */ OnUnhandledRejection)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _utils_errorhandling_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/errorhandling.js */ \"./node_modules/@sentry/node/esm/integrations/utils/errorhandling.js\");\n\n\n\n\n/** Global Promise Rejection handler */\nclass OnUnhandledRejection  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'OnUnhandledRejection';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = OnUnhandledRejection.id;}\n\n  /**\n   * @inheritDoc\n   */\n   constructor(\n      _options\n\n = { mode: 'warn' },\n  ) {this._options = _options;OnUnhandledRejection.prototype.__init.call(this);}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    global.process.on('unhandledRejection', this.sendUnhandledPromise.bind(this));\n  }\n\n  /**\n   * Send an exception with reason\n   * @param reason string\n   * @param promise promise\n   */\n   sendUnhandledPromise(reason, promise) {\n    const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)();\n    if (hub.getIntegration(OnUnhandledRejection)) {\n      hub.withScope((scope) => {\n        scope.setExtra('unhandledPromiseRejection', true);\n        hub.captureException(reason, {\n          originalException: promise,\n          data: { mechanism: { handled: false, type: 'onunhandledrejection' } },\n        });\n      });\n    }\n    this._handleRejection(reason);\n  }\n\n  /**\n   * Handler for `mode` option\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _handleRejection(reason) {\n    // https://github.com/nodejs/node/blob/7cf6f9e964aa00772965391c23acda6d71972a9a/lib/internal/process/promises.js#L234-L240\n    const rejectionWarning =\n      'This error originated either by ' +\n      'throwing inside of an async function without a catch block, ' +\n      'or by rejecting a promise which was not handled with .catch().' +\n      ' The promise rejected with the reason:';\n\n    /* eslint-disable no-console */\n    if (this._options.mode === 'warn') {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.consoleSandbox)(() => {\n        console.warn(rejectionWarning);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        console.error(reason && reason.stack ? reason.stack : reason);\n      });\n    } else if (this._options.mode === 'strict') {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.consoleSandbox)(() => {\n        console.warn(rejectionWarning);\n      });\n      (0,_utils_errorhandling_js__WEBPACK_IMPORTED_MODULE_2__.logAndExitProcess)(reason);\n    }\n    /* eslint-enable no-console */\n  }\n} OnUnhandledRejection.__initStatic();\n\n\n//# sourceMappingURL=onunhandledrejection.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/integrations/onunhandledrejection.js?")},"./node_modules/@sentry/node/esm/integrations/spotlight.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Spotlight: () => (/* binding */ Spotlight)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(http__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n\n\n/**\n * Use this integration to send errors and transactions to Spotlight.\n *\n * Learn more about spotlight at https://spotlightjs.com\n *\n * Important: This integration only works with Node 18 or newer\n */\nclass Spotlight  {\n   static __initStatic() {this.id = 'Spotlight';}\n   __init() {this.name = Spotlight.id;}\n\n   constructor(options) {Spotlight.prototype.__init.call(this);\n    this._options = {\n      sidecarUrl: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([options, 'optionalAccess', _ => _.sidecarUrl]) || 'http://localhost:8969/stream',\n    };\n  }\n\n  /**\n   * JSDoc\n   */\n   setupOnce() {\n    // empty but otherwise TS complains\n  }\n\n  /**\n   * Sets up forwarding envelopes to the Spotlight Sidecar\n   */\n   setup(client) {\n    if (false) {}\n    connectToSpotlight(client, this._options);\n  }\n}Spotlight.__initStatic();\n\nfunction connectToSpotlight(client, options) {\n  const spotlightUrl = parseSidecarUrl(options.sidecarUrl);\n  if (!spotlightUrl) {\n    return;\n  }\n\n  let failedRequests = 0;\n\n  if (typeof client.on !== 'function') {\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('[Spotlight] Cannot connect to spotlight due to missing method on SDK client (`client.on`)');\n    return;\n  }\n\n  client.on('beforeEnvelope', (envelope) => {\n    if (failedRequests > 3) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('[Spotlight] Disabled Sentry -> Spotlight integration due to too many failed requests');\n      return;\n    }\n\n    const serializedEnvelope = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.serializeEnvelope)(envelope);\n\n    const req = http__WEBPACK_IMPORTED_MODULE_0__.request(\n      {\n        method: 'POST',\n        path: spotlightUrl.pathname,\n        hostname: spotlightUrl.hostname,\n        port: spotlightUrl.port,\n        headers: {\n          'Content-Type': 'application/x-sentry-envelope',\n        },\n      },\n      res => {\n        res.on('data', () => {\n          // Drain socket\n        });\n\n        res.on('end', () => {\n          // Drain socket\n        });\n        res.setEncoding('utf8');\n      },\n    );\n\n    req.on('error', () => {\n      failedRequests++;\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('[Spotlight] Failed to send envelope to Spotlight Sidecar');\n    });\n    req.write(serializedEnvelope);\n    req.end();\n  });\n}\n\nfunction parseSidecarUrl(url) {\n  try {\n    return new url__WEBPACK_IMPORTED_MODULE_1__.URL(`${url}`);\n  } catch (e) {\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn(`[Spotlight] Invalid sidecar URL: ${url}`);\n    return undefined;\n  }\n}\n\n\n//# sourceMappingURL=spotlight.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/integrations/spotlight.js?")},"./node_modules/@sentry/node/esm/integrations/undici/index.js":(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChannelName: () => (/* binding */ ChannelName),\n/* harmony export */   Undici: () => (/* binding */ Undici)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/utils/isSentryRequestUrl.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/lru.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/node.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/baggage.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/url.js\");\n/* harmony import */ var _nodeVersion_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../nodeVersion.js */ \"./node_modules/@sentry/node/esm/nodeVersion.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\n\n\nvar ChannelName;(function (ChannelName) {\n  // https://github.com/nodejs/undici/blob/e6fc80f809d1217814c044f52ed40ef13f21e43c/docs/api/DiagnosticsChannel.md#undicirequestcreate\n  const RequestCreate = 'undici:request:create'; ChannelName[\"RequestCreate\"] = RequestCreate;\n  const RequestEnd = 'undici:request:headers'; ChannelName[\"RequestEnd\"] = RequestEnd;\n  const RequestError = 'undici:request:error'; ChannelName[\"RequestError\"] = RequestError;\n})(ChannelName || (ChannelName = {}));\n\n// Please note that you cannot use `console.log` to debug the callbacks registered to the `diagnostics_channel` API.\n// To debug, you can use `writeFileSync` to write to a file:\n// https://nodejs.org/api/async_hooks.html#printing-in-asynchook-callbacks\n//\n// import { writeFileSync } from 'fs';\n// import { format } from 'util';\n//\n// function debug(...args: any): void {\n//   // Use a function like this one when debugging inside an AsyncHook callback\n//   // @ts-expect-error any\n//   writeFileSync('log.out', `${format(...args)}\\n`, { flag: 'a' });\n// }\n\n/**\n * Instruments outgoing HTTP requests made with the `undici` package via\n * Node's `diagnostics_channel` API.\n *\n * Supports Undici 4.7.0 or higher.\n *\n * Requires Node 16.17.0 or higher.\n */\nclass Undici  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Undici';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Undici.id;}\n\n    __init2() {this._createSpanUrlMap = new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.LRUMap(100);}\n    __init3() {this._headersUrlMap = new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.LRUMap(100);}\n\n   constructor(_options = {}) {Undici.prototype.__init.call(this);Undici.prototype.__init2.call(this);Undici.prototype.__init3.call(this);Undici.prototype.__init4.call(this);Undici.prototype.__init5.call(this);Undici.prototype.__init6.call(this);\n    this._options = {\n      breadcrumbs: _options.breadcrumbs === undefined ? true : _options.breadcrumbs,\n      shouldCreateSpanForRequest: _options.shouldCreateSpanForRequest,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_addGlobalEventProcessor) {\n    // Requires Node 16+ to use the diagnostics_channel API.\n    if (_nodeVersion_js__WEBPACK_IMPORTED_MODULE_1__.NODE_VERSION.major && _nodeVersion_js__WEBPACK_IMPORTED_MODULE_1__.NODE_VERSION.major < 16) {\n      return;\n    }\n\n    let ds;\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      ds = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dynamicRequire)(module, 'diagnostics_channel') ;\n    } catch (e) {\n      // no-op\n    }\n\n    if (!ds || !ds.subscribe) {\n      return;\n    }\n\n    // https://github.com/nodejs/undici/blob/e6fc80f809d1217814c044f52ed40ef13f21e43c/docs/api/DiagnosticsChannel.md\n    ds.subscribe(ChannelName.RequestCreate, this._onRequestCreate);\n    ds.subscribe(ChannelName.RequestEnd, this._onRequestEnd);\n    ds.subscribe(ChannelName.RequestError, this._onRequestError);\n  }\n\n  /** Helper that wraps shouldCreateSpanForRequest option */\n   _shouldCreateSpan(url) {\n    if (this._options.shouldCreateSpanForRequest === undefined) {\n      return true;\n    }\n\n    const cachedDecision = this._createSpanUrlMap.get(url);\n    if (cachedDecision !== undefined) {\n      return cachedDecision;\n    }\n\n    const decision = this._options.shouldCreateSpanForRequest(url);\n    this._createSpanUrlMap.set(url, decision);\n    return decision;\n  }\n\n   __init4() {this._onRequestCreate = (message) => {\n    const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getCurrentHub)();\n    if (!hub.getIntegration(Undici)) {\n      return;\n    }\n\n    const { request } = message ;\n\n    const stringUrl = request.origin ? request.origin.toString() + request.path : request.path;\n\n    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.isSentryRequestUrl)(stringUrl, hub) || request.__sentry_span__ !== undefined) {\n      return;\n    }\n\n    const client = hub.getClient();\n    if (!client) {\n      return;\n    }\n\n    const clientOptions = client.getOptions();\n    const scope = hub.getScope();\n\n    const parentSpan = scope.getSpan();\n\n    const span = this._shouldCreateSpan(stringUrl) ? createRequestSpan(parentSpan, request, stringUrl) : undefined;\n    if (span) {\n      request.__sentry_span__ = span;\n    }\n\n    const shouldAttachTraceData = (url) => {\n      if (clientOptions.tracePropagationTargets === undefined) {\n        return true;\n      }\n\n      const cachedDecision = this._headersUrlMap.get(url);\n      if (cachedDecision !== undefined) {\n        return cachedDecision;\n      }\n\n      const decision = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.stringMatchesSomePattern)(url, clientOptions.tracePropagationTargets);\n      this._headersUrlMap.set(url, decision);\n      return decision;\n    };\n\n    if (shouldAttachTraceData(stringUrl)) {\n      if (span) {\n        const dynamicSamplingContext = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__._optionalChain)([span, 'optionalAccess', _4 => _4.transaction, 'optionalAccess', _5 => _5.getDynamicSamplingContext, 'call', _6 => _6()]);\n        const sentryBaggageHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.dynamicSamplingContextToSentryBaggageHeader)(dynamicSamplingContext);\n\n        setHeadersOnRequest(request, span.toTraceparent(), sentryBaggageHeader);\n      } else {\n        const { traceId, sampled, dsc } = scope.getPropagationContext();\n        const sentryTrace = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.generateSentryTraceHeader)(traceId, undefined, sampled);\n        const dynamicSamplingContext = dsc || (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.getDynamicSamplingContextFromClient)(traceId, client, scope);\n        const sentryBaggageHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.dynamicSamplingContextToSentryBaggageHeader)(dynamicSamplingContext);\n        setHeadersOnRequest(request, sentryTrace, sentryBaggageHeader);\n      }\n    }\n  };}\n\n   __init5() {this._onRequestEnd = (message) => {\n    const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getCurrentHub)();\n    if (!hub.getIntegration(Undici)) {\n      return;\n    }\n\n    const { request, response } = message ;\n\n    const stringUrl = request.origin ? request.origin.toString() + request.path : request.path;\n\n    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.isSentryRequestUrl)(stringUrl, hub)) {\n      return;\n    }\n\n    const span = request.__sentry_span__;\n    if (span) {\n      span.setHttpStatus(response.statusCode);\n      span.finish();\n    }\n\n    if (this._options.breadcrumbs) {\n      hub.addBreadcrumb(\n        {\n          category: 'http',\n          data: {\n            method: request.method,\n            status_code: response.statusCode,\n            url: stringUrl,\n          },\n          type: 'http',\n        },\n        {\n          event: 'response',\n          request,\n          response,\n        },\n      );\n    }\n  };}\n\n   __init6() {this._onRequestError = (message) => {\n    const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getCurrentHub)();\n    if (!hub.getIntegration(Undici)) {\n      return;\n    }\n\n    const { request } = message ;\n\n    const stringUrl = request.origin ? request.origin.toString() + request.path : request.path;\n\n    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.isSentryRequestUrl)(stringUrl, hub)) {\n      return;\n    }\n\n    const span = request.__sentry_span__;\n    if (span) {\n      span.setStatus('internal_error');\n      span.finish();\n    }\n\n    if (this._options.breadcrumbs) {\n      hub.addBreadcrumb(\n        {\n          category: 'http',\n          data: {\n            method: request.method,\n            url: stringUrl,\n          },\n          level: 'error',\n          type: 'http',\n        },\n        {\n          event: 'error',\n          request,\n        },\n      );\n    }\n  };}\n}Undici.__initStatic();\n\nfunction setHeadersOnRequest(\n  request,\n  sentryTrace,\n  sentryBaggageHeader,\n) {\n  const headerLines = request.headers.split('\\r\\n');\n  const hasSentryHeaders = headerLines.some(headerLine => headerLine.startsWith('sentry-trace:'));\n\n  if (hasSentryHeaders) {\n    return;\n  }\n\n  request.addHeader('sentry-trace', sentryTrace);\n  if (sentryBaggageHeader) {\n    request.addHeader('baggage', sentryBaggageHeader);\n  }\n}\n\nfunction createRequestSpan(\n  activeSpan,\n  request,\n  stringUrl,\n) {\n  const url = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_10__.parseUrl)(stringUrl);\n\n  const method = request.method || 'GET';\n  const data = {\n    'http.method': method,\n  };\n  if (url.search) {\n    data['http.query'] = url.search;\n  }\n  if (url.hash) {\n    data['http.fragment'] = url.hash;\n  }\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__._optionalChain)([activeSpan, 'optionalAccess', _7 => _7.startChild, 'call', _8 => _8({\n    op: 'http.client',\n    origin: 'auto.http.node.undici',\n    description: `${method} ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_10__.getSanitizedUrlString)(url)}`,\n    data,\n  })]);\n}\n\n\n//# sourceMappingURL=index.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/integrations/undici/index.js?")},"./node_modules/@sentry/node/esm/integrations/utils/errorhandling.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logAndExitProcess: () => (/* binding */ logAndExitProcess)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/logger.js\");\n\n\n\nconst DEFAULT_SHUTDOWN_TIMEOUT = 2000;\n\n/**\n * @hidden\n */\nfunction logAndExitProcess(error) {\n  // eslint-disable-next-line no-console\n  console.error(error);\n\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n\n  if (client === undefined) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('No NodeClient was defined, we are exiting the process now.');\n    global.process.exit(1);\n  }\n\n  const options = client.getOptions();\n  const timeout =\n    (options && options.shutdownTimeout && options.shutdownTimeout > 0 && options.shutdownTimeout) ||\n    DEFAULT_SHUTDOWN_TIMEOUT;\n  client.close(timeout).then(\n    (result) => {\n      if (!result) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('We reached the timeout for emptying the request buffer, still exiting now!');\n      }\n      global.process.exit(1);\n    },\n    error => {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.error(error);\n    },\n  );\n}\n\n\n//# sourceMappingURL=errorhandling.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/integrations/utils/errorhandling.js?")},"./node_modules/@sentry/node/esm/integrations/utils/http.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cleanSpanDescription: () => (/* binding */ cleanSpanDescription),\n/* harmony export */   extractRawUrl: () => (/* binding */ extractRawUrl),\n/* harmony export */   extractUrl: () => (/* binding */ extractUrl),\n/* harmony export */   normalizeRequestArgs: () => (/* binding */ normalizeRequestArgs),\n/* harmony export */   urlToOptions: () => (/* binding */ urlToOptions)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _nodeVersion_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../nodeVersion.js */ \"./node_modules/@sentry/node/esm/nodeVersion.js\");\n\n\n\n\n/**\n * Assembles a URL that's passed to the users to filter on.\n * It can include raw (potentially PII containing) data, which we'll allow users to access to filter\n * but won't include in spans or breadcrumbs.\n *\n * @param requestOptions RequestOptions object containing the component parts for a URL\n * @returns Fully-formed URL\n */\n// TODO (v8): This function should include auth, query and fragment (it's breaking, so we need to wait for v8)\nfunction extractRawUrl(requestOptions) {\n  const { protocol, hostname, port } = parseRequestOptions(requestOptions);\n  const path = requestOptions.path ? requestOptions.path : '/';\n  return `${protocol}//${hostname}${port}${path}`;\n}\n\n/**\n * Assemble a URL to be used for breadcrumbs and spans.\n *\n * @param requestOptions RequestOptions object containing the component parts for a URL\n * @returns Fully-formed URL\n */\nfunction extractUrl(requestOptions) {\n  const { protocol, hostname, port } = parseRequestOptions(requestOptions);\n\n  const path = requestOptions.pathname || '/';\n\n  // always filter authority, see https://develop.sentry.dev/sdk/data-handling/#structuring-data\n  const authority = requestOptions.auth ? redactAuthority(requestOptions.auth) : '';\n\n  return `${protocol}//${authority}${hostname}${port}${path}`;\n}\n\nfunction redactAuthority(auth) {\n  const [user, password] = auth.split(':');\n  return `${user ? '[Filtered]' : ''}:${password ? '[Filtered]' : ''}@`;\n}\n\n/**\n * Handle various edge cases in the span description (for spans representing http(s) requests).\n *\n * @param description current `description` property of the span representing the request\n * @param requestOptions Configuration data for the request\n * @param Request Request object\n *\n * @returns The cleaned description\n */\nfunction cleanSpanDescription(\n  description,\n  requestOptions,\n  request,\n) {\n  // nothing to clean\n  if (!description) {\n    return description;\n  }\n\n  // eslint-disable-next-line prefer-const\n  let [method, requestUrl] = description.split(' ');\n\n  // superagent sticks the protocol in a weird place (we check for host because if both host *and* protocol are missing,\n  // we're likely dealing with an internal route and this doesn't apply)\n  if (requestOptions.host && !requestOptions.protocol) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    requestOptions.protocol = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([(request ), 'optionalAccess', _ => _.agent, 'optionalAccess', _2 => _2.protocol]); // worst comes to worst, this is undefined and nothing changes\n    // This URL contains the filtered authority ([filtered]:[filtered]@example.com) but no fragment or query params\n    requestUrl = extractUrl(requestOptions);\n  }\n\n  // internal routes can end up starting with a triple slash rather than a single one\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([requestUrl, 'optionalAccess', _3 => _3.startsWith, 'call', _4 => _4('///')])) {\n    requestUrl = requestUrl.slice(2);\n  }\n\n  return `${method} ${requestUrl}`;\n}\n\n// the node types are missing a few properties which node's `urlToOptions` function spits out\n\n/**\n * Convert a URL object into a RequestOptions object.\n *\n * Copied from Node's internals (where it's used in http(s).request() and http(s).get()), modified only to use the\n * RequestOptions type above.\n *\n * See https://github.com/nodejs/node/blob/master/lib/internal/url.js.\n */\nfunction urlToOptions(url) {\n  const options = {\n    protocol: url.protocol,\n    hostname:\n      typeof url.hostname === 'string' && url.hostname.startsWith('[') ? url.hostname.slice(1, -1) : url.hostname,\n    hash: url.hash,\n    search: url.search,\n    pathname: url.pathname,\n    path: `${url.pathname || ''}${url.search || ''}`,\n    href: url.href,\n  };\n  if (url.port !== '') {\n    options.port = Number(url.port);\n  }\n  if (url.username || url.password) {\n    options.auth = `${url.username}:${url.password}`;\n  }\n  return options;\n}\n\n/**\n * Normalize inputs to `http(s).request()` and `http(s).get()`.\n *\n * Legal inputs to `http(s).request()` and `http(s).get()` can take one of ten forms:\n *     [ RequestOptions | string | URL ],\n *     [ RequestOptions | string | URL, RequestCallback ],\n *     [ string | URL, RequestOptions ], and\n *     [ string | URL, RequestOptions, RequestCallback ].\n *\n * This standardizes to one of two forms: [ RequestOptions ] and [ RequestOptions, RequestCallback ]. A similar thing is\n * done as the first step of `http(s).request()` and `http(s).get()`; this just does it early so that we can interact\n * with the args in a standard way.\n *\n * @param requestArgs The inputs to `http(s).request()` or `http(s).get()`, as an array.\n *\n * @returns Equivalent args of the form [ RequestOptions ] or [ RequestOptions, RequestCallback ].\n */\nfunction normalizeRequestArgs(\n  httpModule,\n  requestArgs,\n) {\n  let callback, requestOptions;\n\n  // pop off the callback, if there is one\n  if (typeof requestArgs[requestArgs.length - 1] === 'function') {\n    callback = requestArgs.pop() ;\n  }\n\n  // create a RequestOptions object of whatever's at index 0\n  if (typeof requestArgs[0] === 'string') {\n    requestOptions = urlToOptions(new url__WEBPACK_IMPORTED_MODULE_0__.URL(requestArgs[0]));\n  } else if (requestArgs[0] instanceof url__WEBPACK_IMPORTED_MODULE_0__.URL) {\n    requestOptions = urlToOptions(requestArgs[0]);\n  } else {\n    requestOptions = requestArgs[0];\n\n    try {\n      const parsed = new url__WEBPACK_IMPORTED_MODULE_0__.URL(\n        requestOptions.path || '',\n        `${requestOptions.protocol || 'http:'}//${requestOptions.hostname}`,\n      );\n      requestOptions = {\n        pathname: parsed.pathname,\n        search: parsed.search,\n        hash: parsed.hash,\n        ...requestOptions,\n      };\n    } catch (e) {\n      // ignore\n    }\n  }\n\n  // if the options were given separately from the URL, fold them in\n  if (requestArgs.length === 2) {\n    requestOptions = { ...requestOptions, ...requestArgs[1] };\n  }\n\n  // Figure out the protocol if it's currently missing\n  if (requestOptions.protocol === undefined) {\n    // Worst case we end up populating protocol with undefined, which it already is\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any */\n\n    // NOTE: Prior to Node 9, `https` used internals of `http` module, thus we don't patch it.\n    // Because of that, we cannot rely on `httpModule` to provide us with valid protocol,\n    // as it will always return `http`, even when using `https` module.\n    //\n    // See test/integrations/http.test.ts for more details on Node <=v8 protocol issue.\n    if (_nodeVersion_js__WEBPACK_IMPORTED_MODULE_2__.NODE_VERSION.major && _nodeVersion_js__WEBPACK_IMPORTED_MODULE_2__.NODE_VERSION.major > 8) {\n      requestOptions.protocol =\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([httpModule, 'optionalAccess', _5 => _5.globalAgent]) ), 'optionalAccess', _6 => _6.protocol]) ||\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([(requestOptions.agent ), 'optionalAccess', _7 => _7.protocol]) ||\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([(requestOptions._defaultAgent ), 'optionalAccess', _8 => _8.protocol]);\n    } else {\n      requestOptions.protocol =\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([(requestOptions.agent ), 'optionalAccess', _9 => _9.protocol]) ||\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([(requestOptions._defaultAgent ), 'optionalAccess', _10 => _10.protocol]) ||\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([httpModule, 'optionalAccess', _11 => _11.globalAgent]) ), 'optionalAccess', _12 => _12.protocol]);\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any */\n  }\n\n  // return args in standardized form\n  if (callback) {\n    return [requestOptions, callback];\n  } else {\n    return [requestOptions];\n  }\n}\n\nfunction parseRequestOptions(requestOptions)\n\n {\n  const protocol = requestOptions.protocol || '';\n  const hostname = requestOptions.hostname || requestOptions.host || '';\n  // Don't log standard :80 (http) and :443 (https) ports to reduce the noise\n  // Also don't add port if the hostname already includes a port\n  const port =\n    !requestOptions.port || requestOptions.port === 80 || requestOptions.port === 443 || /^(.*):(\\d+)$/.test(hostname)\n      ? ''\n      : `:${requestOptions.port}`;\n\n  return { protocol, hostname, port };\n}\n\n\n//# sourceMappingURL=http.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/integrations/utils/http.js?")},"./node_modules/@sentry/node/esm/module.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getModuleFromFilename: () => (/* binding */ getModuleFromFilename)\n/* harmony export */ });\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst isWindowsPlatform = path__WEBPACK_IMPORTED_MODULE_0__.sep === '\\\\';\n\n/** normalizes Windows paths */\nfunction normalizeWindowsPath(path) {\n  return path\n    .replace(/^[A-Z]:/, '') // remove Windows-style prefix\n    .replace(/\\\\/g, '/'); // replace all `\\` instances with `/`\n}\n\n/** Gets the module from a filename */\nfunction getModuleFromFilename(\n  filename,\n  normalizeWindowsPathSeparator = isWindowsPlatform,\n) {\n  if (!filename) {\n    return;\n  }\n\n  const normalizedFilename = normalizeWindowsPathSeparator ? normalizeWindowsPath(filename) : filename;\n\n  // eslint-disable-next-line prefer-const\n  let { root, dir, base: basename, ext } = path__WEBPACK_IMPORTED_MODULE_0__.posix.parse(normalizedFilename);\n\n  const base = ( true && __webpack_require__.c[__webpack_require__.s] && __webpack_require__.c[__webpack_require__.s].filename && dir) || global.process.cwd();\n\n  const normalizedBase = `${base}/`;\n\n  // It's specifically a module\n  let file = basename;\n\n  if (ext === '.js' || ext === '.mjs' || ext === '.cjs') {\n    file = file.slice(0, ext.length * -1);\n  }\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    dir = '.';\n  }\n\n  let n = dir.lastIndexOf('/node_modules/');\n  if (n > -1) {\n    // /node_modules/ is 14 chars\n    return `${dir.slice(n + 14).replace(/\\//g, '.')}:${file}`;\n  }\n  // Let's see if it's a part of the main module\n  // To be a part of main module, it has to share the same base\n  n = `${dir}/`.lastIndexOf(normalizedBase, 0);\n\n  if (n === 0) {\n    let moduleName = dir.slice(normalizedBase.length).replace(/\\//g, '.');\n    if (moduleName) {\n      moduleName += ':';\n    }\n    moduleName += file;\n    return moduleName;\n  }\n  return file;\n}\n\n\n//# sourceMappingURL=module.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/module.js?")},"./node_modules/@sentry/node/esm/nodeVersion.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NODE_VERSION: () => (/* binding */ NODE_VERSION)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/misc.js");\n\n\nconst NODE_VERSION = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.parseSemver)(process.versions.node);\n\n\n//# sourceMappingURL=nodeVersion.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/nodeVersion.js?')},"./node_modules/@sentry/node/esm/requestDataDeprecated.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractRequestData: () => (/* binding */ extractRequestData),\n/* harmony export */   parseRequest: () => (/* binding */ parseRequest)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/requestdata.js");\n\n\n/**\n * @deprecated `Handlers.ExpressRequest` is deprecated and will be removed in v8. Use `PolymorphicRequest` instead.\n */\n\n/**\n * Normalizes data from the request object, accounting for framework differences.\n *\n * @deprecated `Handlers.extractRequestData` is deprecated and will be removed in v8. Use `extractRequestData` instead.\n *\n * @param req The request object from which to extract data\n * @param keys An optional array of keys to include in the normalized data.\n * @returns An object containing normalized request data\n */\nfunction extractRequestData(req, keys) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.extractRequestData)(req, { include: keys });\n}\n\n/**\n * Options deciding what parts of the request to use when enhancing an event\n *\n * @deprecated `Handlers.ParseRequestOptions` is deprecated and will be removed in v8. Use\n * `AddRequestDataToEventOptions` in `@sentry/utils` instead.\n */\n\n/**\n * Enriches passed event with request data.\n *\n * @deprecated `Handlers.parseRequest` is deprecated and will be removed in v8. Use `addRequestDataToEvent` instead.\n *\n * @param event Will be mutated and enriched with req data\n * @param req Request object\n * @param options object containing flags to enable functionality\n * @hidden\n */\nfunction parseRequest(event, req, options = {}) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addRequestDataToEvent)(event, req, { include: options });\n}\n\n\n//# sourceMappingURL=requestDataDeprecated.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/requestDataDeprecated.js?')},"./node_modules/@sentry/node/esm/sdk.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultIntegrations: () => (/* binding */ defaultIntegrations),\n/* harmony export */   defaultStackParser: () => (/* binding */ defaultStackParser),\n/* harmony export */   getSentryRelease: () => (/* binding */ getSentryRelease),\n/* harmony export */   init: () => (/* binding */ init),\n/* harmony export */   isAutoSessionTrackingEnabled: () => (/* binding */ isAutoSessionTrackingEnabled)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/integrations/inboundfilters.js");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/integrations/functiontostring.js");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/integrations/linkederrors.js");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/integrations/requestdata.js");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/hub.js");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/integration.js");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/sdk.js");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/stacktrace.js");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/worldwide.js");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/tracing.js");\n/* harmony import */ var _anr_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./anr/index.js */ "./node_modules/@sentry/node/esm/anr/index.js");\n/* harmony import */ var _async_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./async/index.js */ "./node_modules/@sentry/node/esm/async/index.js");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./client.js */ "./node_modules/@sentry/node/esm/client.js");\n/* harmony import */ var _integrations_console_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./integrations/console.js */ "./node_modules/@sentry/node/esm/integrations/console.js");\n/* harmony import */ var _integrations_http_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./integrations/http.js */ "./node_modules/@sentry/node/esm/integrations/http.js");\n/* harmony import */ var _integrations_onuncaughtexception_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./integrations/onuncaughtexception.js */ "./node_modules/@sentry/node/esm/integrations/onuncaughtexception.js");\n/* harmony import */ var _integrations_onunhandledrejection_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./integrations/onunhandledrejection.js */ "./node_modules/@sentry/node/esm/integrations/onunhandledrejection.js");\n/* harmony import */ var _integrations_modules_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./integrations/modules.js */ "./node_modules/@sentry/node/esm/integrations/modules.js");\n/* harmony import */ var _integrations_contextlines_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./integrations/contextlines.js */ "./node_modules/@sentry/node/esm/integrations/contextlines.js");\n/* harmony import */ var _integrations_context_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./integrations/context.js */ "./node_modules/@sentry/node/esm/integrations/context.js");\n/* harmony import */ var _integrations_localvariables_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./integrations/localvariables.js */ "./node_modules/@sentry/node/esm/integrations/localvariables.js");\n/* harmony import */ var _integrations_undici_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./integrations/undici/index.js */ "./node_modules/@sentry/node/esm/integrations/undici/index.js");\n/* harmony import */ var _integrations_spotlight_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./integrations/spotlight.js */ "./node_modules/@sentry/node/esm/integrations/spotlight.js");\n/* harmony import */ var _module_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./module.js */ "./node_modules/@sentry/node/esm/module.js");\n/* harmony import */ var _transports_http_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./transports/http.js */ "./node_modules/@sentry/node/esm/transports/http.js");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* eslint-disable max-lines */\n\nconst defaultIntegrations = [\n  // Common\n  new _sentry_core__WEBPACK_IMPORTED_MODULE_0__.InboundFilters(),\n  new _sentry_core__WEBPACK_IMPORTED_MODULE_1__.FunctionToString(),\n  new _sentry_core__WEBPACK_IMPORTED_MODULE_2__.LinkedErrors(),\n  // Native Wrappers\n  new _integrations_console_js__WEBPACK_IMPORTED_MODULE_3__.Console(),\n  new _integrations_http_js__WEBPACK_IMPORTED_MODULE_4__.Http(),\n  new _integrations_undici_index_js__WEBPACK_IMPORTED_MODULE_5__.Undici(),\n  // Global Handlers\n  new _integrations_onuncaughtexception_js__WEBPACK_IMPORTED_MODULE_6__.OnUncaughtException(),\n  new _integrations_onunhandledrejection_js__WEBPACK_IMPORTED_MODULE_7__.OnUnhandledRejection(),\n  // Event Info\n  new _integrations_contextlines_js__WEBPACK_IMPORTED_MODULE_8__.ContextLines(),\n  new _integrations_localvariables_js__WEBPACK_IMPORTED_MODULE_9__.LocalVariables(),\n  new _integrations_context_js__WEBPACK_IMPORTED_MODULE_10__.Context(),\n  new _integrations_modules_js__WEBPACK_IMPORTED_MODULE_11__.Modules(),\n  new _sentry_core__WEBPACK_IMPORTED_MODULE_12__.RequestData(),\n];\n\n/**\n * The Sentry Node SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible in the\n * main entry module. To set context information or send manual events, use the\n * provided methods.\n *\n * @example\n * ```\n *\n * const { init } = require(\'@sentry/node\');\n *\n * init({\n *   dsn: \'__DSN__\',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * const { configureScope } = require(\'@sentry/node\');\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: \'admin\' });\n *   scope.setUser({ id: \'4711\' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * const { addBreadcrumb } = require(\'@sentry/node\');\n * addBreadcrumb({\n *   message: \'My Breadcrumb\',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * const Sentry = require(\'@sentry/node\');\n * Sentry.captureMessage(\'Hello, world!\');\n * Sentry.captureException(new Error(\'Good bye\'));\n * Sentry.captureEvent({\n *   message: \'Manual\',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link NodeOptions} for documentation on configuration options.\n */\n// eslint-disable-next-line complexity\nfunction init(options = {}) {\n  if ((0,_anr_index_js__WEBPACK_IMPORTED_MODULE_13__.isAnrChildProcess)()) {\n    options.autoSessionTracking = false;\n    options.tracesSampleRate = 0;\n  }\n\n  const carrier = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_14__.getMainCarrier)();\n\n  (0,_async_index_js__WEBPACK_IMPORTED_MODULE_15__.setNodeAsyncContextStrategy)();\n\n  const autoloadedIntegrations = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_16__._optionalChain)([carrier, \'access\', _ => _.__SENTRY__, \'optionalAccess\', _2 => _2.integrations]) || [];\n\n  options.defaultIntegrations =\n    options.defaultIntegrations === false\n      ? []\n      : [\n          ...(Array.isArray(options.defaultIntegrations) ? options.defaultIntegrations : defaultIntegrations),\n          ...autoloadedIntegrations,\n        ];\n\n  if (options.dsn === undefined && process.env.SENTRY_DSN) {\n    options.dsn = process.env.SENTRY_DSN;\n  }\n\n  const sentryTracesSampleRate = process.env.SENTRY_TRACES_SAMPLE_RATE;\n  if (options.tracesSampleRate === undefined && sentryTracesSampleRate) {\n    const tracesSampleRate = parseFloat(sentryTracesSampleRate);\n    if (isFinite(tracesSampleRate)) {\n      options.tracesSampleRate = tracesSampleRate;\n    }\n  }\n\n  if (options.release === undefined) {\n    const detectedRelease = getSentryRelease();\n    if (detectedRelease !== undefined) {\n      options.release = detectedRelease;\n    } else {\n      // If release is not provided, then we should disable autoSessionTracking\n      options.autoSessionTracking = false;\n    }\n  }\n\n  if (options.environment === undefined && process.env.SENTRY_ENVIRONMENT) {\n    options.environment = process.env.SENTRY_ENVIRONMENT;\n  }\n\n  if (options.autoSessionTracking === undefined && options.dsn !== undefined) {\n    options.autoSessionTracking = true;\n  }\n\n  if (options.instrumenter === undefined) {\n    options.instrumenter = \'sentry\';\n  }\n\n  // TODO(v7): Refactor this to reduce the logic above\n  const clientOptions = {\n    ...options,\n    stackParser: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_17__.stackParserFromStackParserOptions)(options.stackParser || defaultStackParser),\n    integrations: (0,_sentry_core__WEBPACK_IMPORTED_MODULE_18__.getIntegrationsToSetup)(options),\n    transport: options.transport || _transports_http_js__WEBPACK_IMPORTED_MODULE_19__.makeNodeTransport,\n  };\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_20__.initAndBind)(options.clientClass || _client_js__WEBPACK_IMPORTED_MODULE_21__.NodeClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n\n  updateScopeFromEnvVariables();\n\n  if (options.spotlight) {\n    const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_14__.getCurrentHub)().getClient();\n    if (client && client.addIntegration) {\n      // force integrations to be setup even if no DSN was set\n      client.setupIntegrations(true);\n      client.addIntegration(\n        new _integrations_spotlight_js__WEBPACK_IMPORTED_MODULE_22__.Spotlight({ sidecarUrl: typeof options.spotlight === \'string\' ? options.spotlight : undefined }),\n      );\n    }\n  }\n}\n\n/**\n * Function that takes an instance of NodeClient and checks if autoSessionTracking option is enabled for that client\n */\nfunction isAutoSessionTrackingEnabled(client) {\n  if (client === undefined) {\n    return false;\n  }\n  const clientOptions = client && client.getOptions();\n  if (clientOptions && clientOptions.autoSessionTracking !== undefined) {\n    return clientOptions.autoSessionTracking;\n  }\n  return false;\n}\n\n/**\n * Returns a release dynamically from environment variables.\n */\nfunction getSentryRelease(fallback) {\n  // Always read first as Sentry takes this as precedence\n  if (process.env.SENTRY_RELEASE) {\n    return process.env.SENTRY_RELEASE;\n  }\n\n  // This supports the variable that sentry-webpack-plugin injects\n  if (_sentry_utils__WEBPACK_IMPORTED_MODULE_23__.GLOBAL_OBJ.SENTRY_RELEASE && _sentry_utils__WEBPACK_IMPORTED_MODULE_23__.GLOBAL_OBJ.SENTRY_RELEASE.id) {\n    return _sentry_utils__WEBPACK_IMPORTED_MODULE_23__.GLOBAL_OBJ.SENTRY_RELEASE.id;\n  }\n\n  return (\n    // GitHub Actions - https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables#default-environment-variables\n    process.env.GITHUB_SHA ||\n    // Netlify - https://docs.netlify.com/configure-builds/environment-variables/#build-metadata\n    process.env.COMMIT_REF ||\n    // Vercel - https://vercel.com/docs/v2/build-step#system-environment-variables\n    process.env.VERCEL_GIT_COMMIT_SHA ||\n    process.env.VERCEL_GITHUB_COMMIT_SHA ||\n    process.env.VERCEL_GITLAB_COMMIT_SHA ||\n    process.env.VERCEL_BITBUCKET_COMMIT_SHA ||\n    // Zeit (now known as Vercel)\n    process.env.ZEIT_GITHUB_COMMIT_SHA ||\n    process.env.ZEIT_GITLAB_COMMIT_SHA ||\n    process.env.ZEIT_BITBUCKET_COMMIT_SHA ||\n    fallback\n  );\n}\n\n/** Node.js stack parser */\nconst defaultStackParser = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_17__.createStackParser)((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_17__.nodeStackLineParser)(_module_js__WEBPACK_IMPORTED_MODULE_24__.getModuleFromFilename));\n\n/**\n * Enable automatic Session Tracking for the node process.\n */\nfunction startSessionTracking() {\n  const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_14__.getCurrentHub)();\n  hub.startSession();\n  // Emitted in the case of healthy sessions, error of `mechanism.handled: true` and unhandledrejections because\n  // The \'beforeExit\' event is not emitted for conditions causing explicit termination,\n  // such as calling process.exit() or uncaught exceptions.\n  // Ref: https://nodejs.org/api/process.html#process_event_beforeexit\n  process.on(\'beforeExit\', () => {\n    const session = hub.getScope().getSession();\n    const terminalStates = [\'exited\', \'crashed\'];\n    // Only call endSession, if the Session exists on Scope and SessionStatus is not a\n    // Terminal Status i.e. Exited or Crashed because\n    // "When a session is moved away from ok it must not be updated anymore."\n    // Ref: https://develop.sentry.dev/sdk/sessions/\n    if (session && !terminalStates.includes(session.status)) hub.endSession();\n  });\n}\n\n/**\n * Update scope and propagation context based on environmental variables.\n *\n * See https://github.com/getsentry/rfcs/blob/main/text/0071-continue-trace-over-process-boundaries.md\n * for more details.\n */\nfunction updateScopeFromEnvVariables() {\n  const sentryUseEnvironment = (process.env.SENTRY_USE_ENVIRONMENT || \'\').toLowerCase();\n  if (![\'false\', \'n\', \'no\', \'off\', \'0\'].includes(sentryUseEnvironment)) {\n    const sentryTraceEnv = process.env.SENTRY_TRACE;\n    const baggageEnv = process.env.SENTRY_BAGGAGE;\n    const { propagationContext } = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_25__.tracingContextFromHeaders)(sentryTraceEnv, baggageEnv);\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_14__.getCurrentHub)().getScope().setPropagationContext(propagationContext);\n  }\n}\n\n\n//# sourceMappingURL=sdk.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/sdk.js?')},"./node_modules/@sentry/node/esm/tracing/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   autoDiscoverNodePerformanceMonitoringIntegrations: () => (/* binding */ autoDiscoverNodePerformanceMonitoringIntegrations)\n/* harmony export */ });\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry-internal/tracing/esm/node/integrations/lazy.js");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/logger.js");\n\n\n\n/**\n * Automatically detects and returns integrations that will work with your dependencies.\n */\nfunction autoDiscoverNodePerformanceMonitoringIntegrations() {\n  const loadedIntegrations = _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_0__.lazyLoadedNodePerformanceMonitoringIntegrations\n    .map(tryLoad => {\n      try {\n        return tryLoad();\n      } catch (_) {\n        return undefined;\n      }\n    })\n    .filter(integration => !!integration) ;\n\n  if (loadedIntegrations.length === 0) {\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn(\'Performance monitoring integrations could not be automatically loaded.\');\n  }\n\n  // Only return integrations where their dependencies loaded successfully.\n  return loadedIntegrations.filter(integration => !!integration.loadDependency());\n}\n\n\n//# sourceMappingURL=index.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/tracing/index.js?')},"./node_modules/@sentry/node/esm/tracing/integrations.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Apollo: () => (/* reexport safe */ _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_0__.Apollo),\n/* harmony export */   Express: () => (/* reexport safe */ _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_1__.Express),\n/* harmony export */   GraphQL: () => (/* reexport safe */ _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_2__.GraphQL),\n/* harmony export */   Mongo: () => (/* reexport safe */ _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_3__.Mongo),\n/* harmony export */   Mysql: () => (/* reexport safe */ _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_4__.Mysql),\n/* harmony export */   Postgres: () => (/* reexport safe */ _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_5__.Postgres),\n/* harmony export */   Prisma: () => (/* reexport safe */ _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_6__.Prisma)\n/* harmony export */ });\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry-internal/tracing/esm/node/integrations/apollo.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry-internal/tracing/esm/node/integrations/express.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry-internal/tracing/esm/node/integrations/graphql.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry-internal/tracing/esm/node/integrations/mongo.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry-internal/tracing/esm/node/integrations/mysql.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry-internal/tracing/esm/node/integrations/postgres.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry-internal/tracing/esm/node/integrations/prisma.js");\n\n//# sourceMappingURL=integrations.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/tracing/integrations.js?')},"./node_modules/@sentry/node/esm/transports/http.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeNodeTransport: () => (/* binding */ makeNodeTransport)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/transports/base.js\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(http__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! https */ \"https\");\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(https__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var https_proxy_agent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! https-proxy-agent */ \"./node_modules/https-proxy-agent/dist/index.js\");\n/* harmony import */ var https_proxy_agent__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(https_proxy_agent__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! stream */ \"stream\");\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(stream__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! zlib */ \"zlib\");\n/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(zlib__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\n\n\n\n// Estimated maximum size for reasonable standalone event\nconst GZIP_THRESHOLD = 1024 * 32;\n\n/**\n * Gets a stream from a Uint8Array or string\n * Readable.from is ideal but was added in node.js v12.3.0 and v10.17.0\n */\nfunction streamFromBody(body) {\n  return new stream__WEBPACK_IMPORTED_MODULE_3__.Readable({\n    read() {\n      this.push(body);\n      this.push(null);\n    },\n  });\n}\n\n/**\n * Creates a Transport that uses native the native 'http' and 'https' modules to send events to Sentry.\n */\nfunction makeNodeTransport(options) {\n  let urlSegments;\n\n  try {\n    urlSegments = new url__WEBPACK_IMPORTED_MODULE_4__.URL(options.url);\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      '[@sentry/node]: Invalid dsn or tunnel option, will not send any events. The tunnel option must be a full URL when used.',\n    );\n    return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.createTransport)(options, () => Promise.resolve({}));\n  }\n\n  const isHttps = urlSegments.protocol === 'https:';\n\n  // Proxy prioritization: http => `options.proxy` | `process.env.http_proxy`\n  // Proxy prioritization: https => `options.proxy` | `process.env.https_proxy` | `process.env.http_proxy`\n  const proxy = applyNoProxyOption(\n    urlSegments,\n    options.proxy || (isHttps ? process.env.https_proxy : undefined) || process.env.http_proxy,\n  );\n\n  const nativeHttpModule = isHttps ? https__WEBPACK_IMPORTED_MODULE_1__ : http__WEBPACK_IMPORTED_MODULE_0__;\n  const keepAlive = options.keepAlive === undefined ? false : options.keepAlive;\n\n  // TODO(v7): Evaluate if we can set keepAlive to true. This would involve testing for memory leaks in older node\n  // versions(>= 8) as they had memory leaks when using it: #2555\n  const agent = proxy\n    ? (new https_proxy_agent__WEBPACK_IMPORTED_MODULE_2__.HttpsProxyAgent(proxy) )\n    : new nativeHttpModule.Agent({ keepAlive, maxSockets: 30, timeout: 2000 });\n\n  const requestExecutor = createRequestExecutor(options, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__._nullishCoalesce)(options.httpModule, () => ( nativeHttpModule)), agent);\n  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.createTransport)(options, requestExecutor);\n}\n\n/**\n * Honors the `no_proxy` env variable with the highest priority to allow for hosts exclusion.\n *\n * @param transportUrl The URL the transport intends to send events to.\n * @param proxy The client configured proxy.\n * @returns A proxy the transport should use.\n */\nfunction applyNoProxyOption(transportUrlSegments, proxy) {\n  const { no_proxy } = process.env;\n\n  const urlIsExemptFromProxy =\n    no_proxy &&\n    no_proxy\n      .split(',')\n      .some(\n        exemption => transportUrlSegments.host.endsWith(exemption) || transportUrlSegments.hostname.endsWith(exemption),\n      );\n\n  if (urlIsExemptFromProxy) {\n    return undefined;\n  } else {\n    return proxy;\n  }\n}\n\n/**\n * Creates a RequestExecutor to be used with `createTransport`.\n */\nfunction createRequestExecutor(\n  options,\n  httpModule,\n  agent,\n) {\n  const { hostname, pathname, port, protocol, search } = new url__WEBPACK_IMPORTED_MODULE_4__.URL(options.url);\n  return function makeRequest(request) {\n    return new Promise((resolve, reject) => {\n      let body = streamFromBody(request.body);\n\n      const headers = { ...options.headers };\n\n      if (request.body.length > GZIP_THRESHOLD) {\n        headers['content-encoding'] = 'gzip';\n        body = body.pipe((0,zlib__WEBPACK_IMPORTED_MODULE_5__.createGzip)());\n      }\n\n      const req = httpModule.request(\n        {\n          method: 'POST',\n          agent,\n          headers,\n          hostname,\n          path: `${pathname}${search}`,\n          port,\n          protocol,\n          ca: options.caCerts,\n        },\n        res => {\n          res.on('data', () => {\n            // Drain socket\n          });\n\n          res.on('end', () => {\n            // Drain socket\n          });\n\n          res.setEncoding('utf8');\n\n          // \"Key-value pairs of header names and values. Header names are lower-cased.\"\n          // https://nodejs.org/api/http.html#http_message_headers\n          const retryAfterHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__._nullishCoalesce)(res.headers['retry-after'], () => ( null));\n          const rateLimitsHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__._nullishCoalesce)(res.headers['x-sentry-rate-limits'], () => ( null));\n\n          resolve({\n            statusCode: res.statusCode,\n            headers: {\n              'retry-after': retryAfterHeader,\n              'x-sentry-rate-limits': Array.isArray(rateLimitsHeader) ? rateLimitsHeader[0] : rateLimitsHeader,\n            },\n          });\n        },\n      );\n\n      req.on('error', reject);\n      body.pipe(req);\n    });\n  };\n}\n\n\n//# sourceMappingURL=http.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/transports/http.js?")},"./node_modules/@sentry/node/esm/utils.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deepReadDirSync: () => (/* binding */ deepReadDirSync)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ "fs");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ "path");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n/**\n * Recursively read the contents of a directory.\n *\n * @param targetDir Absolute or relative path of the directory to scan. All returned paths will be relative to this\n * directory.\n * @returns Array holding all relative paths\n */\nfunction deepReadDirSync(targetDir) {\n  const targetDirAbsPath = path__WEBPACK_IMPORTED_MODULE_1__.resolve(targetDir);\n\n  if (!fs__WEBPACK_IMPORTED_MODULE_0__.existsSync(targetDirAbsPath)) {\n    throw new Error(`Cannot read contents of ${targetDirAbsPath}. Directory does not exist.`);\n  }\n\n  if (!fs__WEBPACK_IMPORTED_MODULE_0__.statSync(targetDirAbsPath).isDirectory()) {\n    throw new Error(`Cannot read contents of ${targetDirAbsPath}, because it is not a directory.`);\n  }\n\n  // This does the same thing as its containing function, `deepReadDirSync` (except that - purely for convenience - it\n  // deals in absolute paths rather than relative ones). We need this to be separate from the outer function to preserve\n  // the difference between `targetDirAbsPath` and `currentDirAbsPath`.\n  const deepReadCurrentDir = (currentDirAbsPath) => {\n    return fs__WEBPACK_IMPORTED_MODULE_0__.readdirSync(currentDirAbsPath).reduce((absPaths, itemName) => {\n      const itemAbsPath = path__WEBPACK_IMPORTED_MODULE_1__.join(currentDirAbsPath, itemName);\n\n      if (fs__WEBPACK_IMPORTED_MODULE_0__.statSync(itemAbsPath).isDirectory()) {\n        return absPaths.concat(deepReadCurrentDir(itemAbsPath));\n      }\n\n      absPaths.push(itemAbsPath);\n      return absPaths;\n    }, []);\n  };\n\n  return deepReadCurrentDir(targetDirAbsPath).map(absPath => path__WEBPACK_IMPORTED_MODULE_1__.relative(targetDirAbsPath, absPath));\n}\n\n\n//# sourceMappingURL=utils.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/node/esm/utils.js?')},"./node_modules/@sentry/tracing/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BROWSER_TRACING_INTEGRATION_ID: () => (/* binding */ BROWSER_TRACING_INTEGRATION_ID),\n/* harmony export */   BrowserTracing: () => (/* binding */ BrowserTracing),\n/* harmony export */   IdleTransaction: () => (/* binding */ IdleTransaction),\n/* harmony export */   Integrations: () => (/* binding */ Integrations),\n/* harmony export */   Span: () => (/* binding */ Span),\n/* harmony export */   SpanStatus: () => (/* binding */ SpanStatus),\n/* harmony export */   TRACEPARENT_REGEXP: () => (/* binding */ TRACEPARENT_REGEXP),\n/* harmony export */   Transaction: () => (/* binding */ Transaction),\n/* harmony export */   addExtensionMethods: () => (/* binding */ addExtensionMethods),\n/* harmony export */   defaultRequestInstrumentationOptions: () => (/* binding */ defaultRequestInstrumentationOptions),\n/* harmony export */   extractTraceparentData: () => (/* binding */ extractTraceparentData),\n/* harmony export */   getActiveTransaction: () => (/* binding */ getActiveTransaction),\n/* harmony export */   hasTracingEnabled: () => (/* binding */ hasTracingEnabled),\n/* harmony export */   instrumentOutgoingRequests: () => (/* binding */ instrumentOutgoingRequests),\n/* harmony export */   spanStatusfromHttpCode: () => (/* binding */ spanStatusfromHttpCode),\n/* harmony export */   startIdleTransaction: () => (/* binding */ startIdleTransaction),\n/* harmony export */   stripUrlQueryAndFragment: () => (/* binding */ stripUrlQueryAndFragment)\n/* harmony export */ });\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry-internal/tracing/esm/browser/browsertracing.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry-internal/tracing/esm/extensions.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry/core/esm/tracing/utils.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry/core/esm/tracing/span.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry/core/esm/tracing/transaction.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry-internal/tracing/esm/browser/request.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry/utils/esm/url.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry/utils/esm/tracing.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry/core/esm/tracing/idletransaction.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry/core/esm/tracing/hubextensions.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry/core/esm/tracing/spanstatus.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry-internal/tracing/esm/node/integrations/apollo.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry-internal/tracing/esm/node/integrations/express.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry-internal/tracing/esm/node/integrations/graphql.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry-internal/tracing/esm/node/integrations/mongo.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry-internal/tracing/esm/node/integrations/mysql.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry-internal/tracing/esm/node/integrations/postgres.js");\n/* harmony import */ var _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @sentry-internal/tracing */ "./node_modules/@sentry-internal/tracing/esm/node/integrations/prisma.js");\n\n\n// BrowserTracing is already exported as part of `Integrations` below (and for the moment will remain so for\n// backwards compatibility), but that interferes with treeshaking, so we also export it separately\n// here.\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n * `BrowserTracing` can be imported from `@sentry/browser` or your framework SDK\n *\n * import { BrowserTracing } from \'@sentry/browser\';\n * new BrowserTracing()\n */\nconst BrowserTracing = _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_0__.BrowserTracing;\n\n// BrowserTracing is already exported as part of `Integrations` below (and for the moment will remain so for\n// backwards compatibility), but that interferes with treeshaking, so we also export it separately\n// here.\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n * `BrowserTracing` can be imported from `@sentry/browser` or your framework SDK\n *\n * import { BrowserTracing } from \'@sentry/browser\';\n * new BrowserTracing()\n */\n\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n */\nconst addExtensionMethods = _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_1__.addExtensionMethods;\n\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n *\n * `getActiveTransaction` can be imported from `@sentry/node`, `@sentry/browser`, or your framework SDK\n */\nconst getActiveTransaction = _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_2__.getActiveTransaction;\n\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n *\n * `extractTraceparentData` can be imported from `@sentry/node`, `@sentry/browser`, or your framework SDK\n */\n// eslint-disable-next-line deprecation/deprecation\nconst extractTraceparentData = _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_2__.extractTraceparentData;\n\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n *\n * `spanStatusfromHttpCode` can be imported from `@sentry/node`, `@sentry/browser`, or your framework SDK\n */\nconst spanStatusfromHttpCode = _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_3__.spanStatusfromHttpCode;\n\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n *\n * `SpanStatusType` can be imported from `@sentry/node`, `@sentry/browser`, or your framework SDK\n */\n\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n *\n * `Transaction` can be imported from `@sentry/node`, `@sentry/browser`, or your framework SDK\n */\nconst Transaction = _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_4__.Transaction;\n\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n *\n * `Transaction` can be imported from `@sentry/node`, `@sentry/browser`, or your framework SDK\n */\n\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n *\n * `Span` can be imported from `@sentry/node`, `@sentry/browser`, or your framework SDK\n */\nconst Span = _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_3__.Span;\n\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n *\n * `Span` can be imported from `@sentry/node`, `@sentry/browser`, or your framework SDK\n */\n\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n */\nconst BROWSER_TRACING_INTEGRATION_ID = _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_0__.BROWSER_TRACING_INTEGRATION_ID;\n\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n *\n * `defaultRequestInstrumentationOptions` can be imported from `@sentry/browser`, or your framework SDK\n */\nconst defaultRequestInstrumentationOptions = _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_5__.defaultRequestInstrumentationOptions;\n\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n *\n * `hasTracingEnabled` can be imported from `@sentry/utils`\n */\nconst hasTracingEnabled = _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_6__.hasTracingEnabled;\n\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n *\n * `stripUrlQueryAndFragment` can be imported from `@sentry/utils`\n */\nconst stripUrlQueryAndFragment = _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_7__.stripUrlQueryAndFragment;\n\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n *\n * `TRACEPARENT_REGEXP` can be imported from `@sentry/utils`\n */\nconst TRACEPARENT_REGEXP = _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_8__.TRACEPARENT_REGEXP;\n\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n */\nconst IdleTransaction = _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_9__.IdleTransaction;\n\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n */\n\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n */\nconst instrumentOutgoingRequests = _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_5__.instrumentOutgoingRequests;\n\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n */\nconst startIdleTransaction = _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_10__.startIdleTransaction;\n\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst SpanStatus = _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_11__.SpanStatus;\n\n/**\n * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n */\n// eslint-disable-next-line deprecation/deprecation\n\nconst Integrations = {\n  /**\n   * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n   * `BrowserTracing` can be imported from `@sentry/browser` or your framework SDK\n   *\n   * import { BrowserTracing } from \'@sentry/browser\';\n   * new BrowserTracing()\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  BrowserTracing: BrowserTracing,\n  /**\n   * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n   * `Apollo` can be imported from `@sentry/node`\n   *\n   * import { Integrations } from \'@sentry/node\';\n   * new Integrations.Apollo({ ... })\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  Apollo: _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_12__.Apollo,\n  /**\n   * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n   * `Express` can be imported from `@sentry/node`\n   *\n   * import { Integrations } from \'@sentry/node\';\n   * new Integrations.Express({ ... })\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  Express: _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_13__.Express,\n  /**\n   * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n   * `GraphQL` can be imported from `@sentry/node`\n   *\n   * import { Integrations } from \'@sentry/node\';\n   * new Integrations.GraphQL({ ... })\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  GraphQL: _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_14__.GraphQL,\n  /**\n   * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n   * `Mongo` can be imported from `@sentry/node`\n   *\n   * import { Integrations } from \'@sentry/node\';\n   * new Integrations.Mongo({ ... })\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  Mongo: _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_15__.Mongo,\n  /**\n   * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n   * `Mysql` can be imported from `@sentry/node`\n   *\n   * import { Integrations } from \'@sentry/node\';\n   * new Integrations.Mysql({ ... })\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  Mysql: _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_16__.Mysql,\n  /**\n   * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n   * `Postgres` can be imported from `@sentry/node`\n   *\n   * import { Integrations } from \'@sentry/node\';\n   * new Integrations.Postgres({ ... })\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  Postgres: _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_17__.Postgres,\n  /**\n   * @deprecated `@sentry/tracing` has been deprecated and will be moved to to `@sentry/node`, `@sentry/browser`, or your framework SDK in the next major version.\n   * `Prisma` can be imported from `@sentry/node`\n   *\n   * import { Integrations } from \'@sentry/node\';\n   * new Integrations.Prisma({ ... })\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  Prisma: _sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_18__.Prisma,\n};\n\n// Treeshakable guard to remove all code related to tracing\n\n// Guard for tree\nif (typeof __SENTRY_TRACING__ === \'undefined\' || __SENTRY_TRACING__) {\n  // We are patching the global object with our hub extension methods\n  (0,_sentry_internal_tracing__WEBPACK_IMPORTED_MODULE_1__.addExtensionMethods)();\n}\n\n\n//# sourceMappingURL=index.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/tracing/esm/index.js?')},"./node_modules/@sentry/utils/esm/aggregate-errors.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyAggregateErrorsToEvent: () => (/* binding */ applyAggregateErrorsToEvent)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string.js */ \"./node_modules/@sentry/utils/esm/string.js\");\n\n\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nfunction applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation,\n  parser,\n  maxValueLimit = 250,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !(0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isInstanceOf)(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException ,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation,\n  parser,\n  limit,\n  error,\n  key,\n  prevExceptions,\n  exception,\n  exceptionId,\n) {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isInstanceOf)(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isInstanceOf)(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception, exceptionId) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    is_exception_group: true,\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception,\n  source,\n  exceptionId,\n  parentId,\n) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions, maxValueLength) {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.truncate)(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n\n\n//# sourceMappingURL=aggregate-errors.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/aggregate-errors.js?")},"./node_modules/@sentry/utils/esm/anr.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDebugPauseMessageHandler: () => (/* binding */ createDebugPauseMessageHandler),\n/* harmony export */   watchdogTimer: () => (/* binding */ watchdogTimer)\n/* harmony export */ });\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _stacktrace_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stacktrace.js */ \"./node_modules/@sentry/utils/esm/stacktrace.js\");\n/* harmony import */ var _node_stack_trace_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node-stack-trace.js */ \"./node_modules/@sentry/utils/esm/node-stack-trace.js\");\n\n\n\n\n/**\n * A node.js watchdog timer\n * @param pollInterval The interval that we expect to get polled at\n * @param anrThreshold The threshold for when we consider ANR\n * @param callback The callback to call for ANR\n * @returns An object with `poll` and `enabled` functions {@link WatchdogReturn}\n */\nfunction watchdogTimer(\n  createTimer,\n  pollInterval,\n  anrThreshold,\n  callback,\n) {\n  const timer = createTimer();\n  let triggered = false;\n  let enabled = true;\n\n  setInterval(() => {\n    const diffMs = timer.getTimeMs();\n\n    if (triggered === false && diffMs > pollInterval + anrThreshold) {\n      triggered = true;\n      if (enabled) {\n        callback();\n      }\n    }\n\n    if (diffMs < pollInterval + anrThreshold) {\n      triggered = false;\n    }\n  }, 20);\n\n  return {\n    poll: () => {\n      timer.reset();\n    },\n    enabled: (state) => {\n      enabled = state;\n    },\n  };\n}\n\n// types copied from inspector.d.ts\n\n/**\n * Converts Debugger.CallFrame to Sentry StackFrame\n */\nfunction callFrameToStackFrame(\n  frame,\n  url,\n  getModuleFromFilename,\n) {\n  const filename = url ? url.replace(/^file:\\/\\//, '') : undefined;\n\n  // CallFrame row/col are 0 based, whereas StackFrame are 1 based\n  const colno = frame.location.columnNumber ? frame.location.columnNumber + 1 : undefined;\n  const lineno = frame.location.lineNumber ? frame.location.lineNumber + 1 : undefined;\n\n  return (0,_object_js__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({\n    filename,\n    module: getModuleFromFilename(filename),\n    function: frame.functionName || '?',\n    colno,\n    lineno,\n    in_app: filename ? (0,_node_stack_trace_js__WEBPACK_IMPORTED_MODULE_1__.filenameIsInApp)(filename) : undefined,\n  });\n}\n\n// The only messages we care about\n\n/**\n * Creates a message handler from the v8 debugger protocol and passed stack frames to the callback when paused.\n */\nfunction createDebugPauseMessageHandler(\n  sendCommand,\n  getModuleFromFilename,\n  pausedStackFrames,\n) {\n  // Collect scriptId -> url map so we can look up the filenames later\n  const scripts = new Map();\n\n  return message => {\n    if (message.method === 'Debugger.scriptParsed') {\n      scripts.set(message.params.scriptId, message.params.url);\n    } else if (message.method === 'Debugger.paused') {\n      // copy the frames\n      const callFrames = [...message.params.callFrames];\n      // and resume immediately\n      sendCommand('Debugger.resume');\n      sendCommand('Debugger.disable');\n\n      const stackFrames = (0,_stacktrace_js__WEBPACK_IMPORTED_MODULE_2__.stripSentryFramesAndReverse)(\n        callFrames.map(frame =>\n          callFrameToStackFrame(frame, scripts.get(frame.location.scriptId), getModuleFromFilename),\n        ),\n      );\n\n      pausedStackFrames(stackFrames);\n    }\n  };\n}\n\n\n//# sourceMappingURL=anr.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/anr.js?")},"./node_modules/@sentry/utils/esm/baggage.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BAGGAGE_HEADER_NAME: () => (/* binding */ BAGGAGE_HEADER_NAME),\n/* harmony export */   MAX_BAGGAGE_STRING_LENGTH: () => (/* binding */ MAX_BAGGAGE_STRING_LENGTH),\n/* harmony export */   SENTRY_BAGGAGE_KEY_PREFIX: () => (/* binding */ SENTRY_BAGGAGE_KEY_PREFIX),\n/* harmony export */   SENTRY_BAGGAGE_KEY_PREFIX_REGEX: () => (/* binding */ SENTRY_BAGGAGE_KEY_PREFIX_REGEX),\n/* harmony export */   baggageHeaderToDynamicSamplingContext: () => (/* binding */ baggageHeaderToDynamicSamplingContext),\n/* harmony export */   dynamicSamplingContextToSentryBaggageHeader: () => (/* binding */ dynamicSamplingContextToSentryBaggageHeader)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger.js */ \"./node_modules/@sentry/utils/esm/logger.js\");\n\n\n\nconst BAGGAGE_HEADER_NAME = 'baggage';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nconst MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nfunction baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader,\n) {\n  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(baggageHeader) && !Array.isArray(baggageHeader)) {\n    return undefined;\n  }\n\n  // Intermediary object to store baggage key value pairs of incoming baggage headers on.\n  // It is later used to read Sentry-DSC-values from.\n  let baggageObject = {};\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    baggageObject = baggageHeader.reduce((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      return {\n        ...acc,\n        ...currBaggageObject,\n      };\n    }, {});\n  } else {\n    // Return undefined if baggage header is an empty string (technically an empty baggage header is not spec conform but\n    // this is how we choose to handle it)\n    if (!baggageHeader) {\n      return undefined;\n    }\n\n    baggageObject = baggageHeaderToObject(baggageHeader);\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext ;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nfunction dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext,\n) {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader) {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce((acc, [key, value]) => {\n      acc[key] = value;\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object) {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n\n\n//# sourceMappingURL=baggage.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/baggage.js?")},"./node_modules/@sentry/utils/esm/browser.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDomElement: () => (/* binding */ getDomElement),\n/* harmony export */   getLocationHref: () => (/* binding */ getLocationHref),\n/* harmony export */   htmlTreeAsString: () => (/* binding */ htmlTreeAsString)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = (0,_worldwide_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(\n  elem,\n  options = {},\n) {\n\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  const elem = el\n\n;\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && (0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isString)(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getDomElement(selector) {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) ;\n  }\n  return null;\n}\n\n\n//# sourceMappingURL=browser.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/browser.js?")},"./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _nullishCoalesce: () => (/* binding */ _nullishCoalesce)\n/* harmony export */ });\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nfunction _nullishCoalesce(lhs, rhsFn) {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n\n\n//# sourceMappingURL=_nullishCoalesce.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js?")},"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _optionalChain: () => (/* binding */ _optionalChain)\n/* harmony export */ });\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] ;\n    const fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\n\n//# sourceMappingURL=_optionalChain.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js?")},"./node_modules/@sentry/utils/esm/cookie.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseCookie: () => (/* binding */ parseCookie)\n/* harmony export */ });\n/**\n * This code was originally copied from the 'cookie` module at v0.5.0 and was simplified for our use case.\n * https://github.com/jshttp/cookie/blob/a0c84147aab6266bdb3996cf4062e93907c0b0fc/index.js\n * It had the following license:\n *\n * (The MIT License)\n *\n * Copyright (c) 2012-2014 Roman Shtylman <shtylman@gmail.com>\n * Copyright (c) 2015 Douglas Christopher Wilson <doug@somethingdoug.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Parses a cookie string\n */\nfunction parseCookie(str) {\n  const obj = {};\n  let index = 0;\n\n  while (index < str.length) {\n    const eqIdx = str.indexOf('=', index);\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break;\n    }\n\n    let endIdx = str.indexOf(';', index);\n\n    if (endIdx === -1) {\n      endIdx = str.length;\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1;\n      continue;\n    }\n\n    const key = str.slice(index, eqIdx).trim();\n\n    // only assign once\n    if (undefined === obj[key]) {\n      let val = str.slice(eqIdx + 1, endIdx).trim();\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1);\n      }\n\n      try {\n        obj[key] = val.indexOf('%') !== -1 ? decodeURIComponent(val) : val;\n      } catch (e) {\n        obj[key] = val;\n      }\n    }\n\n    index = endIdx + 1;\n  }\n\n  return obj;\n}\n\n\n//# sourceMappingURL=cookie.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/cookie.js?")},"./node_modules/@sentry/utils/esm/dsn.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dsnFromString: () => (/* binding */ dsnFromString),\n/* harmony export */   dsnToString: () => (/* binding */ dsnToString),\n/* harmony export */   makeDsn: () => (/* binding */ makeDsn)\n/* harmony export */ });\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger.js */ \"./node_modules/@sentry/utils/esm/logger.js\");\n\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    // eslint-disable-next-line no-console\n    console.error(`Invalid Sentry Dsn: ${str}`);\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!(typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n\n\n//# sourceMappingURL=dsn.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/dsn.js?")},"./node_modules/@sentry/utils/esm/env.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSDKSource: () => (/* binding */ getSDKSource),\n/* harmony export */   isBrowserBundle: () => (/* binding */ isBrowserBundle)\n/* harmony export */ });\n/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we\'re building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== \'undefined\' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // @ts-expect-error "npm" is injected by rollup during build process\n  return "npm";\n}\n\n\n//# sourceMappingURL=env.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/env.js?')},"./node_modules/@sentry/utils/esm/envelope.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addItemToEnvelope: () => (/* binding */ addItemToEnvelope),\n/* harmony export */   createAttachmentEnvelopeItem: () => (/* binding */ createAttachmentEnvelopeItem),\n/* harmony export */   createEnvelope: () => (/* binding */ createEnvelope),\n/* harmony export */   createEventEnvelopeHeaders: () => (/* binding */ createEventEnvelopeHeaders),\n/* harmony export */   envelopeContainsItemType: () => (/* binding */ envelopeContainsItemType),\n/* harmony export */   envelopeItemTypeToDataCategory: () => (/* binding */ envelopeItemTypeToDataCategory),\n/* harmony export */   forEachEnvelopeItem: () => (/* binding */ forEachEnvelopeItem),\n/* harmony export */   getSdkMetadataForEnvelopeHeader: () => (/* binding */ getSdkMetadataForEnvelopeHeader),\n/* harmony export */   parseEnvelope: () => (/* binding */ parseEnvelope),\n/* harmony export */   serializeEnvelope: () => (/* binding */ serializeEnvelope)\n/* harmony export */ });\n/* harmony import */ var _dsn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dsn.js */ \"./node_modules/@sentry/utils/esm/dsn.js\");\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./normalize.js */ \"./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n\n\n\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input, textEncoder) {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify((0,_normalize_js__WEBPACK_IMPORTED_MODULE_0__.normalize)(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(\n  env,\n  textEncoder,\n  textDecoder,\n) {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_1__.dropUndefinedKeys)({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  // TODO: This is a temporary workaround until we have a proper data category for metrics\n  statsd: 'unknown',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: (0,_dsn_js__WEBPACK_IMPORTED_MODULE_2__.dsnToString)(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: (0,_object_js__WEBPACK_IMPORTED_MODULE_1__.dropUndefinedKeys)({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n\n\n//# sourceMappingURL=envelope.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/envelope.js?")},"./node_modules/@sentry/utils/esm/error.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SentryError: () => (/* binding */ SentryError)\n/* harmony export */ });\n/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n\n   constructor( message, logLevel = 'warn') {\n    super(message);this.message = message;\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n\n\n//# sourceMappingURL=error.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/error.js?")},"./node_modules/@sentry/utils/esm/eventbuilder.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   eventFromMessage: () => (/* binding */ eventFromMessage),\n/* harmony export */   eventFromUnknownInput: () => (/* binding */ eventFromUnknownInput),\n/* harmony export */   exceptionFromError: () => (/* binding */ exceptionFromError),\n/* harmony export */   parseStackFrames: () => (/* binding */ parseStackFrames)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./misc.js */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./normalize.js */ \"./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n\n\n\n\n\n/**\n * Extracts stack frames from the error.stack string\n */\nfunction parseStackFrames(stackParser, error) {\n  return stackParser(error.stack || '', 1);\n}\n\n/**\n * Extracts stack frames from the error and builds a Sentry Exception\n */\nfunction exceptionFromError(stackParser, error) {\n  const exception = {\n    type: error.name || error.constructor.name,\n    value: error.message,\n  };\n\n  const frames = parseStackFrames(stackParser, error);\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  return exception;\n}\n\nfunction getMessageForObject(exception) {\n  if ('name' in exception && typeof exception.name === 'string') {\n    let message = `'${exception.name}' captured as exception`;\n\n    if ('message' in exception && typeof exception.message === 'string') {\n      message += ` with message '${exception.message}'`;\n    }\n\n    return message;\n  } else if ('message' in exception && typeof exception.message === 'string') {\n    return exception.message;\n  } else {\n    // This will allow us to group events based on top-level keys\n    // which is much better than creating new group when any key/value change\n    return `Object captured as exception with keys: ${(0,_object_js__WEBPACK_IMPORTED_MODULE_0__.extractExceptionKeysForMessage)(\n      exception ,\n    )}`;\n  }\n}\n\n/**\n * Builds and Event from a Exception\n * @hidden\n */\nfunction eventFromUnknownInput(\n  getCurrentHub,\n  stackParser,\n  exception,\n  hint,\n) {\n  let ex = exception;\n  const providedMechanism =\n    hint && hint.data && (hint.data ).mechanism;\n  const mechanism = providedMechanism || {\n    handled: true,\n    type: 'generic',\n  };\n\n  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isError)(exception)) {\n    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(exception)) {\n      const hub = getCurrentHub();\n      const client = hub.getClient();\n      const normalizeDepth = client && client.getOptions().normalizeDepth;\n      hub.configureScope(scope => {\n        scope.setExtra('__serialized__', (0,_normalize_js__WEBPACK_IMPORTED_MODULE_2__.normalizeToSize)(exception, normalizeDepth));\n      });\n\n      const message = getMessageForObject(exception);\n      ex = (hint && hint.syntheticException) || new Error(message);\n      (ex ).message = message;\n    } else {\n      // This handles when someone does: `throw \"something awesome\";`\n      // We use synthesized Error here so we can extract a (rough) stack trace.\n      ex = (hint && hint.syntheticException) || new Error(exception );\n      (ex ).message = exception ;\n    }\n    mechanism.synthetic = true;\n  }\n\n  const event = {\n    exception: {\n      values: [exceptionFromError(stackParser, ex )],\n    },\n  };\n\n  (0,_misc_js__WEBPACK_IMPORTED_MODULE_3__.addExceptionTypeValue)(event, undefined, undefined);\n  (0,_misc_js__WEBPACK_IMPORTED_MODULE_3__.addExceptionMechanism)(event, mechanism);\n\n  return {\n    ...event,\n    event_id: hint && hint.event_id,\n  };\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const event = {\n    event_id: hint && hint.event_id,\n    level,\n    message,\n  };\n\n  if (attachStacktrace && hint && hint.syntheticException) {\n    const frames = parseStackFrames(stackParser, hint.syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [\n          {\n            value: message,\n            stacktrace: { frames },\n          },\n        ],\n      };\n    }\n  }\n\n  return event;\n}\n\n\n//# sourceMappingURL=eventbuilder.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/eventbuilder.js?")},"./node_modules/@sentry/utils/esm/instrument/_handlers.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addHandler: () => (/* binding */ addHandler),\n/* harmony export */   maybeInstrument: () => (/* binding */ maybeInstrument),\n/* harmony export */   resetInstrumentationHandlers: () => (/* binding */ resetInstrumentationHandlers),\n/* harmony export */   triggerHandlers: () => (/* binding */ triggerHandlers)\n/* harmony export */ });\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../logger.js */ "./node_modules/@sentry/utils/esm/logger.js");\n/* harmony import */ var _stacktrace_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stacktrace.js */ "./node_modules/@sentry/utils/esm/stacktrace.js");\n\n\n\n// We keep the handlers globally\nconst handlers = {};\nconst instrumented = {};\n\n/** Add a handler function. */\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nfunction resetInstrumentationHandlers() {\n  Object.keys(handlers).forEach(key => {\n    handlers[key ] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nfunction maybeInstrument(type, instrumentFn) {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === \'undefined\' || __SENTRY_DEBUG__) &&\n        _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${(0,_stacktrace_js__WEBPACK_IMPORTED_MODULE_1__.getFunctionName)(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n\n//# sourceMappingURL=_handlers.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/instrument/_handlers.js?')},"./node_modules/@sentry/utils/esm/instrument/console.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addConsoleInstrumentationHandler: () => (/* binding */ addConsoleInstrumentationHandler)\n/* harmony export */ });\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logger.js */ "./node_modules/@sentry/utils/esm/logger.js");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../object.js */ "./node_modules/@sentry/utils/esm/object.js");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../worldwide.js */ "./node_modules/@sentry/utils/esm/worldwide.js");\n/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_handlers.js */ "./node_modules/@sentry/utils/esm/instrument/_handlers.js");\n\n\n\n\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addConsoleInstrumentationHandler(handler) {\n  const type = \'console\';\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.addHandler)(type, handler);\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.maybeInstrument)(type, instrumentConsole);\n}\n\nfunction instrumentConsole() {\n  if (!("console" in _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ)) {\n    return;\n  }\n\n  _logger_js__WEBPACK_IMPORTED_MODULE_2__.CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(_worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.console, level, function (originalConsoleMethod) {\n      _logger_js__WEBPACK_IMPORTED_MODULE_2__.originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args) {\n        const handlerData = { args, level };\n        (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)(\'console\', handlerData);\n\n        const log = _logger_js__WEBPACK_IMPORTED_MODULE_2__.originalConsoleMethods[level];\n        log && log.apply(_worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n\n\n//# sourceMappingURL=console.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/instrument/console.js?')},"./node_modules/@sentry/utils/esm/instrument/fetch.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addFetchInstrumentationHandler: () => (/* binding */ addFetchInstrumentationHandler),\n/* harmony export */   parseFetchArgs: () => (/* binding */ parseFetchArgs)\n/* harmony export */ });\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _supports_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../supports.js */ \"./node_modules/@sentry/utils/esm/supports.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_handlers.js */ \"./node_modules/@sentry/utils/esm/instrument/_handlers.js\");\n\n\n\n\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addFetchInstrumentationHandler(handler) {\n  const type = 'fetch';\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.addHandler)(type, handler);\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.maybeInstrument)(type, instrumentFetch);\n}\n\nfunction instrumentFetch() {\n  if (!(0,_supports_js__WEBPACK_IMPORTED_MODULE_1__.supportsNativeFetch)()) {\n    return;\n  }\n\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.fill)(_worldwide_js__WEBPACK_IMPORTED_MODULE_3__.GLOBAL_OBJ, 'fetch', function (originalFetch) {\n    return function (...args) {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(_worldwide_js__WEBPACK_IMPORTED_MODULE_3__.GLOBAL_OBJ, args).then(\n        (response) => {\n          const finishedHandlerData = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          };\n\n          (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('fetch', finishedHandlerData);\n          return response;\n        },\n        (error) => {\n          const erroredHandlerData = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          };\n\n          (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('fetch', erroredHandlerData);\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp(obj, prop) {\n  return !!obj && typeof obj === 'object' && !!(obj )[prop];\n}\n\nfunction getUrlFromResource(resource) {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nfunction parseFetchArgs(fetchArgs) {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs ;\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg ),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\n\n//# sourceMappingURL=fetch.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/instrument/fetch.js?")},"./node_modules/@sentry/utils/esm/instrument/globalError.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addGlobalErrorInstrumentationHandler: () => (/* binding */ addGlobalErrorInstrumentationHandler)\n/* harmony export */ });\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_handlers.js */ \"./node_modules/@sentry/utils/esm/instrument/_handlers.js\");\n\n\n\nlet _oldOnErrorHandler = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalErrorInstrumentationHandler(handler) {\n  const type = 'error';\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.addHandler)(type, handler);\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.maybeInstrument)(type, instrumentError);\n}\n\nfunction instrumentError() {\n  _oldOnErrorHandler = _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onerror;\n\n  _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onerror = function (\n    msg,\n    url,\n    line,\n    column,\n    error,\n  ) {\n    const handlerData = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('error', handlerData);\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\n\n//# sourceMappingURL=globalError.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/instrument/globalError.js?")},"./node_modules/@sentry/utils/esm/instrument/globalUnhandledRejection.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addGlobalUnhandledRejectionInstrumentationHandler: () => (/* binding */ addGlobalUnhandledRejectionInstrumentationHandler)\n/* harmony export */ });\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_handlers.js */ \"./node_modules/@sentry/utils/esm/instrument/_handlers.js\");\n\n\n\nlet _oldOnUnhandledRejectionHandler = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalUnhandledRejectionInstrumentationHandler(\n  handler,\n) {\n  const type = 'unhandledrejection';\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.addHandler)(type, handler);\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.maybeInstrument)(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onunhandledrejection;\n\n  _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onunhandledrejection = function (e) {\n    const handlerData = e;\n    (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n\n\n//# sourceMappingURL=globalUnhandledRejection.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/instrument/globalUnhandledRejection.js?")},"./node_modules/@sentry/utils/esm/instrument/history.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addHistoryInstrumentationHandler: () => (/* binding */ addHistoryInstrumentationHandler)\n/* harmony export */ });\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _vendor_supportsHistory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vendor/supportsHistory.js */ \"./node_modules/@sentry/utils/esm/vendor/supportsHistory.js\");\n/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_handlers.js */ \"./node_modules/@sentry/utils/esm/instrument/_handlers.js\");\n\n\n\n\n\n\nconst WINDOW = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n\nlet lastHref;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addHistoryInstrumentationHandler(handler) {\n  const type = 'history';\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.addHandler)(type, handler);\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.maybeInstrument)(type, instrumentHistory);\n}\n\nfunction instrumentHistory() {\n  if (!(0,_vendor_supportsHistory_js__WEBPACK_IMPORTED_MODULE_2__.supportsHistory)()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function ( ...args) {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    const handlerData = { from, to };\n    (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.triggerHandlers)('history', handlerData);\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        const handlerData = { from, to };\n        (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.triggerHandlers)('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(WINDOW.history, 'pushState', historyReplacementFunction);\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\n\n//# sourceMappingURL=history.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/instrument/history.js?")},"./node_modules/@sentry/utils/esm/instrument/xhr.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SENTRY_XHR_DATA_KEY: () => (/* binding */ SENTRY_XHR_DATA_KEY),\n/* harmony export */   addXhrInstrumentationHandler: () => (/* binding */ addXhrInstrumentationHandler),\n/* harmony export */   instrumentXHR: () => (/* binding */ instrumentXHR)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_handlers.js */ \"./node_modules/@sentry/utils/esm/instrument/_handlers.js\");\n\n\n\n\n\nconst WINDOW = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n\nconst SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addXhrInstrumentationHandler(handler) {\n  const type = 'xhr';\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.addHandler)(type, handler);\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.maybeInstrument)(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nfunction instrumentXHR() {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (!(WINDOW ).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.fill)(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n      const startTimestamp = Date.now();\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = (0,_is_js__WEBPACK_IMPORTED_MODULE_3__.isString)(args[0]) ? args[0].toUpperCase() : undefined;\n      const url = parseUrl(args[1]);\n\n      if (!method || !url) {\n        return;\n      }\n\n      this[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          const handlerData = {\n            args: [method, url],\n            endTimestamp: Date.now(),\n            startTimestamp,\n            xhr: this,\n          };\n          (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.triggerHandlers)('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.fill)(this, 'onreadystatechange', function (original) {\n          return function ( ...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.fill)(this, 'setRequestHeader', function (original) {\n        return function ( ...setRequestHeaderArgs) {\n          const [header, value] = setRequestHeaderArgs;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && (0,_is_js__WEBPACK_IMPORTED_MODULE_3__.isString)(header) && (0,_is_js__WEBPACK_IMPORTED_MODULE_3__.isString)(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.fill)(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return;\n      }\n\n      if (args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      const handlerData = {\n        args: [sentryXhrData.method, sentryXhrData.url],\n        startTimestamp: Date.now(),\n        xhr: this,\n      };\n      (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.triggerHandlers)('xhr', handlerData);\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nfunction parseUrl(url) {\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_3__.isString)(url)) {\n    return url;\n  }\n\n  try {\n    // url can be a string or URL\n    // but since URL is not available in IE11, we do not check for it,\n    // but simply assume it is an URL and return `toString()` from it (which returns the full URL)\n    // If that fails, we just return undefined\n    return (url ).toString();\n  } catch (e2) {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n\n\n//# sourceMappingURL=xhr.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/instrument/xhr.js?")},"./node_modules/@sentry/utils/esm/is.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDOMError: () => (/* binding */ isDOMError),\n/* harmony export */   isDOMException: () => (/* binding */ isDOMException),\n/* harmony export */   isElement: () => (/* binding */ isElement),\n/* harmony export */   isError: () => (/* binding */ isError),\n/* harmony export */   isErrorEvent: () => (/* binding */ isErrorEvent),\n/* harmony export */   isEvent: () => (/* binding */ isEvent),\n/* harmony export */   isInstanceOf: () => (/* binding */ isInstanceOf),\n/* harmony export */   isNaN: () => (/* binding */ isNaN),\n/* harmony export */   isPlainObject: () => (/* binding */ isPlainObject),\n/* harmony export */   isPrimitive: () => (/* binding */ isPrimitive),\n/* harmony export */   isRegExp: () => (/* binding */ isRegExp),\n/* harmony export */   isString: () => (/* binding */ isString),\n/* harmony export */   isSyntheticEvent: () => (/* binding */ isSyntheticEvent),\n/* harmony export */   isThenable: () => (/* binding */ isThenable),\n/* harmony export */   isVueViewModel: () => (/* binding */ isVueViewModel)\n/* harmony export */ });\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isVueViewModel(wat) {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat ).__isVue || (wat )._isVue));\n}\n\n\n//# sourceMappingURL=is.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/is.js?")},"./node_modules/@sentry/utils/esm/logger.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CONSOLE_LEVELS: () => (/* binding */ CONSOLE_LEVELS),\n/* harmony export */   consoleSandbox: () => (/* binding */ consoleSandbox),\n/* harmony export */   logger: () => (/* binding */ logger),\n/* harmony export */   originalConsoleMethods: () => (/* binding */ originalConsoleMethods)\n/* harmony export */ });\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] ;\n\n/** This may be mutated by the console instrumentation. */\nconst originalConsoleMethods\n\n = {};\n\n/** JSDoc */\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!(\"console\" in _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.console ;\n  const wrappedFuncs = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) ;\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] ;\n    wrappedFuncs[level] = console[level] ;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] ;\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\nconst logger = makeLogger();\n\n\n//# sourceMappingURL=logger.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/logger.js?")},"./node_modules/@sentry/utils/esm/lru.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LRUMap: () => (/* binding */ LRUMap)\n/* harmony export */ });\n/** A simple Least Recently Used map */\nclass LRUMap {\n\n   constructor(  _maxSize) {this._maxSize = _maxSize;\n    this._cache = new Map();\n  }\n\n  /** Get the current size of the cache */\n   get size() {\n    return this._cache.size;\n  }\n\n  /** Get an entry or undefined if it was not in the cache. Re-inserts to update the recently used order */\n   get(key) {\n    const value = this._cache.get(key);\n    if (value === undefined) {\n      return undefined;\n    }\n    // Remove and re-insert to update the order\n    this._cache.delete(key);\n    this._cache.set(key, value);\n    return value;\n  }\n\n  /** Insert an entry and evict an older entry if we've reached maxSize */\n   set(key, value) {\n    if (this._cache.size >= this._maxSize) {\n      // keys() returns an iterator in insertion order so keys().next() gives us the oldest key\n      this._cache.delete(this._cache.keys().next().value);\n    }\n    this._cache.set(key, value);\n  }\n\n  /** Remove an entry and return the entry if it was in the cache */\n   remove(key) {\n    const value = this._cache.get(key);\n    if (value) {\n      this._cache.delete(key);\n    }\n    return value;\n  }\n\n  /** Clear all entries */\n   clear() {\n    this._cache.clear();\n  }\n\n  /** Get all the keys */\n   keys() {\n    return Array.from(this._cache.keys());\n  }\n\n  /** Get all the values */\n   values() {\n    const values = [];\n    this._cache.forEach(value => values.push(value));\n    return values;\n  }\n}\n\n\n//# sourceMappingURL=lru.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/lru.js?")},"./node_modules/@sentry/utils/esm/memo.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   memoBuilder: () => (/* binding */ memoBuilder)\n/* harmony export */ });\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\n\n//# sourceMappingURL=memo.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/memo.js?")},"./node_modules/@sentry/utils/esm/misc.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addContextToFrame: () => (/* binding */ addContextToFrame),\n/* harmony export */   addExceptionMechanism: () => (/* binding */ addExceptionMechanism),\n/* harmony export */   addExceptionTypeValue: () => (/* binding */ addExceptionTypeValue),\n/* harmony export */   arrayify: () => (/* binding */ arrayify),\n/* harmony export */   checkOrSetAlreadyCaught: () => (/* binding */ checkOrSetAlreadyCaught),\n/* harmony export */   getEventDescription: () => (/* binding */ getEventDescription),\n/* harmony export */   parseSemver: () => (/* binding */ parseSemver),\n/* harmony export */   uuid4: () => (/* binding */ uuid4)\n/* harmony export */ });\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string.js */ \"./node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = () => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => crypto.getRandomValues(new Uint8Array(1))[0];\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.snipLine)(line, 0));\n\n  frame.context_line = (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.snipLine)(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.snipLine)(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.addNonEnumerableProperty)(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\n\n//# sourceMappingURL=misc.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/misc.js?")},"./node_modules/@sentry/utils/esm/node-stack-trace.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   filenameIsInApp: () => (/* binding */ filenameIsInApp),\n/* harmony export */   node: () => (/* binding */ node)\n/* harmony export */ });\n/**\n * Does this filename look like it's part of the app code?\n */\nfunction filenameIsInApp(filename, isNative = false) {\n  const isInternal =\n    isNative ||\n    (filename &&\n      // It's not internal if it's an absolute linux path\n      !filename.startsWith('/') &&\n      // It's not internal if it's an absolute windows path\n      !filename.includes(':\\\\') &&\n      // It's not internal if the path is starting with a dot\n      !filename.startsWith('.') &&\n      // It's not internal if the frame has a protocol. In node, this is usually the case if the file got pre-processed with a bundler like webpack\n      !filename.match(/^[a-zA-Z]([a-zA-Z0-9.\\-+])*:\\/\\//)); // Schema from: https://stackoverflow.com/a/3641782\n\n  // in_app is all that's not an internal Node function or a module within node_modules\n  // note that isNative appears to return true even for node core libraries\n  // see https://github.com/getsentry/raven-node/issues/176\n\n  return !isInternal && filename !== undefined && !filename.includes('node_modules/');\n}\n\n/** Node Stack line parser */\n// eslint-disable-next-line complexity\nfunction node(getModule) {\n  const FILENAME_MATCH = /^\\s*[-]{4,}$/;\n  const FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+):(\\d+):(\\d+)?|([^)]+))\\)?/;\n\n  // eslint-disable-next-line complexity\n  return (line) => {\n    const lineMatch = line.match(FULL_MATCH);\n\n    if (lineMatch) {\n      let object;\n      let method;\n      let functionName;\n      let typeName;\n      let methodName;\n\n      if (lineMatch[1]) {\n        functionName = lineMatch[1];\n\n        let methodStart = functionName.lastIndexOf('.');\n        if (functionName[methodStart - 1] === '.') {\n          methodStart--;\n        }\n\n        if (methodStart > 0) {\n          object = functionName.slice(0, methodStart);\n          method = functionName.slice(methodStart + 1);\n          const objectEnd = object.indexOf('.Module');\n          if (objectEnd > 0) {\n            functionName = functionName.slice(objectEnd + 1);\n            object = object.slice(0, objectEnd);\n          }\n        }\n        typeName = undefined;\n      }\n\n      if (method) {\n        typeName = object;\n        methodName = method;\n      }\n\n      if (method === '<anonymous>') {\n        methodName = undefined;\n        functionName = undefined;\n      }\n\n      if (functionName === undefined) {\n        methodName = methodName || '<anonymous>';\n        functionName = typeName ? `${typeName}.${methodName}` : methodName;\n      }\n\n      let filename = lineMatch[2] && lineMatch[2].startsWith('file://') ? lineMatch[2].slice(7) : lineMatch[2];\n      const isNative = lineMatch[5] === 'native';\n\n      if (!filename && lineMatch[5] && !isNative) {\n        filename = lineMatch[5];\n      }\n\n      return {\n        filename,\n        module: getModule ? getModule(filename) : undefined,\n        function: functionName,\n        lineno: parseInt(lineMatch[3], 10) || undefined,\n        colno: parseInt(lineMatch[4], 10) || undefined,\n        in_app: filenameIsInApp(filename, isNative),\n      };\n    }\n\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n      };\n    }\n\n    return undefined;\n  };\n}\n\n\n//# sourceMappingURL=node-stack-trace.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/node-stack-trace.js?")},"./node_modules/@sentry/utils/esm/node.js":(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dynamicRequire: () => (/* binding */ dynamicRequire),\n/* harmony export */   isNodeEnv: () => (/* binding */ isNodeEnv),\n/* harmony export */   loadModule: () => (/* binding */ loadModule)\n/* harmony export */ });\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./env.js */ \"./node_modules/@sentry/utils/esm/env.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !(0,_env_js__WEBPACK_IMPORTED_MODULE_0__.isBrowserBundle)() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\n\n//# sourceMappingURL=node.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/node.js?")},"./node_modules/@sentry/utils/esm/normalize.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalize: () => (/* binding */ normalize),\n/* harmony export */   normalizeToSize: () => (/* binding */ normalizeToSize),\n/* harmony export */   walk: () => (/* binding */ visit)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _memo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./memo.js */ \"./node_modules/@sentry/utils/esm/memo.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _stacktrace_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stacktrace.js */ \"./node_modules/@sentry/utils/esm/stacktrace.js\");\n\n\n\n\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction normalize(input, depth = 100, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = (0,_memo_js__WEBPACK_IMPORTED_MODULE_0__.memoBuilder)(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !(0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isNaN)(value))\n  ) {\n    return value ;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value )['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value )['__sentry_override_normalization_depth__'] )\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.convertToPlainObject)(value );\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isVueViewModel)(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isSyntheticEvent)(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${(0,_stacktrace_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value) {\n  const prototype = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\n\n//# sourceMappingURL=normalize.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/normalize.js?")},"./node_modules/@sentry/utils/esm/object.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addNonEnumerableProperty: () => (/* binding */ addNonEnumerableProperty),\n/* harmony export */   convertToPlainObject: () => (/* binding */ convertToPlainObject),\n/* harmony export */   dropUndefinedKeys: () => (/* binding */ dropUndefinedKeys),\n/* harmony export */   extractExceptionKeysForMessage: () => (/* binding */ extractExceptionKeysForMessage),\n/* harmony export */   fill: () => (/* binding */ fill),\n/* harmony export */   getOriginalFunction: () => (/* binding */ getOriginalFunction),\n/* harmony export */   markFunctionWrapped: () => (/* binding */ markFunctionWrapped),\n/* harmony export */   objectify: () => (/* binding */ objectify),\n/* harmony export */   urlEncode: () => (/* binding */ urlEncode)\n/* harmony export */ });\n/* harmony import */ var _browser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./browser.js */ \"./node_modules/@sentry/utils/esm/browser.js\");\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger.js */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./string.js */ \"./node_modules/@sentry/utils/esm/string.js\");\n\n\n\n\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(value)\n\n {\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isError)(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isEvent)(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && (0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isInstanceOf)(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return (0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isElement)(target) ? (0,_browser_js__WEBPACK_IMPORTED_MODULE_2__.htmlTreeAsString)(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return (0,_string_js__WEBPACK_IMPORTED_MODULE_3__.truncate)(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return (0,_string_js__WEBPACK_IMPORTED_MODULE_3__.truncate)(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case (0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isPrimitive)(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\n\n//# sourceMappingURL=object.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/object.js?")},"./node_modules/@sentry/utils/esm/promisebuffer.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makePromiseBuffer: () => (/* binding */ makePromiseBuffer)\n/* harmony export */ });\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error.js */ \"./node_modules/@sentry/utils/esm/error.js\");\n/* harmony import */ var _syncpromise_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./syncpromise.js */ \"./node_modules/@sentry/utils/esm/syncpromise.js\");\n\n\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return (0,_syncpromise_js__WEBPACK_IMPORTED_MODULE_0__.rejectedSyncPromise)(new _error_js__WEBPACK_IMPORTED_MODULE_1__.SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new _syncpromise_js__WEBPACK_IMPORTED_MODULE_0__.SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void (0,_syncpromise_js__WEBPACK_IMPORTED_MODULE_0__.resolvedSyncPromise)(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\n\n//# sourceMappingURL=promisebuffer.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/promisebuffer.js?")},"./node_modules/@sentry/utils/esm/ratelimit.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_RETRY_AFTER: () => (/* binding */ DEFAULT_RETRY_AFTER),\n/* harmony export */   disabledUntil: () => (/* binding */ disabledUntil),\n/* harmony export */   isRateLimited: () => (/* binding */ isRateLimited),\n/* harmony export */   parseRetryAfterHeader: () => (/* binding */ parseRetryAfterHeader),\n/* harmony export */   updateRateLimits: () => (/* binding */ updateRateLimits)\n/* harmony export */ });\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nfunction disabledUntil(limits, category) {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, category, now = Date.now()) {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories] = limit.split(':', 2);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\n\n//# sourceMappingURL=ratelimit.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/ratelimit.js?")},"./node_modules/@sentry/utils/esm/requestdata.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_USER_INCLUDES: () => (/* binding */ DEFAULT_USER_INCLUDES),\n/* harmony export */   addRequestDataToEvent: () => (/* binding */ addRequestDataToEvent),\n/* harmony export */   addRequestDataToTransaction: () => (/* binding */ addRequestDataToTransaction),\n/* harmony export */   extractPathForTransaction: () => (/* binding */ extractPathForTransaction),\n/* harmony export */   extractRequestData: () => (/* binding */ extractRequestData),\n/* harmony export */   winterCGHeadersToDict: () => (/* binding */ winterCGHeadersToDict),\n/* harmony export */   winterCGRequestToRequestData: () => (/* binding */ winterCGRequestToRequestData)\n/* harmony export */ });\n/* harmony import */ var _cookie_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cookie.js */ \"./node_modules/@sentry/utils/esm/cookie.js\");\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./logger.js */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./normalize.js */ \"./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./url.js */ \"./node_modules/@sentry/utils/esm/url.js\");\n\n\n\n\n\n\nconst DEFAULT_INCLUDES = {\n  ip: false,\n  request: true,\n  transaction: true,\n  user: true,\n};\nconst DEFAULT_REQUEST_INCLUDES = ['cookies', 'data', 'headers', 'method', 'query_string', 'url'];\nconst DEFAULT_USER_INCLUDES = ['id', 'username', 'email'];\n\n/**\n * Sets parameterized route as transaction name e.g.: `GET /users/:id`\n * Also adds more context data on the transaction from the request\n */\nfunction addRequestDataToTransaction(\n  transaction,\n  req,\n  deps,\n) {\n  if (!transaction) return;\n  if (!transaction.metadata.source || transaction.metadata.source === 'url') {\n    // Attempt to grab a parameterized route off of the request\n    transaction.setName(...extractPathForTransaction(req, { path: true, method: true }));\n  }\n  transaction.setData('url', req.originalUrl || req.url);\n  if (req.baseUrl) {\n    transaction.setData('baseUrl', req.baseUrl);\n  }\n  transaction.setData('query', extractQueryParams(req, deps));\n}\n\n/**\n * Extracts a complete and parameterized path from the request object and uses it to construct transaction name.\n * If the parameterized transaction name cannot be extracted, we fall back to the raw URL.\n *\n * Additionally, this function determines and returns the transaction name source\n *\n * eg. GET /mountpoint/user/:id\n *\n * @param req A request object\n * @param options What to include in the transaction name (method, path, or a custom route name to be\n *                used instead of the request's route)\n *\n * @returns A tuple of the fully constructed transaction name [0] and its source [1] (can be either 'route' or 'url')\n */\nfunction extractPathForTransaction(\n  req,\n  options = {},\n) {\n  const method = req.method && req.method.toUpperCase();\n\n  let path = '';\n  let source = 'url';\n\n  // Check to see if there's a parameterized route we can use (as there is in Express)\n  if (options.customRoute || req.route) {\n    path = options.customRoute || `${req.baseUrl || ''}${req.route && req.route.path}`;\n    source = 'route';\n  }\n\n  // Otherwise, just take the original URL\n  else if (req.originalUrl || req.url) {\n    path = (0,_url_js__WEBPACK_IMPORTED_MODULE_0__.stripUrlQueryAndFragment)(req.originalUrl || req.url || '');\n  }\n\n  let name = '';\n  if (options.method && method) {\n    name += method;\n  }\n  if (options.method && options.path) {\n    name += ' ';\n  }\n  if (options.path && path) {\n    name += path;\n  }\n\n  return [name, source];\n}\n\n/** JSDoc */\nfunction extractTransaction(req, type) {\n  switch (type) {\n    case 'path': {\n      return extractPathForTransaction(req, { path: true })[0];\n    }\n    case 'handler': {\n      return (req.route && req.route.stack && req.route.stack[0] && req.route.stack[0].name) || '<anonymous>';\n    }\n    case 'methodPath':\n    default: {\n      // if exist _reconstructedRoute return that path instead of route.path\n      const customRoute = req._reconstructedRoute ? req._reconstructedRoute : undefined;\n      return extractPathForTransaction(req, { path: true, method: true, customRoute })[0];\n    }\n  }\n}\n\n/** JSDoc */\nfunction extractUserData(\n  user\n\n,\n  keys,\n) {\n  const extractedUser = {};\n  const attributes = Array.isArray(keys) ? keys : DEFAULT_USER_INCLUDES;\n\n  attributes.forEach(key => {\n    if (user && key in user) {\n      extractedUser[key] = user[key];\n    }\n  });\n\n  return extractedUser;\n}\n\n/**\n * Normalize data from the request object, accounting for framework differences.\n *\n * @param req The request object from which to extract data\n * @param options.include An optional array of keys to include in the normalized data. Defaults to\n * DEFAULT_REQUEST_INCLUDES if not provided.\n * @param options.deps Injected, platform-specific dependencies\n * @returns An object containing normalized request data\n */\nfunction extractRequestData(\n  req,\n  options\n\n,\n) {\n  const { include = DEFAULT_REQUEST_INCLUDES, deps } = options || {};\n  const requestData = {};\n\n  // headers:\n  //   node, express, koa, nextjs: req.headers\n  const headers = (req.headers || {})\n\n;\n  // method:\n  //   node, express, koa, nextjs: req.method\n  const method = req.method;\n  // host:\n  //   express: req.hostname in > 4 and req.host in < 4\n  //   koa: req.host\n  //   node, nextjs: req.headers.host\n  const host = req.hostname || req.host || headers.host || '<no host>';\n  // protocol:\n  //   node, nextjs: <n/a>\n  //   express, koa: req.protocol\n  const protocol = req.protocol === 'https' || (req.socket && req.socket.encrypted) ? 'https' : 'http';\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  const originalUrl = req.originalUrl || req.url || '';\n  // absolute url\n  const absoluteUrl = originalUrl.startsWith(protocol) ? originalUrl : `${protocol}://${host}${originalUrl}`;\n  include.forEach(key => {\n    switch (key) {\n      case 'headers': {\n        requestData.headers = headers;\n\n        // Remove the Cookie header in case cookie data should not be included in the event\n        if (!include.includes('cookies')) {\n          delete (requestData.headers ).cookie;\n        }\n\n        break;\n      }\n      case 'method': {\n        requestData.method = method;\n        break;\n      }\n      case 'url': {\n        requestData.url = absoluteUrl;\n        break;\n      }\n      case 'cookies': {\n        // cookies:\n        //   node, express, koa: req.headers.cookie\n        //   vercel, sails.js, express (w/ cookie middleware), nextjs: req.cookies\n        requestData.cookies =\n          // TODO (v8 / #5257): We're only sending the empty object for backwards compatibility, so the last bit can\n          // come off in v8\n          req.cookies || (headers.cookie && (0,_cookie_js__WEBPACK_IMPORTED_MODULE_1__.parseCookie)(headers.cookie)) || {};\n        break;\n      }\n      case 'query_string': {\n        // query string:\n        //   node: req.url (raw)\n        //   express, koa, nextjs: req.query\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        requestData.query_string = extractQueryParams(req, deps);\n        break;\n      }\n      case 'data': {\n        if (method === 'GET' || method === 'HEAD') {\n          break;\n        }\n        // body data:\n        //   express, koa, nextjs: req.body\n        //\n        //   when using node by itself, you have to read the incoming stream(see\n        //   https://nodejs.dev/learn/get-http-request-body-data-using-nodejs); if a user is doing that, we can't know\n        //   where they're going to store the final result, so they'll have to capture this data themselves\n        if (req.body !== undefined) {\n          requestData.data = (0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isString)(req.body) ? req.body : JSON.stringify((0,_normalize_js__WEBPACK_IMPORTED_MODULE_3__.normalize)(req.body));\n        }\n        break;\n      }\n      default: {\n        if ({}.hasOwnProperty.call(req, key)) {\n          requestData[key] = (req )[key];\n        }\n      }\n    }\n  });\n\n  return requestData;\n}\n\n/**\n * Add data from the given request to the given event\n *\n * @param event The event to which the request data will be added\n * @param req Request object\n * @param options.include Flags to control what data is included\n * @param options.deps Injected platform-specific dependencies\n * @returns The mutated `Event` object\n */\nfunction addRequestDataToEvent(\n  event,\n  req,\n  options,\n) {\n  const include = {\n    ...DEFAULT_INCLUDES,\n    ...(options && options.include),\n  };\n\n  if (include.request) {\n    const extractedRequestData = Array.isArray(include.request)\n      ? extractRequestData(req, { include: include.request, deps: options && options.deps })\n      : extractRequestData(req, { deps: options && options.deps });\n\n    event.request = {\n      ...event.request,\n      ...extractedRequestData,\n    };\n  }\n\n  if (include.user) {\n    const extractedUser = req.user && (0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isPlainObject)(req.user) ? extractUserData(req.user, include.user) : {};\n\n    if (Object.keys(extractedUser).length) {\n      event.user = {\n        ...event.user,\n        ...extractedUser,\n      };\n    }\n  }\n\n  // client ip:\n  //   node, nextjs: req.socket.remoteAddress\n  //   express, koa: req.ip\n  if (include.ip) {\n    const ip = req.ip || (req.socket && req.socket.remoteAddress);\n    if (ip) {\n      event.user = {\n        ...event.user,\n        ip_address: ip,\n      };\n    }\n  }\n\n  if (include.transaction && !event.transaction) {\n    // TODO do we even need this anymore?\n    // TODO make this work for nextjs\n    event.transaction = extractTransaction(req, include.transaction);\n  }\n\n  return event;\n}\n\nfunction extractQueryParams(\n  req,\n  deps,\n) {\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  let originalUrl = req.originalUrl || req.url || '';\n\n  if (!originalUrl) {\n    return;\n  }\n\n  // The `URL` constructor can't handle internal URLs of the form `/some/path/here`, so stick a dummy protocol and\n  // hostname on the beginning. Since the point here is just to grab the query string, it doesn't matter what we use.\n  if (originalUrl.startsWith('/')) {\n    originalUrl = `http://dogs.are.great${originalUrl}`;\n  }\n\n  return (\n    req.query ||\n    (typeof URL !== undefined && new URL(originalUrl).search.replace('?', '')) ||\n    // In Node 8, `URL` isn't in the global scope, so we have to use the built-in module from Node\n    (deps && deps.url && deps.url.parse(originalUrl).query) ||\n    undefined\n  );\n}\n\n/**\n * Transforms a `Headers` object that implements the `Web Fetch API` (https://developer.mozilla.org/en-US/docs/Web/API/Headers) into a simple key-value dict.\n * The header keys will be lower case: e.g. A \"Content-Type\" header will be stored as \"content-type\".\n */\nfunction winterCGHeadersToDict(winterCGHeaders) {\n  const headers = {};\n  try {\n    winterCGHeaders.forEach((value, key) => {\n      if (typeof value === 'string') {\n        // We check that value is a string even though it might be redundant to make sure prototype pollution is not possible.\n        headers[key] = value;\n      }\n    });\n  } catch (e) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _logger_js__WEBPACK_IMPORTED_MODULE_4__.logger.warn('Sentry failed extracting headers from a request object. If you see this, please file an issue.');\n  }\n\n  return headers;\n}\n\n/**\n * Converts a `Request` object that implements the `Web Fetch API` (https://developer.mozilla.org/en-US/docs/Web/API/Headers) into the format that the `RequestData` integration understands.\n */\nfunction winterCGRequestToRequestData(req) {\n  const headers = winterCGHeadersToDict(req.headers);\n  return {\n    method: req.method,\n    url: req.url,\n    headers,\n  };\n}\n\n\n//# sourceMappingURL=requestdata.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/requestdata.js?")},"./node_modules/@sentry/utils/esm/severity.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   severityFromString: () => (/* binding */ severityFromString),\n/* harmony export */   severityLevelFromString: () => (/* binding */ severityLevelFromString),\n/* harmony export */   validSeverityLevels: () => (/* binding */ validSeverityLevels)\n/* harmony export */ });\n// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nconst validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nfunction severityFromString(level) {\n  return severityLevelFromString(level) ;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\n\n//# sourceMappingURL=severity.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/severity.js?")},"./node_modules/@sentry/utils/esm/stacktrace.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStackParser: () => (/* binding */ createStackParser),\n/* harmony export */   filenameIsInApp: () => (/* reexport safe */ _node_stack_trace_js__WEBPACK_IMPORTED_MODULE_0__.filenameIsInApp),\n/* harmony export */   getFunctionName: () => (/* binding */ getFunctionName),\n/* harmony export */   nodeStackLineParser: () => (/* binding */ nodeStackLineParser),\n/* harmony export */   stackParserFromStackParserOptions: () => (/* binding */ stackParserFromStackParserOptions),\n/* harmony export */   stripSentryFramesAndReverse: () => (/* binding */ stripSentryFramesAndReverse)\n/* harmony export */ });\n/* harmony import */ var _node_stack_trace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node-stack-trace.js */ \"./node_modules/@sentry/utils/esm/node-stack-trace.js\");\n\n\n\nconst STACKTRACE_FRAME_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirst = 0) => {\n    const frames = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirst; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || '?',\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, (0,_node_stack_trace_js__WEBPACK_IMPORTED_MODULE_0__.node)(getModule)];\n}\n\n\n//# sourceMappingURL=stacktrace.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/stacktrace.js?")},"./node_modules/@sentry/utils/esm/string.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isMatchingPattern: () => (/* binding */ isMatchingPattern),\n/* harmony export */   safeJoin: () => (/* binding */ safeJoin),\n/* harmony export */   snipLine: () => (/* binding */ snipLine),\n/* harmony export */   stringMatchesSomePattern: () => (/* binding */ stringMatchesSomePattern),\n/* harmony export */   truncate: () => (/* binding */ truncate)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isVueViewModel)(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nfunction isMatchingPattern(\n  value,\n  pattern,\n  requireExactStringMatch = false,\n) {\n  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(value)) {\n    return false;\n  }\n\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isRegExp)(pattern)) {\n    return pattern.test(value);\n  }\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nfunction stringMatchesSomePattern(\n  testString,\n  patterns = [],\n  requireExactStringMatch = false,\n) {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n\n\n//# sourceMappingURL=string.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/string.js?")},"./node_modules/@sentry/utils/esm/supports.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNativeFetch: () => (/* binding */ isNativeFetch),\n/* harmony export */   supportsDOMError: () => (/* binding */ supportsDOMError),\n/* harmony export */   supportsDOMException: () => (/* binding */ supportsDOMException),\n/* harmony export */   supportsErrorEvent: () => (/* binding */ supportsErrorEvent),\n/* harmony export */   supportsFetch: () => (/* binding */ supportsFetch),\n/* harmony export */   supportsNativeFetch: () => (/* binding */ supportsNativeFetch),\n/* harmony export */   supportsReferrerPolicy: () => (/* binding */ supportsReferrerPolicy),\n/* harmony export */   supportsReportingObserver: () => (/* binding */ supportsReportingObserver)\n/* harmony export */ });\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger.js */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = (0,_worldwide_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFetch(func) {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n\n//# sourceMappingURL=supports.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/supports.js?")},"./node_modules/@sentry/utils/esm/syncpromise.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SyncPromise: () => (/* binding */ SyncPromise),\n/* harmony export */   rejectedSyncPromise: () => (/* binding */ rejectedSyncPromise),\n/* harmony export */   resolvedSyncPromise: () => (/* binding */ resolvedSyncPromise)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ "./node_modules/@sentry/utils/esm/is.js");\n\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States["PENDING"] = PENDING] = "PENDING";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States["RESOLVED"] = RESOLVED] = "RESOLVED";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States["REJECTED"] = REJECTED] = "REJECTED";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it\'s interface\n * but is not async internally\n */\nclass SyncPromise {\n\n   constructor(\n    executor,\n  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init2() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init3() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isThenable)(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init4() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\n\n//# sourceMappingURL=syncpromise.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/syncpromise.js?')},"./node_modules/@sentry/utils/esm/time.js":(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _browserPerformanceTimeOriginMode: () => (/* binding */ _browserPerformanceTimeOriginMode),\n/* harmony export */   browserPerformanceTimeOrigin: () => (/* binding */ browserPerformanceTimeOrigin),\n/* harmony export */   dateTimestampInSeconds: () => (/* binding */ dateTimestampInSeconds),\n/* harmony export */   timestampInSeconds: () => (/* binding */ timestampInSeconds),\n/* harmony export */   timestampWithMs: () => (/* binding */ timestampWithMs),\n/* harmony export */   usingPerformanceAPI: () => (/* binding */ usingPerformanceAPI)\n/* harmony export */ });\n/* harmony import */ var _node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node.js */ \"./node_modules/@sentry/utils/esm/node.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = (0,_worldwide_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    const perfHooks = (0,_node_js__WEBPACK_IMPORTED_MODULE_1__.dynamicRequire)(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance = (0,_node_js__WEBPACK_IMPORTED_MODULE_1__.isNodeEnv)() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nconst dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nconst timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nconst usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\n\n//# sourceMappingURL=time.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/time.js?")},"./node_modules/@sentry/utils/esm/tracing.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TRACEPARENT_REGEXP: () => (/* binding */ TRACEPARENT_REGEXP),\n/* harmony export */   extractTraceparentData: () => (/* binding */ extractTraceparentData),\n/* harmony export */   generateSentryTraceHeader: () => (/* binding */ generateSentryTraceHeader),\n/* harmony export */   tracingContextFromHeaders: () => (/* binding */ tracingContextFromHeaders)\n/* harmony export */ });\n/* harmony import */ var _baggage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./baggage.js */ \"./node_modules/@sentry/utils/esm/baggage.js\");\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./misc.js */ \"./node_modules/@sentry/utils/esm/misc.js\");\n\n\n\nconst TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create tracing context from incoming headers.\n */\nfunction tracingContextFromHeaders(\n  sentryTrace,\n  baggage,\n)\n\n {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = (0,_baggage_js__WEBPACK_IMPORTED_MODULE_0__.baggageHeaderToDynamicSamplingContext)(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  const propagationContext = {\n    traceId: traceId || (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n    spanId: (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n    sampled: parentSampled,\n  };\n\n  if (parentSpanId) {\n    propagationContext.parentSpanId = parentSpanId;\n  }\n\n  if (dynamicSamplingContext) {\n    propagationContext.dsc = dynamicSamplingContext ;\n  }\n\n  return {\n    traceparentData,\n    dynamicSamplingContext,\n    propagationContext,\n  };\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nfunction generateSentryTraceHeader(\n  traceId = (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n  spanId = (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n  sampled,\n) {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n\n\n//# sourceMappingURL=tracing.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/tracing.js?")},"./node_modules/@sentry/utils/esm/url.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNumberOfUrlSegments: () => (/* binding */ getNumberOfUrlSegments),\n/* harmony export */   getSanitizedUrlString: () => (/* binding */ getSanitizedUrlString),\n/* harmony export */   parseUrl: () => (/* binding */ parseUrl),\n/* harmony export */   stripUrlQueryAndFragment: () => (/* binding */ stripUrlQueryAndFragment)\n/* harmony export */ });\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span description\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nfunction getSanitizedUrlString(url) {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        .replace(':80', '')\n        .replace(':443', '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n\n\n//# sourceMappingURL=url.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/url.js?")},"./node_modules/@sentry/utils/esm/vendor/supportsHistory.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supportsHistory: () => (/* binding */ supportsHistory)\n/* harmony export */ });\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n// Based on https://github.com/angular/angular.js/pull/13945/files\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = (0,_worldwide_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (WINDOW ).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\n\n//# sourceMappingURL=supportsHistory.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/vendor/supportsHistory.js?")},"./node_modules/@sentry/utils/esm/worldwide.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GLOBAL_OBJ: () => (/* binding */ GLOBAL_OBJ),\n/* harmony export */   getGlobalObject: () => (/* binding */ getGlobalObject),\n/* harmony export */   getGlobalSingleton: () => (/* binding */ getGlobalSingleton)\n/* harmony export */ });\n/** Internal global with common properties and Sentry extensions  */\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj) {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function () {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nfunction getGlobalObject() {\n  return GLOBAL_OBJ ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\n\n//# sourceMappingURL=worldwide.js.map\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@sentry/utils/esm/worldwide.js?")},"./node_modules/agent-base/dist/src/index.js":function(module,__unused_webpack_exports,__webpack_require__){"use strict";eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst debug_1 = __importDefault(__webpack_require__(/*! debug */ \"./node_modules/debug/src/index.js\"));\nconst promisify_1 = __importDefault(__webpack_require__(/*! ./promisify */ \"./node_modules/agent-base/dist/src/promisify.js\"));\nconst debug = debug_1.default('agent-base');\nfunction isAgent(v) {\n    return Boolean(v) && typeof v.addRequest === 'function';\n}\nfunction isSecureEndpoint() {\n    const { stack } = new Error();\n    if (typeof stack !== 'string')\n        return false;\n    return stack.split('\\n').some(l => l.indexOf('(https.js:') !== -1 || l.indexOf('node:https:') !== -1);\n}\nfunction createAgent(callback, opts) {\n    return new createAgent.Agent(callback, opts);\n}\n(function (createAgent) {\n    /**\n     * Base `http.Agent` implementation.\n     * No pooling/keep-alive is implemented by default.\n     *\n     * @param {Function} callback\n     * @api public\n     */\n    class Agent extends events_1.EventEmitter {\n        constructor(callback, _opts) {\n            super();\n            let opts = _opts;\n            if (typeof callback === 'function') {\n                this.callback = callback;\n            }\n            else if (callback) {\n                opts = callback;\n            }\n            // Timeout for the socket to be returned from the callback\n            this.timeout = null;\n            if (opts && typeof opts.timeout === 'number') {\n                this.timeout = opts.timeout;\n            }\n            // These aren't actually used by `agent-base`, but are required\n            // for the TypeScript definition files in `@types/node` :/\n            this.maxFreeSockets = 1;\n            this.maxSockets = 1;\n            this.maxTotalSockets = Infinity;\n            this.sockets = {};\n            this.freeSockets = {};\n            this.requests = {};\n            this.options = {};\n        }\n        get defaultPort() {\n            if (typeof this.explicitDefaultPort === 'number') {\n                return this.explicitDefaultPort;\n            }\n            return isSecureEndpoint() ? 443 : 80;\n        }\n        set defaultPort(v) {\n            this.explicitDefaultPort = v;\n        }\n        get protocol() {\n            if (typeof this.explicitProtocol === 'string') {\n                return this.explicitProtocol;\n            }\n            return isSecureEndpoint() ? 'https:' : 'http:';\n        }\n        set protocol(v) {\n            this.explicitProtocol = v;\n        }\n        callback(req, opts, fn) {\n            throw new Error('\"agent-base\" has no default implementation, you must subclass and override `callback()`');\n        }\n        /**\n         * Called by node-core's \"_http_client.js\" module when creating\n         * a new HTTP request with this Agent instance.\n         *\n         * @api public\n         */\n        addRequest(req, _opts) {\n            const opts = Object.assign({}, _opts);\n            if (typeof opts.secureEndpoint !== 'boolean') {\n                opts.secureEndpoint = isSecureEndpoint();\n            }\n            if (opts.host == null) {\n                opts.host = 'localhost';\n            }\n            if (opts.port == null) {\n                opts.port = opts.secureEndpoint ? 443 : 80;\n            }\n            if (opts.protocol == null) {\n                opts.protocol = opts.secureEndpoint ? 'https:' : 'http:';\n            }\n            if (opts.host && opts.path) {\n                // If both a `host` and `path` are specified then it's most\n                // likely the result of a `url.parse()` call... we need to\n                // remove the `path` portion so that `net.connect()` doesn't\n                // attempt to open that as a unix socket file.\n                delete opts.path;\n            }\n            delete opts.agent;\n            delete opts.hostname;\n            delete opts._defaultAgent;\n            delete opts.defaultPort;\n            delete opts.createConnection;\n            // Hint to use \"Connection: close\"\n            // XXX: non-documented `http` module API :(\n            req._last = true;\n            req.shouldKeepAlive = false;\n            let timedOut = false;\n            let timeoutId = null;\n            const timeoutMs = opts.timeout || this.timeout;\n            const onerror = (err) => {\n                if (req._hadError)\n                    return;\n                req.emit('error', err);\n                // For Safety. Some additional errors might fire later on\n                // and we need to make sure we don't double-fire the error event.\n                req._hadError = true;\n            };\n            const ontimeout = () => {\n                timeoutId = null;\n                timedOut = true;\n                const err = new Error(`A \"socket\" was not created for HTTP request before ${timeoutMs}ms`);\n                err.code = 'ETIMEOUT';\n                onerror(err);\n            };\n            const callbackError = (err) => {\n                if (timedOut)\n                    return;\n                if (timeoutId !== null) {\n                    clearTimeout(timeoutId);\n                    timeoutId = null;\n                }\n                onerror(err);\n            };\n            const onsocket = (socket) => {\n                if (timedOut)\n                    return;\n                if (timeoutId != null) {\n                    clearTimeout(timeoutId);\n                    timeoutId = null;\n                }\n                if (isAgent(socket)) {\n                    // `socket` is actually an `http.Agent` instance, so\n                    // relinquish responsibility for this `req` to the Agent\n                    // from here on\n                    debug('Callback returned another Agent instance %o', socket.constructor.name);\n                    socket.addRequest(req, opts);\n                    return;\n                }\n                if (socket) {\n                    socket.once('free', () => {\n                        this.freeSocket(socket, opts);\n                    });\n                    req.onSocket(socket);\n                    return;\n                }\n                const err = new Error(`no Duplex stream was returned to agent-base for \\`${req.method} ${req.path}\\``);\n                onerror(err);\n            };\n            if (typeof this.callback !== 'function') {\n                onerror(new Error('`callback` is not defined'));\n                return;\n            }\n            if (!this.promisifiedCallback) {\n                if (this.callback.length >= 3) {\n                    debug('Converting legacy callback function to promise');\n                    this.promisifiedCallback = promisify_1.default(this.callback);\n                }\n                else {\n                    this.promisifiedCallback = this.callback;\n                }\n            }\n            if (typeof timeoutMs === 'number' && timeoutMs > 0) {\n                timeoutId = setTimeout(ontimeout, timeoutMs);\n            }\n            if ('port' in opts && typeof opts.port !== 'number') {\n                opts.port = Number(opts.port);\n            }\n            try {\n                debug('Resolving socket for %o request: %o', opts.protocol, `${req.method} ${req.path}`);\n                Promise.resolve(this.promisifiedCallback(req, opts)).then(onsocket, callbackError);\n            }\n            catch (err) {\n                Promise.reject(err).catch(callbackError);\n            }\n        }\n        freeSocket(socket, opts) {\n            debug('Freeing socket %o %o', socket.constructor.name, opts);\n            socket.destroy();\n        }\n        destroy() {\n            debug('Destroying agent %o', this.constructor.name);\n        }\n    }\n    createAgent.Agent = Agent;\n    // So that `instanceof` works correctly\n    createAgent.prototype = createAgent.Agent.prototype;\n})(createAgent || (createAgent = {}));\nmodule.exports = createAgent;\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/agent-base/dist/src/index.js?")},"./node_modules/agent-base/dist/src/promisify.js":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nfunction promisify(fn) {\n    return function (req, opts) {\n        return new Promise((resolve, reject) => {\n            fn.call(this, req, opts, (err, rtn) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(rtn);\n                }\n            });\n        });\n    };\n}\nexports["default"] = promisify;\n//# sourceMappingURL=promisify.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/agent-base/dist/src/promisify.js?')},"./node_modules/debug/src/browser.js":(module,exports,__webpack_require__)=>{eval("/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = __webpack_require__(/*! ./common */ \"./node_modules/debug/src/common.js\")(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/debug/src/browser.js?")},"./node_modules/debug/src/common.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = __webpack_require__(/*! ms */ \"./node_modules/ms/index.js\");\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/debug/src/common.js?")},"./node_modules/debug/src/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval("/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = __webpack_require__(/*! ./browser.js */ \"./node_modules/debug/src/browser.js\");\n} else {\n\tmodule.exports = __webpack_require__(/*! ./node.js */ \"./node_modules/debug/src/node.js\");\n}\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/debug/src/index.js?")},"./node_modules/debug/src/node.js":(module,exports,__webpack_require__)=>{eval("/**\n * Module dependencies.\n */\n\nconst tty = __webpack_require__(/*! tty */ \"tty\");\nconst util = __webpack_require__(/*! util */ \"util\");\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = __webpack_require__(/*! supports-color */ \"./node_modules/supports-color/index.js\");\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = __webpack_require__(/*! ./common */ \"./node_modules/debug/src/common.js\")(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/debug/src/node.js?")},"./node_modules/ejson/index.js":module=>{eval("/******/ (function() { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ([\n/* 0 */,\n/* 1 */\n/***/ (function(__unused_webpack_module, exports) {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.lengthOf = exports.keysOf = exports.isObject = exports.isInfOrNaN = exports.isFunction = exports.isArguments = exports.hasOwn = exports.handleError = exports.convertMapToObject = exports.checkError = void 0;\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar isFunction = function isFunction(fn) {\n  return typeof fn === 'function';\n};\n\nexports.isFunction = isFunction;\n\nvar isObject = function isObject(fn) {\n  return _typeof(fn) === 'object';\n};\n\nexports.isObject = isObject;\n\nvar keysOf = function keysOf(obj) {\n  return Object.keys(obj);\n};\n\nexports.keysOf = keysOf;\n\nvar lengthOf = function lengthOf(obj) {\n  return Object.keys(obj).length;\n};\n\nexports.lengthOf = lengthOf;\n\nvar hasOwn = function hasOwn(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n\nexports.hasOwn = hasOwn;\n\nvar convertMapToObject = function convertMapToObject(map) {\n  return Array.from(map).reduce(function (acc, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    // reassign to not create new object\n    acc[key] = value;\n    return acc;\n  }, {});\n};\n\nexports.convertMapToObject = convertMapToObject;\n\nvar isArguments = function isArguments(obj) {\n  return obj != null && hasOwn(obj, 'callee');\n};\n\nexports.isArguments = isArguments;\n\nvar isInfOrNaN = function isInfOrNaN(obj) {\n  return Number.isNaN(obj) || obj === Infinity || obj === -Infinity;\n};\n\nexports.isInfOrNaN = isInfOrNaN;\nvar checkError = {\n  maxStack: function maxStack(msgError) {\n    return new RegExp('Maximum call stack size exceeded', 'g').test(msgError);\n  }\n};\nexports.checkError = checkError;\n\nvar handleError = function handleError(fn) {\n  return function () {\n    try {\n      return fn.apply(this, arguments);\n    } catch (error) {\n      var isMaxStack = checkError.maxStack(error.message);\n\n      if (isMaxStack) {\n        throw new Error('Converting circular structure to JSON');\n      }\n\n      throw error;\n    }\n  };\n};\n\nexports.handleError = handleError;\n\n/***/ }),\n/* 2 */\n/***/ (function(__unused_webpack_module, exports) {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Base64 = void 0;\n// Base 64 encoding\nvar BASE_64_CHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar BASE_64_VALS = Object.create(null);\n\nvar getChar = function getChar(val) {\n  return BASE_64_CHARS.charAt(val);\n};\n\nvar getVal = function getVal(ch) {\n  return ch === '=' ? -1 : BASE_64_VALS[ch];\n};\n\nfor (var i = 0; i < BASE_64_CHARS.length; i++) {\n  BASE_64_VALS[getChar(i)] = i;\n}\n\n;\n\nvar encode = function encode(array) {\n  if (typeof array === \"string\") {\n    var str = array;\n    array = newBinary(str.length);\n\n    for (var _i = 0; _i < str.length; _i++) {\n      var ch = str.charCodeAt(_i);\n\n      if (ch > 0xFF) {\n        throw new Error(\"Not ascii. Base64.encode can only take ascii strings.\");\n      }\n\n      array[_i] = ch;\n    }\n  }\n\n  var answer = [];\n  var a = null;\n  var b = null;\n  var c = null;\n  var d = null;\n\n  for (var _i2 = 0; _i2 < array.length; _i2++) {\n    switch (_i2 % 3) {\n      case 0:\n        a = array[_i2] >> 2 & 0x3F;\n        b = (array[_i2] & 0x03) << 4;\n        break;\n\n      case 1:\n        b = b | array[_i2] >> 4 & 0xF;\n        c = (array[_i2] & 0xF) << 2;\n        break;\n\n      case 2:\n        c = c | array[_i2] >> 6 & 0x03;\n        d = array[_i2] & 0x3F;\n        answer.push(getChar(a));\n        answer.push(getChar(b));\n        answer.push(getChar(c));\n        answer.push(getChar(d));\n        a = null;\n        b = null;\n        c = null;\n        d = null;\n        break;\n    }\n  }\n\n  if (a != null) {\n    answer.push(getChar(a));\n    answer.push(getChar(b));\n\n    if (c == null) {\n      answer.push('=');\n    } else {\n      answer.push(getChar(c));\n    }\n\n    if (d == null) {\n      answer.push('=');\n    }\n  }\n\n  return answer.join(\"\");\n}; // XXX This is a weird place for this to live, but it's used both by\n// this package and 'ejson', and we can't put it in 'ejson' without\n// introducing a circular dependency. It should probably be in its own\n// package or as a helper in a package that both 'base64' and 'ejson'\n// use.\n\n\nvar newBinary = function newBinary(len) {\n  if (typeof Uint8Array === 'undefined' || typeof ArrayBuffer === 'undefined') {\n    var ret = [];\n\n    for (var _i3 = 0; _i3 < len; _i3++) {\n      ret.push(0);\n    }\n\n    ret.$Uint8ArrayPolyfill = true;\n    return ret;\n  }\n\n  return new Uint8Array(new ArrayBuffer(len));\n};\n\nvar decode = function decode(str) {\n  var len = Math.floor(str.length * 3 / 4);\n\n  if (str.charAt(str.length - 1) == '=') {\n    len--;\n\n    if (str.charAt(str.length - 2) == '=') {\n      len--;\n    }\n  }\n\n  var arr = newBinary(len);\n  var one = null;\n  var two = null;\n  var three = null;\n  var j = 0;\n\n  for (var _i4 = 0; _i4 < str.length; _i4++) {\n    var c = str.charAt(_i4);\n    var v = getVal(c);\n\n    switch (_i4 % 4) {\n      case 0:\n        if (v < 0) {\n          throw new Error('invalid base64 string');\n        }\n\n        one = v << 2;\n        break;\n\n      case 1:\n        if (v < 0) {\n          throw new Error('invalid base64 string');\n        }\n\n        one = one | v >> 4;\n        arr[j++] = one;\n        two = (v & 0x0F) << 4;\n        break;\n\n      case 2:\n        if (v >= 0) {\n          two = two | v >> 2;\n          arr[j++] = two;\n          three = (v & 0x03) << 6;\n        }\n\n        break;\n\n      case 3:\n        if (v >= 0) {\n          arr[j++] = three | v;\n        }\n\n        break;\n    }\n  }\n\n  return arr;\n};\n\nvar Base64 = {\n  encode: encode,\n  decode: decode,\n  newBinary: newBinary\n};\nexports.Base64 = Base64;\n\n/***/ }),\n/* 3 */\n/***/ (function(module) {\n\n\n\nmodule.exports = {\n  //\n  // When fibers are not supported on you system Meteor automatically sets this\n  // function to a nope function. We're going to do the same here as there are\n  // small parts of the code that call this function.\n  //\n  _noYieldsAllowed: function _noYieldsAllowed(f) {\n    return f();\n  }\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n// Based on json2.js from https://github.com/douglascrockford/JSON-js\n//\n//    json2.js\n//    2012-10-08\n//\n//    Public Domain.\n//\n//    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\nfunction quote(string) {\n  return JSON.stringify(string);\n}\n\nvar str = function str(key, holder, singleIndent, outerIndent, canonical) {\n  var value = holder[key]; // What happens next depends on the value's type.\n\n  switch (_typeof(value)) {\n    case 'string':\n      return quote(value);\n\n    case 'number':\n      // JSON numbers must be finite. Encode non-finite numbers as null.\n      return isFinite(value) ? String(value) : 'null';\n\n    case 'boolean':\n      return String(value);\n    // If the type is 'object', we might be dealing with an object or an array or\n    // null.\n\n    case 'object':\n      {\n        // Due to a specification blunder in ECMAScript, typeof null is 'object',\n        // so watch out for that case.\n        if (!value) {\n          return 'null';\n        } // Make an array to hold the partial results of stringifying this object\n        // value.\n\n\n        var innerIndent = outerIndent + singleIndent;\n        var partial = [];\n        var v; // Is the value an array?\n\n        if (Array.isArray(value) || {}.hasOwnProperty.call(value, 'callee')) {\n          // The value is an array. Stringify every element. Use null as a\n          // placeholder for non-JSON values.\n          var length = value.length;\n\n          for (var i = 0; i < length; i += 1) {\n            partial[i] = str(i, value, singleIndent, innerIndent, canonical) || 'null';\n          } // Join all of the elements together, separated with commas, and wrap\n          // them in brackets.\n\n\n          if (partial.length === 0) {\n            v = '[]';\n          } else if (innerIndent) {\n            v = '[\\n' + innerIndent + partial.join(',\\n' + innerIndent) + '\\n' + outerIndent + ']';\n          } else {\n            v = '[' + partial.join(',') + ']';\n          }\n\n          return v;\n        } // Iterate through all of the keys in the object.\n\n\n        var keys = Object.keys(value);\n\n        if (canonical) {\n          keys = keys.sort();\n        }\n\n        keys.forEach(function (k) {\n          v = str(k, value, singleIndent, innerIndent, canonical);\n\n          if (v) {\n            partial.push(quote(k) + (innerIndent ? ': ' : ':') + v);\n          }\n        }); // Join all of the member texts together, separated with commas,\n        // and wrap them in braces.\n\n        if (partial.length === 0) {\n          v = '{}';\n        } else if (innerIndent) {\n          v = '{\\n' + innerIndent + partial.join(',\\n' + innerIndent) + '\\n' + outerIndent + '}';\n        } else {\n          v = '{' + partial.join(',') + '}';\n        }\n\n        return v;\n      }\n\n    default: // Do nothing\n\n  }\n}; // If the JSON object does not yet have a stringify method, give it one.\n\n\nvar canonicalStringify = function canonicalStringify(value, options) {\n  // Make a fake root object containing our value under the key of ''.\n  // Return the result of stringifying the value.\n  var allOptions = Object.assign({\n    indent: '',\n    canonical: false\n  }, options);\n\n  if (allOptions.indent === true) {\n    allOptions.indent = '  ';\n  } else if (typeof allOptions.indent === 'number') {\n    var newIndent = '';\n\n    for (var i = 0; i < allOptions.indent; i++) {\n      newIndent += ' ';\n    }\n\n    allOptions.indent = newIndent;\n  }\n\n  return str('', {\n    '': value\n  }, allOptions.indent, '', allOptions.canonical);\n};\n\nvar _default = canonicalStringify;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;\n\n/***/ })\n/******/ \t]);\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_12371__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_12371__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\nvar __nested_webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n!function() {\nvar exports = __nested_webpack_exports__;\n/* provided dependency */ var Base64 = __nested_webpack_require_12371__(2)[\"Base64\"];\n/* provided dependency */ var Meteor = __nested_webpack_require_12371__(3);\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.EJSON = void 0;\n\nvar _utils = __nested_webpack_require_12371__(1);\n\n/**\n * @namespace\n * @summary Namespace for EJSON functions\n */\nvar EJSON = {}; // Custom type interface definition\n\n/**\n * @class CustomType\n * @instanceName customType\n * @memberOf EJSON\n * @summary The interface that a class must satisfy to be able to become an\n * EJSON custom type via EJSON.addType.\n */\n\n/**\n * @function typeName\n * @memberOf EJSON.CustomType\n * @summary Return the tag used to identify this type.  This must match the\n *          tag used to register this type with\n *          [`EJSON.addType`](#ejson_add_type).\n * @locus Anywhere\n * @instance\n */\n\n/**\n * @function toJSONValue\n * @memberOf EJSON.CustomType\n * @summary Serialize this instance into a JSON-compatible value.\n * @locus Anywhere\n * @instance\n */\n\n/**\n * @function clone\n * @memberOf EJSON.CustomType\n * @summary Return a value `r` such that `this.equals(r)` is true, and\n *          modifications to `r` do not affect `this` and vice versa.\n * @locus Anywhere\n * @instance\n */\n\n/**\n * @function equals\n * @memberOf EJSON.CustomType\n * @summary Return `true` if `other` has a value equal to `this`; `false`\n *          otherwise.\n * @locus Anywhere\n * @param {Object} other Another object to compare this to.\n * @instance\n */\n\nexports.EJSON = EJSON;\nvar customTypes = new Map(); // Add a custom type, using a method of your choice to get to and\n// from a basic JSON-able representation.  The factory argument\n// is a function of JSON-able --\x3e your object\n// The type you add must have:\n// - A toJSONValue() method, so that Meteor can serialize it\n// - a typeName() method, to show how to look it up in our type table.\n// It is okay if these methods are monkey-patched on.\n// EJSON.clone will use toJSONValue and the given factory to produce\n// a clone, but you may specify a method clone() that will be\n// used instead.\n// Similarly, EJSON.equals will use toJSONValue to make comparisons,\n// but you may provide a method equals() instead.\n\n/**\n * @summary Add a custom datatype to EJSON.\n * @locus Anywhere\n * @param {String} name A tag for your custom type; must be unique among\n *                      custom data types defined in your project, and must\n *                      match the result of your type's `typeName` method.\n * @param {Function} factory A function that deserializes a JSON-compatible\n *                           value into an instance of your type.  This should\n *                           match the serialization performed by your\n *                           type's `toJSONValue` method.\n */\n\nEJSON.addType = function (name, factory) {\n  if (customTypes.has(name)) {\n    throw new Error(\"Type \".concat(name, \" already present\"));\n  }\n\n  customTypes.set(name, factory);\n};\n\nvar builtinConverters = [{\n  // Date\n  matchJSONValue: function matchJSONValue(obj) {\n    return (0, _utils.hasOwn)(obj, '$date') && (0, _utils.lengthOf)(obj) === 1;\n  },\n  matchObject: function matchObject(obj) {\n    return obj instanceof Date;\n  },\n  toJSONValue: function toJSONValue(obj) {\n    return {\n      $date: obj.getTime()\n    };\n  },\n  fromJSONValue: function fromJSONValue(obj) {\n    return new Date(obj.$date);\n  }\n}, {\n  // RegExp\n  matchJSONValue: function matchJSONValue(obj) {\n    return (0, _utils.hasOwn)(obj, '$regexp') && (0, _utils.hasOwn)(obj, '$flags') && (0, _utils.lengthOf)(obj) === 2;\n  },\n  matchObject: function matchObject(obj) {\n    return obj instanceof RegExp;\n  },\n  toJSONValue: function toJSONValue(regexp) {\n    return {\n      $regexp: regexp.source,\n      $flags: regexp.flags\n    };\n  },\n  fromJSONValue: function fromJSONValue(obj) {\n    // Replaces duplicate / invalid flags.\n    return new RegExp(obj.$regexp, obj.$flags // Cut off flags at 50 chars to avoid abusing RegExp for DOS.\n    .slice(0, 50).replace(/[^gimuy]/g, '').replace(/(.)(?=.*\\1)/g, ''));\n  }\n}, {\n  // NaN, Inf, -Inf. (These are the only objects with typeof !== 'object'\n  // which we match.)\n  matchJSONValue: function matchJSONValue(obj) {\n    return (0, _utils.hasOwn)(obj, '$InfNaN') && (0, _utils.lengthOf)(obj) === 1;\n  },\n  matchObject: _utils.isInfOrNaN,\n  toJSONValue: function toJSONValue(obj) {\n    var sign;\n\n    if (Number.isNaN(obj)) {\n      sign = 0;\n    } else if (obj === Infinity) {\n      sign = 1;\n    } else {\n      sign = -1;\n    }\n\n    return {\n      $InfNaN: sign\n    };\n  },\n  fromJSONValue: function fromJSONValue(obj) {\n    return obj.$InfNaN / 0;\n  }\n}, {\n  // Binary\n  matchJSONValue: function matchJSONValue(obj) {\n    return (0, _utils.hasOwn)(obj, '$binary') && (0, _utils.lengthOf)(obj) === 1;\n  },\n  matchObject: function matchObject(obj) {\n    return typeof Uint8Array !== 'undefined' && obj instanceof Uint8Array || obj && (0, _utils.hasOwn)(obj, '$Uint8ArrayPolyfill');\n  },\n  toJSONValue: function toJSONValue(obj) {\n    return {\n      $binary: Base64.encode(obj)\n    };\n  },\n  fromJSONValue: function fromJSONValue(obj) {\n    return Base64.decode(obj.$binary);\n  }\n}, {\n  // Escaping one level\n  matchJSONValue: function matchJSONValue(obj) {\n    return (0, _utils.hasOwn)(obj, '$escape') && (0, _utils.lengthOf)(obj) === 1;\n  },\n  matchObject: function matchObject(obj) {\n    var match = false;\n\n    if (obj) {\n      var keyCount = (0, _utils.lengthOf)(obj);\n\n      if (keyCount === 1 || keyCount === 2) {\n        match = builtinConverters.some(function (converter) {\n          return converter.matchJSONValue(obj);\n        });\n      }\n    }\n\n    return match;\n  },\n  toJSONValue: function toJSONValue(obj) {\n    var newObj = {};\n    (0, _utils.keysOf)(obj).forEach(function (key) {\n      newObj[key] = EJSON.toJSONValue(obj[key]);\n    });\n    return {\n      $escape: newObj\n    };\n  },\n  fromJSONValue: function fromJSONValue(obj) {\n    var newObj = {};\n    (0, _utils.keysOf)(obj.$escape).forEach(function (key) {\n      newObj[key] = EJSON.fromJSONValue(obj.$escape[key]);\n    });\n    return newObj;\n  }\n}, {\n  // Custom\n  matchJSONValue: function matchJSONValue(obj) {\n    return (0, _utils.hasOwn)(obj, '$type') && (0, _utils.hasOwn)(obj, '$value') && (0, _utils.lengthOf)(obj) === 2;\n  },\n  matchObject: function matchObject(obj) {\n    return EJSON._isCustomType(obj);\n  },\n  toJSONValue: function toJSONValue(obj) {\n    var jsonValue = Meteor._noYieldsAllowed(function () {\n      return obj.toJSONValue();\n    });\n\n    return {\n      $type: obj.typeName(),\n      $value: jsonValue\n    };\n  },\n  fromJSONValue: function fromJSONValue(obj) {\n    var typeName = obj.$type;\n\n    if (!customTypes.has(typeName)) {\n      throw new Error(\"Custom EJSON type \".concat(typeName, \" is not defined\"));\n    }\n\n    var converter = customTypes.get(typeName);\n    return Meteor._noYieldsAllowed(function () {\n      return converter(obj.$value);\n    });\n  }\n}];\n\nEJSON._isCustomType = function (obj) {\n  return obj && (0, _utils.isFunction)(obj.toJSONValue) && (0, _utils.isFunction)(obj.typeName) && customTypes.has(obj.typeName());\n};\n\nEJSON._getTypes = function () {\n  var isOriginal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return isOriginal ? customTypes : (0, _utils.convertMapToObject)(customTypes);\n};\n\nEJSON._getConverters = function () {\n  return builtinConverters;\n}; // Either return the JSON-compatible version of the argument, or undefined (if\n// the item isn't itself replaceable, but maybe some fields in it are)\n\n\nvar toJSONValueHelper = function toJSONValueHelper(item) {\n  for (var i = 0; i < builtinConverters.length; i++) {\n    var converter = builtinConverters[i];\n\n    if (converter.matchObject(item)) {\n      return converter.toJSONValue(item);\n    }\n  }\n\n  return undefined;\n}; // for both arrays and objects, in-place modification.\n\n\nvar adjustTypesToJSONValue = function adjustTypesToJSONValue(obj) {\n  // Is it an atom that we need to adjust?\n  if (obj === null) {\n    return null;\n  }\n\n  var maybeChanged = toJSONValueHelper(obj);\n\n  if (maybeChanged !== undefined) {\n    return maybeChanged;\n  } // Other atoms are unchanged.\n\n\n  if (!(0, _utils.isObject)(obj)) {\n    return obj;\n  } // Iterate over array or object structure.\n\n\n  (0, _utils.keysOf)(obj).forEach(function (key) {\n    var value = obj[key];\n\n    if (!(0, _utils.isObject)(value) && value !== undefined && !(0, _utils.isInfOrNaN)(value)) {\n      return; // continue\n    }\n\n    var changed = toJSONValueHelper(value);\n\n    if (changed) {\n      obj[key] = changed;\n      return; // on to the next key\n    } // if we get here, value is an object but not adjustable\n    // at this level.  recurse.\n\n\n    adjustTypesToJSONValue(value);\n  });\n  return obj;\n};\n\nEJSON._adjustTypesToJSONValue = adjustTypesToJSONValue;\n/**\n * @summary Serialize an EJSON-compatible value into its plain JSON\n *          representation.\n * @locus Anywhere\n * @param {EJSON} val A value to serialize to plain JSON.\n */\n\nEJSON.toJSONValue = function (item) {\n  var changed = toJSONValueHelper(item);\n\n  if (changed !== undefined) {\n    return changed;\n  }\n\n  var newItem = item;\n\n  if ((0, _utils.isObject)(item)) {\n    newItem = EJSON.clone(item);\n    adjustTypesToJSONValue(newItem);\n  }\n\n  return newItem;\n}; // Either return the argument changed to have the non-json\n// rep of itself (the Object version) or the argument itself.\n// DOES NOT RECURSE.  For actually getting the fully-changed value, use\n// EJSON.fromJSONValue\n\n\nvar fromJSONValueHelper = function fromJSONValueHelper(value) {\n  if ((0, _utils.isObject)(value) && value !== null) {\n    var keys = (0, _utils.keysOf)(value);\n\n    if (keys.length <= 2 && keys.every(function (k) {\n      return typeof k === 'string' && k.substr(0, 1) === '$';\n    })) {\n      for (var i = 0; i < builtinConverters.length; i++) {\n        var converter = builtinConverters[i];\n\n        if (converter.matchJSONValue(value)) {\n          return converter.fromJSONValue(value);\n        }\n      }\n    }\n  }\n\n  return value;\n}; // for both arrays and objects. Tries its best to just\n// use the object you hand it, but may return something\n// different if the object you hand it itself needs changing.\n\n\nvar adjustTypesFromJSONValue = function adjustTypesFromJSONValue(obj) {\n  if (obj === null) {\n    return null;\n  }\n\n  var maybeChanged = fromJSONValueHelper(obj);\n\n  if (maybeChanged !== obj) {\n    return maybeChanged;\n  } // Other atoms are unchanged.\n\n\n  if (!(0, _utils.isObject)(obj)) {\n    return obj;\n  }\n\n  (0, _utils.keysOf)(obj).forEach(function (key) {\n    var value = obj[key];\n\n    if ((0, _utils.isObject)(value)) {\n      var changed = fromJSONValueHelper(value);\n\n      if (value !== changed) {\n        obj[key] = changed;\n        return;\n      } // if we get here, value is an object but not adjustable\n      // at this level.  recurse.\n\n\n      adjustTypesFromJSONValue(value);\n    }\n  });\n  return obj;\n};\n\nEJSON._adjustTypesFromJSONValue = adjustTypesFromJSONValue;\n/**\n * @summary Deserialize an EJSON value from its plain JSON representation.\n * @locus Anywhere\n * @param {JSONCompatible} val A value to deserialize into EJSON.\n */\n\nEJSON.fromJSONValue = function (item) {\n  var changed = fromJSONValueHelper(item);\n\n  if (changed === item && (0, _utils.isObject)(item)) {\n    changed = EJSON.clone(item);\n    adjustTypesFromJSONValue(changed);\n  }\n\n  return changed;\n};\n/**\n * @summary Serialize a value to a string. For EJSON values, the serialization\n *          fully represents the value. For non-EJSON values, serializes the\n *          same way as `JSON.stringify`.\n * @locus Anywhere\n * @param {EJSON} val A value to stringify.\n * @param {Object} [options]\n * @param {Boolean | Integer | String} options.indent Indents objects and\n * arrays for easy readability.  When `true`, indents by 2 spaces; when an\n * integer, indents by that number of spaces; and when a string, uses the\n * string as the indentation pattern.\n * @param {Boolean} options.canonical When `true`, stringifies keys in an\n *                                    object in sorted order.\n */\n\n\nEJSON.stringify = (0, _utils.handleError)(function (item, options) {\n  var serialized;\n  var json = EJSON.toJSONValue(item);\n\n  if (options && (options.canonical || options.indent)) {\n    var canonicalStringify = __nested_webpack_require_12371__(4);\n\n    serialized = canonicalStringify(json, options);\n  } else {\n    serialized = JSON.stringify(json);\n  }\n\n  return serialized;\n});\n/**\n * @summary Parse a string into an EJSON value. Throws an error if the string\n *          is not valid EJSON.\n * @locus Anywhere\n * @param {String} str A string to parse into an EJSON value.\n */\n\nEJSON.parse = function (item) {\n  if (typeof item !== 'string') {\n    throw new Error('EJSON.parse argument should be a string');\n  }\n\n  return EJSON.fromJSONValue(JSON.parse(item));\n};\n/**\n * @summary Returns true if `x` is a buffer of binary data, as returned from\n *          [`EJSON.newBinary`](#ejson_new_binary).\n * @param {Object} x The variable to check.\n * @locus Anywhere\n */\n\n\nEJSON.isBinary = function (obj) {\n  return !!(typeof Uint8Array !== 'undefined' && obj instanceof Uint8Array || obj && obj.$Uint8ArrayPolyfill);\n};\n/**\n * @summary Return true if `a` and `b` are equal to each other.  Return false\n *          otherwise.  Uses the `equals` method on `a` if present, otherwise\n *          performs a deep comparison.\n * @locus Anywhere\n * @param {EJSON} a\n * @param {EJSON} b\n * @param {Object} [options]\n * @param {Boolean} options.keyOrderSensitive Compare in key sensitive order,\n * if supported by the JavaScript implementation.  For example, `{a: 1, b: 2}`\n * is equal to `{b: 2, a: 1}` only when `keyOrderSensitive` is `false`.  The\n * default is `false`.\n */\n\n\nEJSON.equals = function (a, b, options) {\n  var i;\n  var keyOrderSensitive = !!(options && options.keyOrderSensitive);\n\n  if (a === b) {\n    return true;\n  } // This differs from the IEEE spec for NaN equality, b/c we don't want\n  // anything ever with a NaN to be poisoned from becoming equal to anything.\n\n\n  if (Number.isNaN(a) && Number.isNaN(b)) {\n    return true;\n  } // if either one is falsy, they'd have to be === to be equal\n\n\n  if (!a || !b) {\n    return false;\n  }\n\n  if (!((0, _utils.isObject)(a) && (0, _utils.isObject)(b))) {\n    return false;\n  }\n\n  if (a instanceof Date && b instanceof Date) {\n    return a.valueOf() === b.valueOf();\n  }\n\n  if (EJSON.isBinary(a) && EJSON.isBinary(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if ((0, _utils.isFunction)(a.equals)) {\n    return a.equals(b, options);\n  }\n\n  if ((0, _utils.isFunction)(b.equals)) {\n    return b.equals(a, options);\n  } // Array.isArray works across iframes while instanceof won't\n\n\n  var aIsArray = Array.isArray(a);\n  var bIsArray = Array.isArray(b); // if not both or none are array they are not equal\n\n  if (aIsArray !== bIsArray) {\n    return false;\n  }\n\n  if (aIsArray && bIsArray) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (i = 0; i < a.length; i++) {\n      if (!EJSON.equals(a[i], b[i], options)) {\n        return false;\n      }\n    }\n\n    return true;\n  } // fallback for custom types that don't implement their own equals\n\n\n  switch (EJSON._isCustomType(a) + EJSON._isCustomType(b)) {\n    case 1:\n      return false;\n\n    case 2:\n      return EJSON.equals(EJSON.toJSONValue(a), EJSON.toJSONValue(b));\n\n    default: // Do nothing\n\n  } // fall back to structural equality of objects\n\n\n  var ret;\n  var aKeys = (0, _utils.keysOf)(a);\n  var bKeys = (0, _utils.keysOf)(b);\n\n  if (keyOrderSensitive) {\n    i = 0;\n    ret = aKeys.every(function (key) {\n      if (i >= bKeys.length) {\n        return false;\n      }\n\n      if (key !== bKeys[i]) {\n        return false;\n      }\n\n      if (!EJSON.equals(a[key], b[bKeys[i]], options)) {\n        return false;\n      }\n\n      i++;\n      return true;\n    });\n  } else {\n    i = 0;\n    ret = aKeys.every(function (key) {\n      if (!(0, _utils.hasOwn)(b, key)) {\n        return false;\n      }\n\n      if (!EJSON.equals(a[key], b[key], options)) {\n        return false;\n      }\n\n      i++;\n      return true;\n    });\n  }\n\n  return ret && i === bKeys.length;\n};\n/**\n * @summary Return a deep copy of `val`.\n * @locus Anywhere\n * @param {EJSON} val A value to copy.\n */\n\n\nEJSON.clone = function (v) {\n  var ret;\n\n  if (!(0, _utils.isObject)(v)) {\n    return v;\n  }\n\n  if (v === null) {\n    return null; // null has typeof \"object\"\n  }\n\n  if (v instanceof Date) {\n    return new Date(v.getTime());\n  } // RegExps are not really EJSON elements (eg we don't define a serialization\n  // for them), but they're immutable anyway, so we can support them in clone.\n\n\n  if (v instanceof RegExp) {\n    return v;\n  }\n\n  if (EJSON.isBinary(v)) {\n    ret = EJSON.newBinary(v.length);\n\n    for (var i = 0; i < v.length; i++) {\n      ret[i] = v[i];\n    }\n\n    return ret;\n  }\n\n  if (Array.isArray(v)) {\n    return v.map(EJSON.clone);\n  }\n\n  if ((0, _utils.isArguments)(v)) {\n    return Array.from(v).map(EJSON.clone);\n  } // handle general user-defined typed Objects if they have a clone method\n\n\n  if ((0, _utils.isFunction)(v.clone)) {\n    return v.clone();\n  } // handle other custom types\n\n\n  if (EJSON._isCustomType(v)) {\n    return EJSON.fromJSONValue(EJSON.clone(EJSON.toJSONValue(v)), true);\n  } // handle other objects\n\n\n  ret = {};\n  (0, _utils.keysOf)(v).forEach(function (key) {\n    ret[key] = EJSON.clone(v[key]);\n  });\n  return ret;\n};\n/**\n * @summary Allocate a new buffer of binary data that EJSON can serialize.\n * @locus Anywhere\n * @param {Number} size The number of bytes of binary data to allocate.\n */\n// EJSON.newBinary is the public documented API for this functionality,\n// but the implementation is in the 'base64' package to avoid\n// introducing a circular dependency. (If the implementation were here,\n// then 'base64' would have to use EJSON.newBinary, and 'ejson' would\n// also have to use 'base64'.)\n\n\nEJSON.newBinary = Base64.newBinary;\n}();\nmodule.exports = __nested_webpack_exports__.EJSON;\n/******/ })()\n;\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/ejson/index.js?")},"./node_modules/eventemitter3/index.js":module=>{"use strict";eval("\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif (true) {\n  module.exports = EventEmitter;\n}\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/eventemitter3/index.js?")},"./node_modules/fast-deep-equal/index.js":module=>{"use strict";eval("\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/fast-deep-equal/index.js?")},"./node_modules/has-flag/index.js":module=>{"use strict";eval("\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/has-flag/index.js?")},"./node_modules/https-proxy-agent/dist/agent.js":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst net_1 = __importDefault(__webpack_require__(/*! net */ \"net\"));\nconst tls_1 = __importDefault(__webpack_require__(/*! tls */ \"tls\"));\nconst url_1 = __importDefault(__webpack_require__(/*! url */ \"url\"));\nconst assert_1 = __importDefault(__webpack_require__(/*! assert */ \"assert\"));\nconst debug_1 = __importDefault(__webpack_require__(/*! debug */ \"./node_modules/debug/src/index.js\"));\nconst agent_base_1 = __webpack_require__(/*! agent-base */ \"./node_modules/agent-base/dist/src/index.js\");\nconst parse_proxy_response_1 = __importDefault(__webpack_require__(/*! ./parse-proxy-response */ \"./node_modules/https-proxy-agent/dist/parse-proxy-response.js\"));\nconst debug = debug_1.default('https-proxy-agent:agent');\n/**\n * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to\n * the specified \"HTTP(s) proxy server\" in order to proxy HTTPS requests.\n *\n * Outgoing HTTP requests are first tunneled through the proxy server using the\n * `CONNECT` HTTP request method to establish a connection to the proxy server,\n * and then the proxy server connects to the destination target and issues the\n * HTTP request from the proxy server.\n *\n * `https:` requests have their socket connection upgraded to TLS once\n * the connection to the proxy server has been established.\n *\n * @api public\n */\nclass HttpsProxyAgent extends agent_base_1.Agent {\n    constructor(_opts) {\n        let opts;\n        if (typeof _opts === 'string') {\n            opts = url_1.default.parse(_opts);\n        }\n        else {\n            opts = _opts;\n        }\n        if (!opts) {\n            throw new Error('an HTTP(S) proxy server `host` and `port` must be specified!');\n        }\n        debug('creating new HttpsProxyAgent instance: %o', opts);\n        super(opts);\n        const proxy = Object.assign({}, opts);\n        // If `true`, then connect to the proxy server over TLS.\n        // Defaults to `false`.\n        this.secureProxy = opts.secureProxy || isHTTPS(proxy.protocol);\n        // Prefer `hostname` over `host`, and set the `port` if needed.\n        proxy.host = proxy.hostname || proxy.host;\n        if (typeof proxy.port === 'string') {\n            proxy.port = parseInt(proxy.port, 10);\n        }\n        if (!proxy.port && proxy.host) {\n            proxy.port = this.secureProxy ? 443 : 80;\n        }\n        // ALPN is supported by Node.js >= v5.\n        // attempt to negotiate http/1.1 for proxy servers that support http/2\n        if (this.secureProxy && !('ALPNProtocols' in proxy)) {\n            proxy.ALPNProtocols = ['http 1.1'];\n        }\n        if (proxy.host && proxy.path) {\n            // If both a `host` and `path` are specified then it's most likely\n            // the result of a `url.parse()` call... we need to remove the\n            // `path` portion so that `net.connect()` doesn't attempt to open\n            // that as a Unix socket file.\n            delete proxy.path;\n            delete proxy.pathname;\n        }\n        this.proxy = proxy;\n    }\n    /**\n     * Called when the node-core HTTP client library is creating a\n     * new HTTP request.\n     *\n     * @api protected\n     */\n    callback(req, opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { proxy, secureProxy } = this;\n            // Create a socket connection to the proxy server.\n            let socket;\n            if (secureProxy) {\n                debug('Creating `tls.Socket`: %o', proxy);\n                socket = tls_1.default.connect(proxy);\n            }\n            else {\n                debug('Creating `net.Socket`: %o', proxy);\n                socket = net_1.default.connect(proxy);\n            }\n            const headers = Object.assign({}, proxy.headers);\n            const hostname = `${opts.host}:${opts.port}`;\n            let payload = `CONNECT ${hostname} HTTP/1.1\\r\\n`;\n            // Inject the `Proxy-Authorization` header if necessary.\n            if (proxy.auth) {\n                headers['Proxy-Authorization'] = `Basic ${Buffer.from(proxy.auth).toString('base64')}`;\n            }\n            // The `Host` header should only include the port\n            // number when it is not the default port.\n            let { host, port, secureEndpoint } = opts;\n            if (!isDefaultPort(port, secureEndpoint)) {\n                host += `:${port}`;\n            }\n            headers.Host = host;\n            headers.Connection = 'close';\n            for (const name of Object.keys(headers)) {\n                payload += `${name}: ${headers[name]}\\r\\n`;\n            }\n            const proxyResponsePromise = parse_proxy_response_1.default(socket);\n            socket.write(`${payload}\\r\\n`);\n            const { statusCode, buffered } = yield proxyResponsePromise;\n            if (statusCode === 200) {\n                req.once('socket', resume);\n                if (opts.secureEndpoint) {\n                    // The proxy is connecting to a TLS server, so upgrade\n                    // this socket connection to a TLS connection.\n                    debug('Upgrading socket connection to TLS');\n                    const servername = opts.servername || opts.host;\n                    return tls_1.default.connect(Object.assign(Object.assign({}, omit(opts, 'host', 'hostname', 'path', 'port')), { socket,\n                        servername }));\n                }\n                return socket;\n            }\n            // Some other status code that's not 200... need to re-play the HTTP\n            // header \"data\" events onto the socket once the HTTP machinery is\n            // attached so that the node core `http` can parse and handle the\n            // error status code.\n            // Close the original socket, and a new \"fake\" socket is returned\n            // instead, so that the proxy doesn't get the HTTP request\n            // written to it (which may contain `Authorization` headers or other\n            // sensitive data).\n            //\n            // See: https://hackerone.com/reports/541502\n            socket.destroy();\n            const fakeSocket = new net_1.default.Socket({ writable: false });\n            fakeSocket.readable = true;\n            // Need to wait for the \"socket\" event to re-play the \"data\" events.\n            req.once('socket', (s) => {\n                debug('replaying proxy buffer for failed request');\n                assert_1.default(s.listenerCount('data') > 0);\n                // Replay the \"buffered\" Buffer onto the fake `socket`, since at\n                // this point the HTTP module machinery has been hooked up for\n                // the user.\n                s.push(buffered);\n                s.push(null);\n            });\n            return fakeSocket;\n        });\n    }\n}\nexports[\"default\"] = HttpsProxyAgent;\nfunction resume(socket) {\n    socket.resume();\n}\nfunction isDefaultPort(port, secure) {\n    return Boolean((!secure && port === 80) || (secure && port === 443));\n}\nfunction isHTTPS(protocol) {\n    return typeof protocol === 'string' ? /^https:?$/i.test(protocol) : false;\n}\nfunction omit(obj, ...keys) {\n    const ret = {};\n    let key;\n    for (key in obj) {\n        if (!keys.includes(key)) {\n            ret[key] = obj[key];\n        }\n    }\n    return ret;\n}\n//# sourceMappingURL=agent.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/https-proxy-agent/dist/agent.js?")},"./node_modules/https-proxy-agent/dist/index.js":function(module,__unused_webpack_exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nconst agent_1 = __importDefault(__webpack_require__(/*! ./agent */ "./node_modules/https-proxy-agent/dist/agent.js"));\nfunction createHttpsProxyAgent(opts) {\n    return new agent_1.default(opts);\n}\n(function (createHttpsProxyAgent) {\n    createHttpsProxyAgent.HttpsProxyAgent = agent_1.default;\n    createHttpsProxyAgent.prototype = agent_1.default.prototype;\n})(createHttpsProxyAgent || (createHttpsProxyAgent = {}));\nmodule.exports = createHttpsProxyAgent;\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/https-proxy-agent/dist/index.js?')},"./node_modules/https-proxy-agent/dist/parse-proxy-response.js":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst debug_1 = __importDefault(__webpack_require__(/*! debug */ \"./node_modules/debug/src/index.js\"));\nconst debug = debug_1.default('https-proxy-agent:parse-proxy-response');\nfunction parseProxyResponse(socket) {\n    return new Promise((resolve, reject) => {\n        // we need to buffer any HTTP traffic that happens with the proxy before we get\n        // the CONNECT response, so that if the response is anything other than an \"200\"\n        // response code, then we can re-play the \"data\" events on the socket once the\n        // HTTP parser is hooked up...\n        let buffersLength = 0;\n        const buffers = [];\n        function read() {\n            const b = socket.read();\n            if (b)\n                ondata(b);\n            else\n                socket.once('readable', read);\n        }\n        function cleanup() {\n            socket.removeListener('end', onend);\n            socket.removeListener('error', onerror);\n            socket.removeListener('close', onclose);\n            socket.removeListener('readable', read);\n        }\n        function onclose(err) {\n            debug('onclose had error %o', err);\n        }\n        function onend() {\n            debug('onend');\n        }\n        function onerror(err) {\n            cleanup();\n            debug('onerror %o', err);\n            reject(err);\n        }\n        function ondata(b) {\n            buffers.push(b);\n            buffersLength += b.length;\n            const buffered = Buffer.concat(buffers, buffersLength);\n            const endOfHeaders = buffered.indexOf('\\r\\n\\r\\n');\n            if (endOfHeaders === -1) {\n                // keep buffering\n                debug('have not received end of HTTP headers yet...');\n                read();\n                return;\n            }\n            const firstLine = buffered.toString('ascii', 0, buffered.indexOf('\\r\\n'));\n            const statusCode = +firstLine.split(' ')[1];\n            debug('got proxy server response: %o', firstLine);\n            resolve({\n                statusCode,\n                buffered\n            });\n        }\n        socket.on('error', onerror);\n        socket.on('close', onclose);\n        socket.on('end', onend);\n        read();\n    });\n}\nexports[\"default\"] = parseProxyResponse;\n//# sourceMappingURL=parse-proxy-response.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/https-proxy-agent/dist/parse-proxy-response.js?")},"./node_modules/mimic-fn/index.js":module=>{"use strict";eval("\n\nconst copyProperty = (to, from, property, ignoreNonConfigurable) => {\n\t// `Function#length` should reflect the parameters of `to` not `from` since we keep its body.\n\t// `Function#prototype` is non-writable and non-configurable so can never be modified.\n\tif (property === 'length' || property === 'prototype') {\n\t\treturn;\n\t}\n\n\t// `Function#arguments` and `Function#caller` should not be copied. They were reported to be present in `Reflect.ownKeys` for some devices in React Native (#41), so we explicitly ignore them here.\n\tif (property === 'arguments' || property === 'caller') {\n\t\treturn;\n\t}\n\n\tconst toDescriptor = Object.getOwnPropertyDescriptor(to, property);\n\tconst fromDescriptor = Object.getOwnPropertyDescriptor(from, property);\n\n\tif (!canCopyProperty(toDescriptor, fromDescriptor) && ignoreNonConfigurable) {\n\t\treturn;\n\t}\n\n\tObject.defineProperty(to, property, fromDescriptor);\n};\n\n// `Object.defineProperty()` throws if the property exists, is not configurable and either:\n//  - one its descriptors is changed\n//  - it is non-writable and its value is changed\nconst canCopyProperty = function (toDescriptor, fromDescriptor) {\n\treturn toDescriptor === undefined || toDescriptor.configurable || (\n\t\ttoDescriptor.writable === fromDescriptor.writable &&\n\t\ttoDescriptor.enumerable === fromDescriptor.enumerable &&\n\t\ttoDescriptor.configurable === fromDescriptor.configurable &&\n\t\t(toDescriptor.writable || toDescriptor.value === fromDescriptor.value)\n\t);\n};\n\nconst changePrototype = (to, from) => {\n\tconst fromPrototype = Object.getPrototypeOf(from);\n\tif (fromPrototype === Object.getPrototypeOf(to)) {\n\t\treturn;\n\t}\n\n\tObject.setPrototypeOf(to, fromPrototype);\n};\n\nconst wrappedToString = (withName, fromBody) => `/* Wrapped ${withName}*/\\n${fromBody}`;\n\nconst toStringDescriptor = Object.getOwnPropertyDescriptor(Function.prototype, 'toString');\nconst toStringName = Object.getOwnPropertyDescriptor(Function.prototype.toString, 'name');\n\n// We call `from.toString()` early (not lazily) to ensure `from` can be garbage collected.\n// We use `bind()` instead of a closure for the same reason.\n// Calling `from.toString()` early also allows caching it in case `to.toString()` is called several times.\nconst changeToString = (to, from, name) => {\n\tconst withName = name === '' ? '' : `with ${name.trim()}() `;\n\tconst newToString = wrappedToString.bind(null, withName, from.toString());\n\t// Ensure `to.toString.toString` is non-enumerable and has the same `same`\n\tObject.defineProperty(newToString, 'name', toStringName);\n\tObject.defineProperty(to, 'toString', {...toStringDescriptor, value: newToString});\n};\n\nconst mimicFn = (to, from, {ignoreNonConfigurable = false} = {}) => {\n\tconst {name} = to;\n\n\tfor (const property of Reflect.ownKeys(from)) {\n\t\tcopyProperty(to, from, property, ignoreNonConfigurable);\n\t}\n\n\tchangePrototype(to, from);\n\tchangeToString(to, from, name);\n\n\treturn to;\n};\n\nmodule.exports = mimicFn;\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/mimic-fn/index.js?")},"./node_modules/ms/index.js":module=>{eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/ms/index.js?")},"./node_modules/p-finally/index.js":module=>{"use strict";eval("\nmodule.exports = (promise, onFinally) => {\n\tonFinally = onFinally || (() => {});\n\n\treturn promise.then(\n\t\tval => new Promise(resolve => {\n\t\t\tresolve(onFinally());\n\t\t}).then(() => val),\n\t\terr => new Promise(resolve => {\n\t\t\tresolve(onFinally());\n\t\t}).then(() => {\n\t\t\tthrow err;\n\t\t})\n\t);\n};\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/p-finally/index.js?")},"./node_modules/p-queue/dist/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst EventEmitter = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.js\");\nconst p_timeout_1 = __webpack_require__(/*! p-timeout */ \"./node_modules/p-queue/node_modules/p-timeout/index.js\");\nconst priority_queue_1 = __webpack_require__(/*! ./priority-queue */ \"./node_modules/p-queue/dist/priority-queue.js\");\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst empty = () => { };\nconst timeoutError = new p_timeout_1.TimeoutError();\n/**\nPromise queue with concurrency control.\n*/\nclass PQueue extends EventEmitter {\n    constructor(options) {\n        var _a, _b, _c, _d;\n        super();\n        this._intervalCount = 0;\n        this._intervalEnd = 0;\n        this._pendingCount = 0;\n        this._resolveEmpty = empty;\n        this._resolveIdle = empty;\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        options = Object.assign({ carryoverConcurrencyCount: false, intervalCap: Infinity, interval: 0, concurrency: Infinity, autoStart: true, queueClass: priority_queue_1.default }, options);\n        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\n            throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(_b = (_a = options.intervalCap) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : ''}\\` (${typeof options.intervalCap})`);\n        }\n        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {\n            throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(_d = (_c = options.interval) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''}\\` (${typeof options.interval})`);\n        }\n        this._carryoverConcurrencyCount = options.carryoverConcurrencyCount;\n        this._isIntervalIgnored = options.intervalCap === Infinity || options.interval === 0;\n        this._intervalCap = options.intervalCap;\n        this._interval = options.interval;\n        this._queue = new options.queueClass();\n        this._queueClass = options.queueClass;\n        this.concurrency = options.concurrency;\n        this._timeout = options.timeout;\n        this._throwOnTimeout = options.throwOnTimeout === true;\n        this._isPaused = options.autoStart === false;\n    }\n    get _doesIntervalAllowAnother() {\n        return this._isIntervalIgnored || this._intervalCount < this._intervalCap;\n    }\n    get _doesConcurrentAllowAnother() {\n        return this._pendingCount < this._concurrency;\n    }\n    _next() {\n        this._pendingCount--;\n        this._tryToStartAnother();\n        this.emit('next');\n    }\n    _resolvePromises() {\n        this._resolveEmpty();\n        this._resolveEmpty = empty;\n        if (this._pendingCount === 0) {\n            this._resolveIdle();\n            this._resolveIdle = empty;\n            this.emit('idle');\n        }\n    }\n    _onResumeInterval() {\n        this._onInterval();\n        this._initializeIntervalIfNeeded();\n        this._timeoutId = undefined;\n    }\n    _isIntervalPaused() {\n        const now = Date.now();\n        if (this._intervalId === undefined) {\n            const delay = this._intervalEnd - now;\n            if (delay < 0) {\n                // Act as the interval was done\n                // We don't need to resume it here because it will be resumed on line 160\n                this._intervalCount = (this._carryoverConcurrencyCount) ? this._pendingCount : 0;\n            }\n            else {\n                // Act as the interval is pending\n                if (this._timeoutId === undefined) {\n                    this._timeoutId = setTimeout(() => {\n                        this._onResumeInterval();\n                    }, delay);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    _tryToStartAnother() {\n        if (this._queue.size === 0) {\n            // We can clear the interval (\"pause\")\n            // Because we can redo it later (\"resume\")\n            if (this._intervalId) {\n                clearInterval(this._intervalId);\n            }\n            this._intervalId = undefined;\n            this._resolvePromises();\n            return false;\n        }\n        if (!this._isPaused) {\n            const canInitializeInterval = !this._isIntervalPaused();\n            if (this._doesIntervalAllowAnother && this._doesConcurrentAllowAnother) {\n                const job = this._queue.dequeue();\n                if (!job) {\n                    return false;\n                }\n                this.emit('active');\n                job();\n                if (canInitializeInterval) {\n                    this._initializeIntervalIfNeeded();\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    _initializeIntervalIfNeeded() {\n        if (this._isIntervalIgnored || this._intervalId !== undefined) {\n            return;\n        }\n        this._intervalId = setInterval(() => {\n            this._onInterval();\n        }, this._interval);\n        this._intervalEnd = Date.now() + this._interval;\n    }\n    _onInterval() {\n        if (this._intervalCount === 0 && this._pendingCount === 0 && this._intervalId) {\n            clearInterval(this._intervalId);\n            this._intervalId = undefined;\n        }\n        this._intervalCount = this._carryoverConcurrencyCount ? this._pendingCount : 0;\n        this._processQueue();\n    }\n    /**\n    Executes all queued functions until it reaches the limit.\n    */\n    _processQueue() {\n        // eslint-disable-next-line no-empty\n        while (this._tryToStartAnother()) { }\n    }\n    get concurrency() {\n        return this._concurrency;\n    }\n    set concurrency(newConcurrency) {\n        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {\n            throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${newConcurrency}\\` (${typeof newConcurrency})`);\n        }\n        this._concurrency = newConcurrency;\n        this._processQueue();\n    }\n    /**\n    Adds a sync or async task to the queue. Always returns a promise.\n    */\n    async add(fn, options = {}) {\n        return new Promise((resolve, reject) => {\n            const run = async () => {\n                this._pendingCount++;\n                this._intervalCount++;\n                try {\n                    const operation = (this._timeout === undefined && options.timeout === undefined) ? fn() : p_timeout_1.default(Promise.resolve(fn()), (options.timeout === undefined ? this._timeout : options.timeout), () => {\n                        if (options.throwOnTimeout === undefined ? this._throwOnTimeout : options.throwOnTimeout) {\n                            reject(timeoutError);\n                        }\n                        return undefined;\n                    });\n                    resolve(await operation);\n                }\n                catch (error) {\n                    reject(error);\n                }\n                this._next();\n            };\n            this._queue.enqueue(run, options);\n            this._tryToStartAnother();\n            this.emit('add');\n        });\n    }\n    /**\n    Same as `.add()`, but accepts an array of sync or async functions.\n\n    @returns A promise that resolves when all functions are resolved.\n    */\n    async addAll(functions, options) {\n        return Promise.all(functions.map(async (function_) => this.add(function_, options)));\n    }\n    /**\n    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)\n    */\n    start() {\n        if (!this._isPaused) {\n            return this;\n        }\n        this._isPaused = false;\n        this._processQueue();\n        return this;\n    }\n    /**\n    Put queue execution on hold.\n    */\n    pause() {\n        this._isPaused = true;\n    }\n    /**\n    Clear the queue.\n    */\n    clear() {\n        this._queue = new this._queueClass();\n    }\n    /**\n    Can be called multiple times. Useful if you for example add additional items at a later time.\n\n    @returns A promise that settles when the queue becomes empty.\n    */\n    async onEmpty() {\n        // Instantly resolve if the queue is empty\n        if (this._queue.size === 0) {\n            return;\n        }\n        return new Promise(resolve => {\n            const existingResolve = this._resolveEmpty;\n            this._resolveEmpty = () => {\n                existingResolve();\n                resolve();\n            };\n        });\n    }\n    /**\n    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.\n\n    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.\n    */\n    async onIdle() {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (this._pendingCount === 0 && this._queue.size === 0) {\n            return;\n        }\n        return new Promise(resolve => {\n            const existingResolve = this._resolveIdle;\n            this._resolveIdle = () => {\n                existingResolve();\n                resolve();\n            };\n        });\n    }\n    /**\n    Size of the queue.\n    */\n    get size() {\n        return this._queue.size;\n    }\n    /**\n    Size of the queue, filtered by the given options.\n\n    For example, this can be used to find the number of items remaining in the queue with a specific priority level.\n    */\n    sizeBy(options) {\n        // eslint-disable-next-line unicorn/no-fn-reference-in-iterator\n        return this._queue.filter(options).length;\n    }\n    /**\n    Number of pending promises.\n    */\n    get pending() {\n        return this._pendingCount;\n    }\n    /**\n    Whether the queue is currently paused.\n    */\n    get isPaused() {\n        return this._isPaused;\n    }\n    get timeout() {\n        return this._timeout;\n    }\n    /**\n    Set the timeout for future operations.\n    */\n    set timeout(milliseconds) {\n        this._timeout = milliseconds;\n    }\n}\nexports[\"default\"] = PQueue;\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/p-queue/dist/index.js?")},"./node_modules/p-queue/dist/lower-bound.js":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nfunction lowerBound(array, value, comparator) {\n    let first = 0;\n    let count = array.length;\n    while (count > 0) {\n        const step = (count / 2) | 0;\n        let it = first + step;\n        if (comparator(array[it], value) <= 0) {\n            first = ++it;\n            count -= step + 1;\n        }\n        else {\n            count = step;\n        }\n    }\n    return first;\n}\nexports["default"] = lowerBound;\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/p-queue/dist/lower-bound.js?')},"./node_modules/p-queue/dist/priority-queue.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nconst lower_bound_1 = __webpack_require__(/*! ./lower-bound */ "./node_modules/p-queue/dist/lower-bound.js");\nclass PriorityQueue {\n    constructor() {\n        this._queue = [];\n    }\n    enqueue(run, options) {\n        options = Object.assign({ priority: 0 }, options);\n        const element = {\n            priority: options.priority,\n            run\n        };\n        if (this.size && this._queue[this.size - 1].priority >= options.priority) {\n            this._queue.push(element);\n            return;\n        }\n        const index = lower_bound_1.default(this._queue, element, (a, b) => b.priority - a.priority);\n        this._queue.splice(index, 0, element);\n    }\n    dequeue() {\n        const item = this._queue.shift();\n        return item === null || item === void 0 ? void 0 : item.run;\n    }\n    filter(options) {\n        return this._queue.filter((element) => element.priority === options.priority).map((element) => element.run);\n    }\n    get size() {\n        return this._queue.length;\n    }\n}\nexports["default"] = PriorityQueue;\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/p-queue/dist/priority-queue.js?')},"./node_modules/p-queue/node_modules/p-timeout/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nconst pFinally = __webpack_require__(/*! p-finally */ \"./node_modules/p-finally/index.js\");\n\nclass TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\nconst pTimeout = (promise, milliseconds, fallback) => new Promise((resolve, reject) => {\n\tif (typeof milliseconds !== 'number' || milliseconds < 0) {\n\t\tthrow new TypeError('Expected `milliseconds` to be a positive number');\n\t}\n\n\tif (milliseconds === Infinity) {\n\t\tresolve(promise);\n\t\treturn;\n\t}\n\n\tconst timer = setTimeout(() => {\n\t\tif (typeof fallback === 'function') {\n\t\t\ttry {\n\t\t\t\tresolve(fallback());\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = typeof fallback === 'string' ? fallback : `Promise timed out after ${milliseconds} milliseconds`;\n\t\tconst timeoutError = fallback instanceof Error ? fallback : new TimeoutError(message);\n\n\t\tif (typeof promise.cancel === 'function') {\n\t\t\tpromise.cancel();\n\t\t}\n\n\t\treject(timeoutError);\n\t}, milliseconds);\n\n\t// TODO: Use native `finally` keyword when targeting Node.js 10\n\tpFinally(\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\tpromise.then(resolve, reject),\n\t\t() => {\n\t\t\tclearTimeout(timer);\n\t\t}\n\t);\n});\n\nmodule.exports = pTimeout;\n// TODO: Remove this for the next major release\nmodule.exports[\"default\"] = pTimeout;\n\nmodule.exports.TimeoutError = TimeoutError;\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/p-queue/node_modules/p-timeout/index.js?")},"./node_modules/supports-color/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\nconst os = __webpack_require__(/*! os */ \"os\");\nconst tty = __webpack_require__(/*! tty */ \"tty\");\nconst hasFlag = __webpack_require__(/*! has-flag */ \"./node_modules/has-flag/index.js\");\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/supports-color/index.js?")},"./upgrades.js":module=>{eval("module.exports = [\n\t/*\n\t * Place your upgrade scripts here\n\t * Remember that once it has been added it cannot be removed!\n\t */\n\t// function (context, props) {\n\t// \treturn {\n\t// \t\tupdatedConfig: null,\n\t// \t\tupdatedActions: [],\n\t// \t\tupdatedFeedbacks: [],\n\t// \t}\n\t// },\n]\n\n\n//# sourceURL=webpack://spx-grapics-controller/./upgrades.js?")},"./variables.js":module=>{eval('\n\nmodule.exports = {\n\tinitVariables: function() {\n\t\tlet self= this;\n\t\tlet variables = [];\n/*\n\t\tvariables.push({\n\t\t\tname: "first var", variableId: "var1",\n\t\t\tname: "second var", variableId: "var2",\n\t\t\tname: "third var", variableId: "var3",\n\t\t})\n*/\n\t}\n}\n\n\n//# sourceURL=webpack://spx-grapics-controller/./variables.js?')},assert:e=>{"use strict";e.exports=require("assert")},async_hooks:e=>{"use strict";e.exports=require("async_hooks")},child_process:e=>{"use strict";e.exports=require("child_process")},crypto:e=>{"use strict";e.exports=require("crypto")},dgram:e=>{"use strict";e.exports=require("dgram")},domain:e=>{"use strict";e.exports=require("domain")},events:e=>{"use strict";e.exports=require("events")},fs:e=>{"use strict";e.exports=require("fs")},"fs/promises":e=>{"use strict";e.exports=require("fs/promises")},http:e=>{"use strict";e.exports=require("http")},https:e=>{"use strict";e.exports=require("https")},inspector:e=>{"use strict";e.exports=require("inspector")},net:e=>{"use strict";e.exports=require("net")},os:e=>{"use strict";e.exports=require("os")},path:e=>{"use strict";e.exports=require("path")},stream:e=>{"use strict";e.exports=require("stream")},tls:e=>{"use strict";e.exports=require("tls")},tty:e=>{"use strict";e.exports=require("tty")},url:e=>{"use strict";e.exports=require("url")},util:e=>{"use strict";e.exports=require("util")},zlib:e=>{"use strict";e.exports=require("zlib")},"./node_modules/@companion-module/base/dist/common/osc.js":(__unused_webpack_module,exports)=>{"use strict";eval('\n/**\n * Warning: these types are used in various stable apis.\n * BE VERY CAREFUL WHEN MAKING CHANGES\n */\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n//# sourceMappingURL=osc.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/common/osc.js?')},"./node_modules/@companion-module/base/dist/entrypoint.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.runEntrypoint = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\n/* eslint-disable no-process-exit */\nconst versions_1 = __webpack_require__(/*! ./host-api/versions */ \"./node_modules/@companion-module/base/dist/host-api/versions.js\");\nconst promises_1 = tslib_1.__importDefault(__webpack_require__(/*! fs/promises */ \"fs/promises\"));\nconst util_1 = __webpack_require__(/*! ./util */ \"./node_modules/@companion-module/base/dist/util.js\");\nconst node_1 = __webpack_require__(/*! @sentry/node */ \"./node_modules/@sentry/node/esm/index.js\");\n__webpack_require__(/*! @sentry/tracing */ \"./node_modules/@sentry/tracing/esm/index.js\");\nconst ipc_wrapper_1 = __webpack_require__(/*! ./host-api/ipc-wrapper */ \"./node_modules/@companion-module/base/dist/host-api/ipc-wrapper.js\");\nconst path_1 = tslib_1.__importDefault(__webpack_require__(/*! path */ \"path\"));\nlet hasEntrypoint = false;\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nlet moduleInstance;\n// async function readFileUrl(url: URL): Promise<string> {\n// \t// Hack to make json files be loadable after being inlined by webpack\n// \tconst prefix = 'application/json;base64,'\n// \tif (url.pathname.startsWith(prefix)) {\n// \t\tconst base64 = url.pathname.substring(prefix.length)\n// \t\treturn Buffer.from(base64, 'base64').toString()\n// \t}\n// \t// Fallback to reading from disk\n// \tconst buf = await fs.readFile(url)\n// \treturn buf.toString()\n// }\n/**\n * Setup the module for execution\n * This should be called once per-module, to register the class that should be executed\n * @param factory The class for the module\n * @param upgradeScripts Upgrade scripts\n */\nfunction runEntrypoint(factory, upgradeScripts) {\n    Promise.resolve()\n        .then(async () => {\n        // const pkgJsonStr = (await fs.readFile(path.join(__dirname, '../package.json'))).toString()\n        // const pkgJson = JSON.parse(pkgJsonStr)\n        // if (!pkgJson || pkgJson.name !== '@companion-module/base')\n        // \tthrow new Error('Failed to find the package.json for @companion-module/base')\n        // if (!pkgJson.version) throw new Error('Missing version field in the package.json for @companion-module/base')\n        // Ensure only called once per module\n        if (hasEntrypoint)\n            throw new Error(`runEntrypoint can only be called once`);\n        hasEntrypoint = true;\n        const manifestPath = process.env.MODULE_MANIFEST;\n        if (!manifestPath)\n            throw new Error('Module initialise is missing MODULE_MANIFEST');\n        // check manifest api field against apiVersion\n        const manifestBlob = await promises_1.default.readFile(manifestPath);\n        const manifestJson = JSON.parse(manifestBlob.toString());\n        if (manifestJson.runtime?.api !== versions_1.HostApiNodeJsIpc)\n            throw new Error(`Module manifest 'api' mismatch`);\n        if (!manifestJson.runtime.apiVersion)\n            throw new Error(`Module manifest 'apiVersion' missing`);\n        let apiVersion = manifestJson.runtime.apiVersion;\n        if (apiVersion === '0.0.0') {\n            // It looks like the module is in dev mode. lets attempt to load the package.json from this module instead\n            try {\n                const baseJsonStr = await promises_1.default.readFile(path_1.default.join(__dirname, '../package.json'));\n                const baseJson = JSON.parse(baseJsonStr.toString());\n                if (baseJson.name === '@companion-module/base') {\n                    apiVersion = baseJson.version;\n                }\n            }\n            catch (e) {\n                throw new Error('Failed to determine module api version');\n            }\n        }\n        if (!process.send)\n            throw new Error('Module is not being run with ipc');\n        console.log(`Starting up module class: ${factory.name}`);\n        const connectionId = process.env.CONNECTION_ID;\n        if (typeof connectionId !== 'string' || !connectionId)\n            throw new Error('Module initialise is missing CONNECTION_ID');\n        const verificationToken = process.env.VERIFICATION_TOKEN;\n        if (typeof verificationToken !== 'string' || !verificationToken)\n            throw new Error('Module initialise is missing VERIFICATION_TOKEN');\n        // Allow the DSN to be provided as an env variable\n        const sentryDsn = process.env.SENTRY_DSN;\n        const sentryUserId = process.env.SENTRY_USERID;\n        const sentryCompanionVersion = process.env.SENTRY_COMPANION_VERSION;\n        if (sentryDsn && sentryUserId && sentryDsn.substring(0, 8) == 'https://') {\n            console.log('Sentry enabled');\n            (0, node_1.init)({\n                dsn: sentryDsn,\n                release: `${manifestJson.name}@${manifestJson.version}`,\n                beforeSend(event) {\n                    if (event.exception) {\n                        console.log('sentry', 'error', event.exception);\n                    }\n                    return event;\n                },\n            });\n            (0, node_1.configureScope)((scope) => {\n                scope.setUser({ id: sentryUserId });\n                scope.setTag('companion', sentryCompanionVersion);\n            });\n        }\n        else {\n            console.log('Sentry disabled');\n        }\n        const ipcWrapper = new ipc_wrapper_1.IpcWrapper({}, (msg) => {\n            process.send(msg);\n        }, 5000);\n        process.once('message', (msg) => {\n            ipcWrapper.receivedMessage(msg);\n        });\n        moduleInstance = new factory((0, util_1.literal)({\n            id: connectionId,\n            upgradeScripts,\n            _isInstanceBaseProps: true,\n        }));\n        ipcWrapper.sendWithCb('register', { apiVersion, connectionId, verificationToken }).then(() => {\n            console.log(`Module-host accepted registration`);\n        }, (err) => {\n            console.error('Module registration failed', err);\n            // Kill the process\n            process.exit(11);\n        });\n    })\n        .catch((e) => {\n        console.error(`Failed to startup module:`);\n        console.error(e.stack || e.message);\n        process.exit(1);\n    });\n}\nexports.runEntrypoint = runEntrypoint;\n//# sourceMappingURL=entrypoint.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/entrypoint.js?")},"./node_modules/@companion-module/base/dist/helpers/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.UDPHelper = exports.TelnetHelper = exports.TCPHelper = void 0;\nvar tcp_1 = __webpack_require__(/*! ./tcp */ "./node_modules/@companion-module/base/dist/helpers/tcp.js");\nObject.defineProperty(exports, "TCPHelper", ({ enumerable: true, get: function () { return tcp_1.TCPHelper; } }));\nvar telnet_1 = __webpack_require__(/*! ./telnet */ "./node_modules/@companion-module/base/dist/helpers/telnet.js");\nObject.defineProperty(exports, "TelnetHelper", ({ enumerable: true, get: function () { return telnet_1.TelnetHelper; } }));\nvar udp_1 = __webpack_require__(/*! ./udp */ "./node_modules/@companion-module/base/dist/helpers/udp.js");\nObject.defineProperty(exports, "UDPHelper", ({ enumerable: true, get: function () { return udp_1.UDPHelper; } }));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/helpers/index.js?')},"./node_modules/@companion-module/base/dist/helpers/tcp.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\n/*\n * This file is part of the Companion project\n * Copyright (c) 2018 Bitfocus AS\n * Authors: William Viker <william@bitfocus.io>, Håkon Nessjøen <haakon@bitfocus.io>\n *\n * This program is free software.\n * You should have received a copy of the MIT licence as well as the Bitfocus\n * Individual Contributor License Agreement for companion along with\n * this program.\n *\n * You can be released from the requirements of the license by purchasing\n * a commercial license. Buying such a license is mandatory as soon as you\n * develop commercial activities involving the Companion software without\n * disclosing the source code of your own applications.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TCPHelper = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nconst net_1 = tslib_1.__importDefault(__webpack_require__(/*! net */ \"net\"));\nconst eventemitter3_1 = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.js\");\nconst enums_1 = __webpack_require__(/*! ../module-api/enums */ \"./node_modules/@companion-module/base/dist/module-api/enums.js\");\nclass TCPHelper extends eventemitter3_1.EventEmitter {\n    #host;\n    #port;\n    _socket;\n    #options;\n    #connected = false;\n    #connecting = false;\n    #destroyed = false;\n    #lastStatus;\n    #reconnectTimer;\n    get isConnected() {\n        return this.#connected;\n    }\n    get isConnecting() {\n        return this.#connecting;\n    }\n    get isDestroyed() {\n        return this.#destroyed;\n    }\n    constructor(host, port, options) {\n        super();\n        this.#host = host;\n        this.#port = port;\n        this.#options = {\n            reconnect_interval: 2000,\n            reconnect: true,\n            ...options,\n        };\n        this._socket = new net_1.default.Socket();\n        this._socket.setKeepAlive(true);\n        this._socket.setNoDelay(true);\n        this._socket.on('error', (err) => {\n            this.#connecting = false;\n            this.#connected = false;\n            if (this.#options.reconnect) {\n                this.#queueReconnect();\n            }\n            this.#new_status(enums_1.InstanceStatus.UnknownError, err.message);\n            this.emit('error', err);\n        });\n        this._socket.on('ready', () => {\n            this.#connected = true;\n            this.#connecting = false;\n            this.#new_status(enums_1.InstanceStatus.Ok);\n            this.emit('connect');\n        });\n        this._socket.on('end', () => {\n            this.#connected = false;\n            this.#new_status(enums_1.InstanceStatus.Disconnected);\n            if (!this.#connecting && this.#options.reconnect) {\n                this.#queueReconnect();\n            }\n            this.emit('end');\n        });\n        this._socket.on('data', (data) => this.emit('data', data));\n        this._socket.on('drain', () => this.emit('drain'));\n        // Let caller install event handlers first\n        setImmediate(() => this.connect());\n        setTimeout(() => {\n            if (!this.#destroyed && !this.listenerCount('error')) {\n                // The socket is active and has no listeners. Log an error for the module devs!\n                console.error(`Danger: TCP client for ${this.#host}:${this.#port} is missing an error handler!`);\n            }\n        }, 5000);\n    }\n    connect() {\n        if (this.#destroyed)\n            throw new Error('Cannot connect destroyed socket');\n        if (this.#connecting)\n            return false;\n        this.#connecting = true;\n        this._socket.connect(this.#port, this.#host);\n        return true;\n    }\n    async send(message) {\n        if (this.#destroyed || this._socket.destroyed)\n            throw new Error('Cannot write to destroyed socket');\n        if (!message || !message.length)\n            throw new Error('No message to send');\n        if (!this.#connected) {\n            return false;\n        }\n        try {\n            return new Promise((resolve, reject) => {\n                this._socket.write(message, (error) => {\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    resolve(true);\n                });\n            });\n        }\n        catch (error) {\n            this.#connected = false;\n            const error2 = error instanceof Error ? error : new Error(`${error}`);\n            // Unhandeled socket error\n            this.#new_status(enums_1.InstanceStatus.UnknownError, error2.message);\n            this.emit('error', error2);\n            throw error2;\n        }\n    }\n    destroy() {\n        this.#destroyed = true;\n        if (this.#reconnectTimer !== undefined) {\n            clearTimeout(this.#reconnectTimer);\n        }\n        this._socket.removeAllListeners();\n        this.removeAllListeners();\n        this._socket.destroy();\n    }\n    #queueReconnect() {\n        if (this.#reconnectTimer !== undefined) {\n            clearTimeout(this.#reconnectTimer);\n        }\n        this.#reconnectTimer = setTimeout(() => {\n            this.#reconnectTimer = undefined;\n            this.#new_status(enums_1.InstanceStatus.Connecting);\n            this.connect();\n        }, this.#options.reconnect_interval);\n    }\n    // Private function\n    #new_status(status, message) {\n        if (this.#lastStatus != status) {\n            this.#lastStatus = status;\n            this.emit('status_change', status, message);\n        }\n    }\n}\nexports.TCPHelper = TCPHelper;\n//# sourceMappingURL=tcp.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/helpers/tcp.js?")},"./node_modules/@companion-module/base/dist/helpers/telnet.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\n/*\n * This file is part of the Companion project\n * Copyright (c) 2018 Bitfocus AS\n * Authors: William Viker <william@bitfocus.io>, Håkon Nessjøen <haakon@bitfocus.io>\n *\n * This program is free software.\n * You should have received a copy of the MIT licence as well as the Bitfocus\n * Individual Contributor License Agreement for companion along with\n * this program.\n *\n * You can be released from the requirements of the license by purchasing\n * a commercial license. Buying such a license is mandatory as soon as you\n * develop commercial activities involving the Companion software without\n * disclosing the source code of your own applications.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TelnetHelper = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nconst eventemitter3_1 = tslib_1.__importDefault(__webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.js\"));\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst tcp_1 = __webpack_require__(/*! ./tcp */ \"./node_modules/@companion-module/base/dist/helpers/tcp.js\");\n// const NULL = 0\nconst DATA = 0;\nconst SE = 240;\nconst SB = 250;\nconst WILL = 251;\nconst WONT = 252;\nconst DO = 253;\nconst DONT = 254;\nconst IAC = 255;\nclass TelnetHelper extends eventemitter3_1.default {\n    #tcp;\n    #stream;\n    get isConnected() {\n        return this.#tcp.isConnected;\n    }\n    get isConnecting() {\n        return this.#tcp.isConnecting;\n    }\n    get isDestroyed() {\n        return this.#tcp.isDestroyed;\n    }\n    constructor(host, port, options) {\n        super();\n        this.#tcp = new tcp_1.TCPHelper(host, port, options);\n        this.#stream = new TelnetStream();\n        this.#tcp._socket.pipe(this.#stream);\n        this.#tcp.on('connect', () => this.emit('connect'));\n        this.#tcp.on('end', () => this.emit('end'));\n        this.#tcp.on('error', (error) => this.emit('error', error));\n        this.#tcp.on('status_change', (status, message) => this.emit('status_change', status, message));\n        // Ignore drain and data, they go via the stream\n        this.#stream.on('iac', (a, b) => this.emit('iac', a, b));\n        this.#stream.on('sb', (buffer) => this.emit('sb', buffer));\n        this.#stream.on('data', (data) => this.emit('data', data));\n        this.#stream.on('drain', () => this.emit('drain'));\n        setTimeout(() => {\n            if (!this.isDestroyed && !this.listenerCount('error')) {\n                // The socket is active and has no listeners. Log an error for the module devs!\n                console.error(`Danger: Telnet client for ${host}:${port} is missing an error handler!`);\n            }\n        }, 5000);\n    }\n    connect() {\n        return this.#tcp.connect();\n    }\n    async send(message) {\n        return this.#tcp.send(message);\n    }\n    destroy() {\n        this.#tcp.destroy();\n        this.#stream.removeAllListeners();\n        this.#stream.destroy();\n    }\n}\nexports.TelnetHelper = TelnetHelper;\n/*\n * TelnetStream\n */\nclass TelnetStream extends stream_1.Transform {\n    #buffer;\n    #subbuffer;\n    #state;\n    constructor(options) {\n        super(options);\n        this.#buffer = Buffer.alloc(0);\n        this.#subbuffer = Buffer.alloc(0);\n        this.#state = DATA;\n    }\n    _transform(obj, _encoding, callback) {\n        for (let i = 0; i < obj.length; ++i) {\n            this.#handleByte(obj[i]);\n        }\n        const data = this.#getData();\n        if (data.length) {\n            this.push(data);\n        }\n        callback();\n    }\n    #handleByte(byte) {\n        if (this.#state === DATA) {\n            if (byte === IAC) {\n                this.#state = IAC;\n                return;\n            }\n            this.#buffer = Buffer.concat([this.#buffer, Buffer.from([byte])]);\n        }\n        else if (this.#state === IAC) {\n            switch (byte) {\n                case SB:\n                case WILL:\n                case WONT:\n                case DO:\n                case DONT:\n                    this.#state = byte;\n                    break;\n                default:\n                    this.#state = DATA;\n                    break;\n            }\n        }\n        else if (this.#state >= WILL && this.#state <= DONT) {\n            let iac = undefined;\n            switch (this.#state) {\n                case WILL:\n                    iac = 'WILL';\n                    break;\n                case WONT:\n                    iac = 'WONT';\n                    break;\n                case DO:\n                    iac = 'DO';\n                    break;\n                case DONT:\n                    iac = 'DONT';\n                    break;\n                default:\n                    // never hit\n                    return;\n            }\n            this.emit('iac', iac, byte);\n            this.#state = DATA;\n            return;\n        }\n        else if (this.#state === SB) {\n            if (byte === SE) {\n                this.emit('sb', this.#subbuffer);\n                this.#state = DATA;\n                this.#subbuffer = Buffer.alloc(0);\n                return;\n            }\n            this.#subbuffer = Buffer.concat([this.#subbuffer, Buffer.from([byte])]);\n        }\n    }\n    #getData() {\n        const buff = this.#buffer;\n        this.#buffer = Buffer.alloc(0);\n        return buff;\n    }\n}\n//# sourceMappingURL=telnet.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/helpers/telnet.js?")},"./node_modules/@companion-module/base/dist/helpers/udp.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\n/*\n * This file is part of the Companion project\n * Copyright (c) 2018 Bitfocus AS\n * Authors: William Viker <william@bitfocus.io>, Håkon Nessjøen <haakon@bitfocus.io>\n *\n * This program is free software.\n * You should have received a copy of the MIT licence as well as the Bitfocus\n * Individual Contributor License Agreement for companion along with\n * this program.\n *\n * You can be released from the requirements of the license by purchasing\n * a commercial license. Buying such a license is mandatory as soon as you\n * develop commercial activities involving the Companion software without\n * disclosing the source code of your own applications.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UDPHelper = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nconst dgram_1 = tslib_1.__importDefault(__webpack_require__(/*! dgram */ \"dgram\"));\nconst eventemitter3_1 = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.js\");\nconst enums_1 = __webpack_require__(/*! ../module-api/enums */ \"./node_modules/@companion-module/base/dist/module-api/enums.js\");\nclass UDPHelper extends eventemitter3_1.EventEmitter {\n    #host;\n    #port;\n    #socket;\n    #options;\n    #destroyed = false;\n    #lastStatus;\n    get isDestroyed() {\n        return this.#destroyed;\n    }\n    constructor(host, port, options) {\n        super();\n        this.#host = host;\n        this.#port = port;\n        this.#options = { ...options };\n        // this.bound = false\n        // this.pending_memberships = []\n        this.#socket = dgram_1.default.createSocket('udp4');\n        try {\n            this.#socket.bind(this.#options.bind_port || 0, this.#options.bind_ip);\n        }\n        catch (e) {\n            throw new Error(`Unable to bind to ip/port: ${this.#options.bind_ip}:${this.#options.bind_port}`);\n        }\n        if (this.#options.broadcast) {\n            this.#socket.setBroadcast(true);\n        }\n        if (this.#options.ttl !== undefined) {\n            this.#socket.setTTL(this.#options.ttl);\n        }\n        if (this.#options.multicast_ttl !== undefined) {\n            this.#socket.setMulticastTTL(this.#options.multicast_ttl);\n        }\n        this.#socket.on('error', (error) => {\n            this.#new_status(enums_1.InstanceStatus.UnknownError, error.message);\n            this.emit('error', error);\n        });\n        this.#socket.on('listening', () => {\n            // this.bound = true\n            // if (this.pending_memberships.length) {\n            // \twhile (this.pending_memberships.length > 0) {\n            // \t\tthis.socket.addMembership(member.shift())\n            // \t}\n            // }\n            if (this.#options.multicast_interface) {\n                this.#socket.setMulticastInterface(this.#options.multicast_interface);\n            }\n            this.#new_status(enums_1.InstanceStatus.Ok);\n            this.emit('listening');\n        });\n        this.#socket.on('message', (data) => this.emit('data', data));\n        setTimeout(() => {\n            if (!this.#destroyed && !this.listenerCount('error')) {\n                // The socket is active and has no listeners. Log an error for the module devs!\n                console.error(`Danger: UDP socket for ${this.#host}:${this.#port} is missing an error handler!`);\n            }\n        }, 5000);\n    }\n    async send(message) {\n        if (this.#destroyed)\n            throw new Error('Cannot write to destroyed socket');\n        if (!message || !message.length)\n            throw new Error('No message to send');\n        return new Promise((resolve, reject) => {\n            this.#socket.send(message, this.#port, this.#host, (error) => {\n                if (error) {\n                    reject(error);\n                    return;\n                }\n                resolve();\n            });\n        });\n    }\n    // addMembership(member) {\n    // \tif (!this.bound) {\n    // \t\tthis.pending_memberships.push(member)\n    // \t} else {\n    // \t\tthis.socket.addMembership(member)\n    // \t}\n    // }\n    destroy() {\n        this.#destroyed = true;\n        this.#socket.removeAllListeners();\n        this.#socket.close();\n        this.removeAllListeners();\n    }\n    // Private function\n    #new_status(status, message) {\n        if (this.#lastStatus != status) {\n            this.#lastStatus = status;\n            this.emit('status_change', status, message);\n        }\n    }\n}\nexports.UDPHelper = UDPHelper;\n//# sourceMappingURL=udp.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/helpers/udp.js?")},"./node_modules/@companion-module/base/dist/host-api/ipc-wrapper.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IpcWrapper = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nconst nanoid_1 = __webpack_require__(/*! nanoid */ \"./node_modules/nanoid/index.cjs\");\nconst util_1 = __webpack_require__(/*! ../util */ \"./node_modules/@companion-module/base/dist/util.js\");\nconst ejson_1 = tslib_1.__importDefault(__webpack_require__(/*! ejson */ \"./node_modules/ejson/index.js\"));\nclass IpcWrapper {\n    #handlers;\n    #sendMessage;\n    #defaultTimeout;\n    #pendingCallbacks = {};\n    constructor(handlers, sendMessage, defaultTimeout) {\n        this.#handlers = handlers;\n        this.#sendMessage = sendMessage;\n        this.#defaultTimeout = defaultTimeout;\n    }\n    async sendWithCb(name, msg, defaultResponse, timeout = 0) {\n        if (timeout <= 0)\n            timeout = this.#defaultTimeout;\n        const callbacks = { timeout: undefined, resolve: () => null, reject: () => null };\n        const promise = new Promise((resolve, reject) => {\n            callbacks.resolve = resolve;\n            callbacks.reject = reject;\n        });\n        const id = (0, nanoid_1.nanoid)();\n        this.#pendingCallbacks[id] = callbacks;\n        this.#sendMessage({\n            direction: 'call',\n            name: String(name),\n            payload: ejson_1.default.stringify(msg),\n            callbackId: id,\n        });\n        // Setup a timeout, creating the error in the call, so that the stack trace is useful\n        const timeoutError = new Error('Call timed out');\n        callbacks.timeout = setTimeout(() => {\n            callbacks.reject(defaultResponse ? defaultResponse() : timeoutError);\n            delete this.#pendingCallbacks[id];\n        }, timeout);\n        return promise;\n    }\n    sendWithNoCb(name, msg) {\n        this.#sendMessage({\n            direction: 'call',\n            name: String(name),\n            payload: ejson_1.default.stringify(msg),\n            callbackId: undefined,\n        });\n    }\n    receivedMessage(msg) {\n        const rawMsg = msg;\n        switch (msg.direction) {\n            case 'call': {\n                const handler = this.#handlers[msg.name];\n                if (!handler) {\n                    if (msg.callbackId) {\n                        this.#sendMessage({\n                            direction: 'response',\n                            callbackId: msg.callbackId,\n                            success: false,\n                            payload: ejson_1.default.stringify({ message: `Unknown command \"${msg.name}\"` }),\n                        });\n                    }\n                    return;\n                }\n                // TODO - should anything be logged here?\n                const data = msg.payload ? ejson_1.default.parse(msg.payload) : undefined;\n                handler(data).then((res) => {\n                    if (msg.callbackId) {\n                        this.#sendMessage({\n                            direction: 'response',\n                            callbackId: msg.callbackId,\n                            success: true,\n                            payload: ejson_1.default.stringify(res),\n                        });\n                    }\n                }, (err) => {\n                    if (msg.callbackId) {\n                        this.#sendMessage({\n                            direction: 'response',\n                            callbackId: msg.callbackId,\n                            success: false,\n                            payload: err instanceof Error ? JSON.stringify(err, Object.getOwnPropertyNames(err)) : ejson_1.default.stringify(err),\n                        });\n                    }\n                });\n                break;\n            }\n            case 'response': {\n                if (!msg.callbackId) {\n                    console.error(`Ipc: Response message has no callbackId`);\n                    return;\n                }\n                const callbacks = this.#pendingCallbacks[msg.callbackId];\n                delete this.#pendingCallbacks[msg.callbackId];\n                if (!callbacks) {\n                    // Likely timed out, we should ignore\n                    return;\n                }\n                clearTimeout(callbacks.timeout);\n                const data = msg.payload ? ejson_1.default.parse(msg.payload) : undefined;\n                if (msg.success) {\n                    callbacks.resolve(data);\n                }\n                else {\n                    let err = data;\n                    if (data && 'message' in data) {\n                        err = new Error(data.message);\n                        if (data.stack)\n                            err.stack = data.stack;\n                    }\n                    callbacks.reject(err);\n                }\n                break;\n            }\n            default:\n                (0, util_1.assertNever)(msg);\n                console.error(`Ipc: Message of unknown direction \"${rawMsg.direction}\"`);\n                break;\n        }\n    }\n}\nexports.IpcWrapper = IpcWrapper;\n//# sourceMappingURL=ipc-wrapper.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/host-api/ipc-wrapper.js?")},"./node_modules/@companion-module/base/dist/host-api/versions.js":(__unused_webpack_module,exports)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HostApiNodeJsIpc = void 0;\nexports.HostApiNodeJsIpc = 'nodejs-ipc';\n//# sourceMappingURL=versions.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/host-api/versions.js?")},"./node_modules/@companion-module/base/dist/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.runEntrypoint = exports.assertNever = exports.splitRgb = exports.combineRgb = exports.literal = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");\ntslib_1.__exportStar(__webpack_require__(/*! ./manifest */ "./node_modules/@companion-module/base/dist/manifest.js"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./module-api/index */ "./node_modules/@companion-module/base/dist/module-api/index.js"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./common/osc */ "./node_modules/@companion-module/base/dist/common/osc.js"), exports);\nvar util_1 = __webpack_require__(/*! ./util */ "./node_modules/@companion-module/base/dist/util.js");\nObject.defineProperty(exports, "literal", ({ enumerable: true, get: function () { return util_1.literal; } }));\nObject.defineProperty(exports, "combineRgb", ({ enumerable: true, get: function () { return util_1.combineRgb; } }));\nObject.defineProperty(exports, "splitRgb", ({ enumerable: true, get: function () { return util_1.splitRgb; } }));\nObject.defineProperty(exports, "assertNever", ({ enumerable: true, get: function () { return util_1.assertNever; } }));\ntslib_1.__exportStar(__webpack_require__(/*! ./helpers/index */ "./node_modules/@companion-module/base/dist/helpers/index.js"), exports);\nvar entrypoint_1 = __webpack_require__(/*! ./entrypoint */ "./node_modules/@companion-module/base/dist/entrypoint.js");\nObject.defineProperty(exports, "runEntrypoint", ({ enumerable: true, get: function () { return entrypoint_1.runEntrypoint; } }));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/index.js?')},"./node_modules/@companion-module/base/dist/internal/actions.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ActionManager = void 0;\nconst base_1 = __webpack_require__(/*! ./base */ \"./node_modules/@companion-module/base/dist/internal/base.js\");\nfunction convertActionInstanceToEvent(action) {\n    return {\n        id: action.id,\n        actionId: action.actionId,\n        controlId: action.controlId,\n        options: action.options,\n    };\n}\nclass ActionManager {\n    #parseVariablesInString;\n    #setActionDefinitions;\n    #log;\n    #actionDefinitions = new Map();\n    #actionInstances = new Map();\n    constructor(parseVariablesInString, setActionDefinitions, log) {\n        this.#parseVariablesInString = parseVariablesInString;\n        this.#setActionDefinitions = setActionDefinitions;\n        this.#log = log;\n    }\n    async handleExecuteAction(msg) {\n        const actionDefinition = this.#actionDefinitions.get(msg.action.actionId);\n        if (!actionDefinition)\n            throw new Error(`Unknown action: ${msg.action.actionId}`);\n        const context = {\n            parseVariablesInString: async (text) => {\n                const res = await this.#parseVariablesInString({\n                    text: text,\n                    controlId: msg.action.controlId,\n                    actionInstanceId: msg.action.id,\n                    feedbackInstanceId: undefined,\n                });\n                return res.text;\n            },\n        };\n        await actionDefinition.callback({\n            id: msg.action.id,\n            actionId: msg.action.actionId,\n            controlId: msg.action.controlId,\n            options: msg.action.options,\n            surfaceId: msg.surfaceId ?? msg.deviceId,\n            _deviceId: msg.surfaceId ?? msg.deviceId,\n            _page: msg.action.page,\n            _bank: msg.action.bank,\n        }, context);\n    }\n    handleUpdateActions(actions) {\n        for (const [id, action] of Object.entries(actions)) {\n            const existing = this.#actionInstances.get(id);\n            if (existing) {\n                // Call unsubscribe\n                const definition = this.#actionDefinitions.get(existing.actionId);\n                if (definition?.unsubscribe) {\n                    const context = {\n                        parseVariablesInString: async (text) => {\n                            const res = await this.#parseVariablesInString({\n                                text: text,\n                                controlId: existing.controlId,\n                                actionInstanceId: existing.id,\n                                feedbackInstanceId: undefined,\n                            });\n                            return res.text;\n                        },\n                    };\n                    Promise.resolve(definition.unsubscribe(convertActionInstanceToEvent(existing), context)).catch((e) => {\n                        this.#log('error', `Action unsubscribe failed: ${JSON.stringify(existing)} - ${e?.message ?? e} ${e?.stack}`);\n                    });\n                }\n            }\n            if (!action || action.disabled) {\n                // Deleted\n                this.#actionInstances.delete(id);\n            }\n            else {\n                // TODO module-lib - deep freeze the action to avoid mutation?\n                this.#actionInstances.set(id, action);\n                // Inserted or updated\n                const definition = this.#actionDefinitions.get(action.actionId);\n                if (definition?.subscribe) {\n                    const context = {\n                        parseVariablesInString: async (text) => {\n                            const res = await this.#parseVariablesInString({\n                                text: text,\n                                controlId: action.controlId,\n                                actionInstanceId: action.id,\n                                feedbackInstanceId: undefined,\n                            });\n                            return res.text;\n                        },\n                    };\n                    Promise.resolve(definition.subscribe(convertActionInstanceToEvent(action), context)).catch((e) => {\n                        this.#log('error', `Action subscribe failed: ${JSON.stringify(action)} - ${e?.message ?? e} ${e?.stack}`);\n                    });\n                }\n            }\n        }\n    }\n    async handleLearnAction(msg) {\n        const definition = this.#actionDefinitions.get(msg.action.actionId);\n        if (definition && definition.learn) {\n            const context = {\n                parseVariablesInString: async (text) => {\n                    const res = await this.#parseVariablesInString({\n                        text: text,\n                        controlId: msg.action.controlId,\n                        actionInstanceId: msg.action.id,\n                        feedbackInstanceId: undefined,\n                    });\n                    return res.text;\n                },\n            };\n            const newOptions = await definition.learn({\n                id: msg.action.id,\n                actionId: msg.action.actionId,\n                controlId: msg.action.controlId,\n                options: msg.action.options,\n                surfaceId: undefined,\n                _deviceId: undefined,\n                _page: msg.action.page,\n                _bank: msg.action.bank,\n            }, context);\n            return {\n                options: newOptions,\n            };\n        }\n        else {\n            // Not supported\n            return {\n                options: undefined,\n            };\n        }\n    }\n    setActionDefinitions(actions) {\n        const hostActions = [];\n        this.#actionDefinitions.clear();\n        for (const [actionId, action] of Object.entries(actions)) {\n            if (action) {\n                hostActions.push({\n                    id: actionId,\n                    name: action.name,\n                    description: action.description,\n                    options: (0, base_1.serializeIsVisibleFn)(action.options),\n                    hasLearn: !!action.learn,\n                });\n                // Remember the definition locally\n                this.#actionDefinitions.set(actionId, action);\n            }\n        }\n        this.#setActionDefinitions({ actions: hostActions });\n    }\n    /** @deprecated */\n    _getAllActions() {\n        return Array.from(this.#actionInstances.values()).map((act) => ({\n            id: act.id,\n            actionId: act.actionId,\n            controlId: act.controlId,\n            options: act.options,\n        }));\n    }\n    subscribeActions(actionIds) {\n        let actions = Array.from(this.#actionInstances.values());\n        const actionIdSet = new Set(actionIds);\n        if (actionIdSet.size)\n            actions = actions.filter((fb) => actionIdSet.has(fb.actionId));\n        for (const act of actions) {\n            const def = this.#actionDefinitions.get(act.actionId);\n            if (def?.subscribe) {\n                const context = {\n                    parseVariablesInString: async (text) => {\n                        const res = await this.#parseVariablesInString({\n                            text: text,\n                            controlId: act.controlId,\n                            actionInstanceId: act.id,\n                            feedbackInstanceId: undefined,\n                        });\n                        return res.text;\n                    },\n                };\n                Promise.resolve(def.subscribe(convertActionInstanceToEvent(act), context)).catch((e) => {\n                    this.#log('error', `Action subscribe failed: ${JSON.stringify(act)} - ${e?.message ?? e} ${e?.stack}`);\n                });\n            }\n        }\n    }\n    unsubscribeActions(actionIds) {\n        let actions = Array.from(this.#actionInstances.values());\n        const actionIdSet = new Set(actionIds);\n        if (actionIdSet.size)\n            actions = actions.filter((fb) => actionIdSet.has(fb.actionId));\n        for (const act of actions) {\n            const def = this.#actionDefinitions.get(act.actionId);\n            if (def && def.unsubscribe) {\n                const context = {\n                    parseVariablesInString: async (text) => {\n                        const res = await this.#parseVariablesInString({\n                            text: text,\n                            controlId: act.controlId,\n                            actionInstanceId: act.id,\n                            feedbackInstanceId: undefined,\n                        });\n                        return res.text;\n                    },\n                };\n                Promise.resolve(def.unsubscribe(convertActionInstanceToEvent(act), context)).catch((e) => {\n                    this.#log('error', `Action unsubscribe failed: ${JSON.stringify(act)} - ${e?.message ?? e} ${e?.stack}`);\n                });\n            }\n        }\n    }\n}\nexports.ActionManager = ActionManager;\n//# sourceMappingURL=actions.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/internal/actions.js?")},"./node_modules/@companion-module/base/dist/internal/base.js":(__unused_webpack_module,exports)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isInstanceBaseProps = exports.serializeIsVisibleFn = void 0;\nfunction serializeIsVisibleFn(options) {\n    return (options ?? []).map((option) => {\n        if ('isVisible' in option) {\n            if (typeof option.isVisible === 'function') {\n                return {\n                    ...option,\n                    isVisibleFn: option.isVisible.toString(),\n                    isVisible: undefined,\n                };\n            }\n        }\n        // ignore any existing `isVisibleFn` to avoid code injection\n        return {\n            ...option,\n            isVisibleFn: undefined,\n        };\n    });\n}\nexports.serializeIsVisibleFn = serializeIsVisibleFn;\nfunction isInstanceBaseProps(obj) {\n    const obj2 = obj;\n    return typeof obj2 === 'object' && typeof obj2.id === 'string' && obj2._isInstanceBaseProps === true;\n}\nexports.isInstanceBaseProps = isInstanceBaseProps;\n//# sourceMappingURL=base.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/internal/base.js?")},"./node_modules/@companion-module/base/dist/internal/feedback.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FeedbackManager = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nconst base_1 = __webpack_require__(/*! ./base */ \"./node_modules/@companion-module/base/dist/internal/base.js\");\nconst debounce_fn_1 = tslib_1.__importDefault(__webpack_require__(/*! ../../lib/debounce-fn */ \"./node_modules/@companion-module/base/lib/debounce-fn/index.js\"));\nfunction convertFeedbackInstanceToEvent(type, feedback) {\n    return {\n        type: type,\n        id: feedback.id,\n        feedbackId: feedback.feedbackId,\n        controlId: feedback.controlId,\n        options: feedback.options,\n    };\n}\nclass FeedbackManager {\n    #parseVariablesInString;\n    #updateFeedbackValues;\n    #setFeedbackDefinitions;\n    #log;\n    #feedbackDefinitions = new Map();\n    #feedbackInstances = new Map();\n    // Feedback values waiting to be sent\n    #pendingFeedbackValues = new Map();\n    // Feedbacks currently being checked\n    #feedbacksBeingChecked = new Map();\n    // while in a context which provides an alternate parseVariablesInString, we should log when the original is called\n    #parseVariablesContext;\n    get parseVariablesContext() {\n        return this.#parseVariablesContext;\n    }\n    constructor(parseVariablesInString, updateFeedbackValues, setFeedbackDefinitions, log) {\n        this.#parseVariablesInString = parseVariablesInString;\n        this.#updateFeedbackValues = updateFeedbackValues;\n        this.#setFeedbackDefinitions = setFeedbackDefinitions;\n        this.#log = log;\n    }\n    getDefinitionIds() {\n        return Array.from(this.#feedbackDefinitions.keys());\n    }\n    getInstanceIds() {\n        return Array.from(this.#feedbackInstances.keys());\n    }\n    handleUpdateFeedbacks(feedbacks) {\n        for (const [id, feedback] of Object.entries(feedbacks)) {\n            const existing = this.#feedbackInstances.get(id);\n            if (existing) {\n                // Call unsubscribe\n                const definition = this.#feedbackDefinitions.get(existing.feedbackId);\n                if (definition?.unsubscribe) {\n                    const context = {\n                        parseVariablesInString: async (text) => {\n                            const res = await this.#parseVariablesInString({\n                                text: text,\n                                controlId: existing.controlId,\n                                actionInstanceId: undefined,\n                                feedbackInstanceId: existing.id,\n                            });\n                            return res.text;\n                        },\n                    };\n                    Promise.resolve(definition.unsubscribe(convertFeedbackInstanceToEvent(definition.type, existing), context)).catch((e) => {\n                        this.#log('error', `Feedback unsubscribe failed: ${JSON.stringify(existing)} - ${e?.message ?? e} ${e?.stack}`);\n                    });\n                }\n            }\n            if (!feedback || feedback.disabled) {\n                // Deleted\n                this.#feedbackInstances.delete(id);\n            }\n            else {\n                // TODO module-lib - deep freeze the feedback to avoid mutation?\n                this.#feedbackInstances.set(id, {\n                    ...feedback,\n                    referencedVariables: null,\n                });\n                // Inserted or updated\n                const definition = this.#feedbackDefinitions.get(feedback.feedbackId);\n                if (definition?.subscribe) {\n                    const context = {\n                        parseVariablesInString: async (text) => {\n                            const res = await this.#parseVariablesInString({\n                                text: text,\n                                controlId: feedback.controlId,\n                                actionInstanceId: undefined,\n                                feedbackInstanceId: feedback.id,\n                            });\n                            return res.text;\n                        },\n                    };\n                    Promise.resolve(definition.subscribe(convertFeedbackInstanceToEvent(definition.type, feedback), context)).catch((e) => {\n                        this.#log('error', `Feedback subscribe failed: ${JSON.stringify(feedback)} - ${e?.message ?? e} ${e?.stack}`);\n                    });\n                }\n                // update the feedback value\n                this.#triggerCheckFeedback(id);\n            }\n        }\n    }\n    async handleLearnFeedback(msg) {\n        const definition = this.#feedbackDefinitions.get(msg.feedback.feedbackId);\n        if (definition && definition.learn) {\n            const context = {\n                parseVariablesInString: async (text) => {\n                    const res = await this.#parseVariablesInString({\n                        text: text,\n                        controlId: msg.feedback.controlId,\n                        actionInstanceId: undefined,\n                        feedbackInstanceId: msg.feedback.id,\n                    });\n                    return res.text;\n                },\n            };\n            const newOptions = await definition.learn({\n                id: msg.feedback.id,\n                feedbackId: msg.feedback.feedbackId,\n                controlId: msg.feedback.controlId,\n                options: msg.feedback.options,\n                type: definition.type,\n            }, context);\n            return {\n                options: newOptions,\n            };\n        }\n        else {\n            // Not supported\n            return {\n                options: undefined,\n            };\n        }\n    }\n    handleVariablesChanged(msg) {\n        if (!msg.variablesIds.length)\n            return;\n        const changedFeedbackIds = new Set(msg.variablesIds);\n        // Any feedbacks being checked should be made aware\n        for (const feedbackStatus of this.#feedbacksBeingChecked.values()) {\n            for (const id of msg.variablesIds) {\n                feedbackStatus.changedVariables.add(id);\n            }\n        }\n        // Determine the feedbacks that need checking\n        const feedbackIds = new Set();\n        for (const feedback of this.#feedbackInstances.values()) {\n            // if feedback is currently being checked, it will be handled differently\n            if (this.#feedbacksBeingChecked.has(feedback.id))\n                continue;\n            if (feedback.referencedVariables) {\n                for (const id of feedback.referencedVariables) {\n                    if (changedFeedbackIds.has(id)) {\n                        feedbackIds.add(feedback.id);\n                        break;\n                    }\n                }\n            }\n        }\n        // Trigger all the feedbacks to be rechecked\n        for (const id of feedbackIds) {\n            setImmediate(() => {\n                this.#triggerCheckFeedback(id);\n            });\n        }\n    }\n    #triggerCheckFeedback(id) {\n        const existingRecheck = this.#feedbacksBeingChecked.get(id);\n        if (existingRecheck) {\n            // Already being checked\n            existingRecheck.needsRecheck = true;\n            return;\n        }\n        const feedback0 = this.#feedbackInstances.get(id);\n        if (!feedback0)\n            return;\n        const feedback = feedback0;\n        const feedbackCheckStatus = {\n            needsRecheck: false,\n            changedVariables: new Set(),\n        };\n        // mark it as being checked\n        this.#feedbacksBeingChecked.set(id, feedbackCheckStatus);\n        Promise.resolve()\n            .then(async () => {\n            const definition = this.#feedbackDefinitions.get(feedback.feedbackId);\n            let value;\n            const newReferencedVariables = new Set();\n            // Calculate the new value for the feedback\n            if (definition) {\n                // Set this while the promise starts executing\n                this.#parseVariablesContext = `Feedback ${feedback.feedbackId} (${id})`;\n                const context = {\n                    parseVariablesInString: async (text) => {\n                        const res = await this.#parseVariablesInString({\n                            text: text,\n                            controlId: feedback.controlId,\n                            actionInstanceId: undefined,\n                            feedbackInstanceId: id,\n                        });\n                        // Track which variables were referenced\n                        if (res.variableIds && res.variableIds.length) {\n                            for (const id of res.variableIds) {\n                                newReferencedVariables.add(id);\n                            }\n                        }\n                        return res.text;\n                    },\n                };\n                if (definition.type === 'boolean') {\n                    value = definition.callback({\n                        ...convertFeedbackInstanceToEvent('boolean', feedback),\n                        type: 'boolean',\n                        _rawBank: feedback.rawBank,\n                    }, context);\n                }\n                else {\n                    value = definition.callback({\n                        ...convertFeedbackInstanceToEvent('advanced', feedback),\n                        type: 'advanced',\n                        image: feedback.image,\n                        _page: feedback.page,\n                        _bank: feedback.bank,\n                        _rawBank: feedback.rawBank,\n                    }, context);\n                }\n                this.#parseVariablesContext = undefined;\n            }\n            // Await the value before looking at this.#pendingFeedbackValues, to avoid race conditions\n            const resolvedValue = await value;\n            this.#pendingFeedbackValues.set(id, {\n                id: id,\n                controlId: feedback.controlId,\n                value: resolvedValue,\n            });\n            this.#sendFeedbackValues();\n            feedback.referencedVariables = newReferencedVariables.size > 0 ? Array.from(newReferencedVariables) : null;\n        })\n            .catch((e) => {\n            console.error(`Feedback check failed: ${JSON.stringify(feedback)} - ${e?.message ?? e} ${e?.stack}`);\n        })\n            .finally(() => {\n            // ensure this.#parseVariablesContext is cleared\n            this.#parseVariablesContext = undefined;\n            // it is no longer being checked\n            this.#feedbacksBeingChecked.delete(id);\n            // Check if any variables changed that should cause an immediate recheck\n            let recheckForVariableChanged = false;\n            if (feedback.referencedVariables) {\n                for (const id of feedback.referencedVariables) {\n                    if (feedbackCheckStatus.changedVariables.has(id)) {\n                        recheckForVariableChanged = true;\n                        break;\n                    }\n                }\n            }\n            // If queued, trigger a check\n            if (recheckForVariableChanged || feedbackCheckStatus.needsRecheck) {\n                setImmediate(() => {\n                    this.#triggerCheckFeedback(id);\n                });\n            }\n        });\n    }\n    /**\n     * Send pending feedback values (from this.#pendingFeedbackValues) to companion, with a debounce\n     */\n    #sendFeedbackValues = (0, debounce_fn_1.default)(() => {\n        const newValues = this.#pendingFeedbackValues;\n        this.#pendingFeedbackValues = new Map();\n        // Send the new values back\n        if (newValues.size > 0) {\n            this.#updateFeedbackValues({\n                values: Array.from(newValues.values()),\n            });\n        }\n    }, {\n        wait: 5,\n        maxWait: 25,\n    });\n    setFeedbackDefinitions(feedbacks) {\n        const hostFeedbacks = [];\n        this.#feedbackDefinitions.clear();\n        for (const [feedbackId, feedback] of Object.entries(feedbacks)) {\n            if (feedback) {\n                hostFeedbacks.push({\n                    id: feedbackId,\n                    name: feedback.name,\n                    description: feedback.description,\n                    options: (0, base_1.serializeIsVisibleFn)(feedback.options),\n                    type: feedback.type,\n                    defaultStyle: 'defaultStyle' in feedback ? feedback.defaultStyle : undefined,\n                    hasLearn: !!feedback.learn,\n                });\n                // Remember the definition locally\n                this.#feedbackDefinitions.set(feedbackId, feedback);\n            }\n        }\n        this.#setFeedbackDefinitions({ feedbacks: hostFeedbacks });\n    }\n    checkFeedbacks(feedbackTypes) {\n        const types = new Set(feedbackTypes);\n        for (const [id, feedback] of this.#feedbackInstances.entries()) {\n            const definition = this.#feedbackDefinitions.get(feedback.feedbackId);\n            if (definition) {\n                if (types.size === 0 || types.has(feedback.feedbackId)) {\n                    // update the feedback value\n                    this.#triggerCheckFeedback(id);\n                }\n            }\n        }\n    }\n    checkFeedbacksById(feedbackIds) {\n        for (const id of feedbackIds) {\n            // update the feedback value\n            this.#triggerCheckFeedback(id);\n        }\n    }\n    /** @deprecated */\n    _getAllFeedbacks() {\n        return Array.from(this.#feedbackInstances.values()).map((fb) => ({\n            id: fb.id,\n            feedbackId: fb.feedbackId,\n            controlId: fb.controlId,\n            options: fb.options,\n        }));\n    }\n    subscribeFeedbacks(feedbackIds) {\n        let feedbacks = Array.from(this.#feedbackInstances.values());\n        const feedbackIdSet = new Set(feedbackIds);\n        if (feedbackIdSet.size)\n            feedbacks = feedbacks.filter((fb) => feedbackIdSet.has(fb.feedbackId));\n        for (const fb of feedbacks) {\n            const def = this.#feedbackDefinitions.get(fb.feedbackId);\n            if (def?.subscribe) {\n                const context = {\n                    parseVariablesInString: async (text) => {\n                        const res = await this.#parseVariablesInString({\n                            text: text,\n                            controlId: fb.controlId,\n                            actionInstanceId: undefined,\n                            feedbackInstanceId: fb.id,\n                        });\n                        return res.text;\n                    },\n                };\n                Promise.resolve(def.subscribe(convertFeedbackInstanceToEvent(def.type, fb), context)).catch((e) => {\n                    this.#log('error', `Feedback subscribe failed: ${JSON.stringify(fb)} - ${e?.message ?? e} ${e?.stack}`);\n                });\n            }\n        }\n    }\n    unsubscribeFeedbacks(feedbackIds) {\n        let feedbacks = Array.from(this.#feedbackInstances.values());\n        const feedbackIdSet = new Set(feedbackIds);\n        if (feedbackIdSet.size)\n            feedbacks = feedbacks.filter((fb) => feedbackIdSet.has(fb.feedbackId));\n        for (const fb of feedbacks) {\n            const def = this.#feedbackDefinitions.get(fb.feedbackId);\n            if (def && def.unsubscribe) {\n                const context = {\n                    parseVariablesInString: async (text) => {\n                        const res = await this.#parseVariablesInString({\n                            text: text,\n                            controlId: fb.controlId,\n                            actionInstanceId: undefined,\n                            feedbackInstanceId: fb.id,\n                        });\n                        return res.text;\n                    },\n                };\n                Promise.resolve(def.unsubscribe(convertFeedbackInstanceToEvent(def.type, fb), context)).catch((e) => {\n                    this.#log('error', `Feedback unsubscribe failed: ${JSON.stringify(fb)} - ${e?.message ?? e} ${e?.stack}`);\n                });\n            }\n        }\n    }\n}\nexports.FeedbackManager = FeedbackManager;\n//# sourceMappingURL=feedback.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/internal/feedback.js?")},"./node_modules/@companion-module/base/dist/internal/upgrade.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.runThroughUpgradeScripts = void 0;\nconst util_1 = __webpack_require__(/*! ../util */ \"./node_modules/@companion-module/base/dist/util.js\");\nfunction clone(val) {\n    return JSON.parse(JSON.stringify(val));\n}\n/**\n * Run through the upgrade scripts for the given data\n * Note: this updates the inputs in place, but the result needs to be sent back to companion\n * @param allActions Actions that may need upgrading\n * @param allFeedbacks Feedbacks that may need upgrading\n * @param defaultUpgradeIndex The lastUpgradeIndex of the connection, if known\n * @param upgradeScripts The scripts that may be run\n * @param config The current config of the module\n * @param skipConfigUpgrade Whether to skip upgrading the config\n * @returns The upgraded data that needs persisting\n */\nfunction runThroughUpgradeScripts(allActions, allFeedbacks, defaultUpgradeIndex, upgradeScripts, config, skipConfigUpgrade) {\n    // First we group all the actions and feedbacks by the version they currently are.\n    const pendingUpgradesGrouped = new Map();\n    const getPendingUpgradeGroup = (i) => {\n        let v = pendingUpgradesGrouped.get(i);\n        if (!v) {\n            v = { actions: [], feedbacks: [], config: false };\n            pendingUpgradesGrouped.set(i, v);\n        }\n        return v;\n    };\n    for (const action of Object.values(allActions)) {\n        const upgradeIndex = action?.upgradeIndex ?? defaultUpgradeIndex;\n        if (action && typeof upgradeIndex === 'number') {\n            const pending = getPendingUpgradeGroup(upgradeIndex);\n            pending.actions.push(action.id);\n        }\n    }\n    for (const feedback of Object.values(allFeedbacks)) {\n        const upgradeIndex = feedback?.upgradeIndex ?? defaultUpgradeIndex;\n        if (feedback && typeof upgradeIndex === 'number') {\n            const pending = getPendingUpgradeGroup(upgradeIndex);\n            pending.feedbacks.push(feedback.id);\n        }\n    }\n    if (!skipConfigUpgrade) {\n        // If there is config we still need to upgrade that\n        for (let i = defaultUpgradeIndex ?? -1; i < upgradeScripts.length; i++) {\n            // ensure the group is registered\n            getPendingUpgradeGroup(i).config = true;\n        }\n    }\n    const updatedFeedbacks = {};\n    const updatedActions = {};\n    let updatedConfig;\n    if (pendingUpgradesGrouped.size > 0) {\n        // Figure out which script to run first. Note: we track the last index we ran, so it is offset by one\n        const pendingUpgradeGroups = Array.from(pendingUpgradesGrouped.keys()).sort();\n        const firstUpgradeGroup = Math.min(...pendingUpgradeGroups, defaultUpgradeIndex ?? -1) + 1;\n        // Start building arrays of the ids which we are upgrading as we go\n        const actionsIdsToUpgrade = [];\n        const feedbackIdsToUpgrade = [];\n        // Perform the upgrades. We start on the first batch/instance, and work our way up to the last\n        const targetCount = upgradeScripts.length;\n        for (let i = firstUpgradeGroup; i < targetCount; i++) {\n            const group = pendingUpgradesGrouped.get(i - 1);\n            if (group) {\n                // Update the list of objects that need upgrading\n                actionsIdsToUpgrade.push(...group.actions);\n                feedbackIdsToUpgrade.push(...group.feedbacks);\n            }\n            // Only upgrade the config, if we are past the last version we had for it\n            const upgradeConfig = !!group?.config;\n            // Ensure there is something to upgrade\n            if (!upgradeConfig && actionsIdsToUpgrade.length === 0 && feedbackIdsToUpgrade.length === 0)\n                continue;\n            const inputConfig = updatedConfig ?? config;\n            // We have an upgrade script that can be run\n            const fcn = upgradeScripts[i];\n            const res = fcn({\n                // Pass a clone to avoid mutations\n                currentConfig: clone(inputConfig),\n            }, {\n                config: upgradeConfig ? inputConfig : null,\n                // Only pass the actions & feedbacks which need upgrading from this version\n                actions: actionsIdsToUpgrade\n                    .map((id) => {\n                    const inst = allActions[id];\n                    if (inst) {\n                        return (0, util_1.literal)({\n                            id: inst.id,\n                            controlId: inst.controlId,\n                            actionId: inst.actionId,\n                            options: inst.options !== undefined ? clone(inst.options) : {},\n                        });\n                    }\n                })\n                    .filter((v) => !!v),\n                feedbacks: feedbackIdsToUpgrade\n                    .map((id) => {\n                    const inst = allFeedbacks[id];\n                    if (inst) {\n                        return (0, util_1.literal)({\n                            id: inst.id,\n                            controlId: inst.controlId,\n                            feedbackId: inst.feedbackId,\n                            options: inst.options !== undefined ? clone(inst.options) : {},\n                            // TODO - style?\n                        });\n                    }\n                })\n                    .filter((v) => !!v),\n            });\n            // Apply changes\n            if (upgradeConfig && res.updatedConfig)\n                updatedConfig = res.updatedConfig;\n            for (const action of res.updatedActions) {\n                if (action) {\n                    const instance = allActions[action.id];\n                    if (instance) {\n                        instance.actionId = action.actionId;\n                        instance.options = action.options;\n                        // Mark it as changed\n                        updatedActions[action.id] = instance;\n                    }\n                }\n            }\n            for (const feedback of res.updatedFeedbacks) {\n                if (feedback) {\n                    const instance = allFeedbacks[feedback.id];\n                    if (instance) {\n                        instance.feedbackId = feedback.feedbackId;\n                        instance.options = feedback.options;\n                        // Mark it as changed\n                        updatedFeedbacks[feedback.id] = {\n                            ...instance,\n                            style: updatedFeedbacks[feedback.id]?.style ?? feedback.style,\n                        };\n                    }\n                }\n            }\n        }\n        // Make sure that everything with a upgradeIndex set is sent back\n        for (const [id, action] of Object.entries(allActions)) {\n            if (!updatedActions[id] && typeof action?.upgradeIndex === 'number') {\n                // Send it back to acknowledge that it has been 'upgraded'\n                updatedActions[id] = action;\n            }\n        }\n        for (const [id, feedback] of Object.entries(allFeedbacks)) {\n            if (!updatedFeedbacks[id] && typeof feedback?.upgradeIndex === 'number') {\n                // Send it back to acknowledge that it has been 'upgraded'\n                updatedFeedbacks[id] = feedback;\n            }\n        }\n    }\n    return {\n        updatedActions,\n        updatedFeedbacks,\n        updatedConfig,\n    };\n}\nexports.runThroughUpgradeScripts = runThroughUpgradeScripts;\n//# sourceMappingURL=upgrade.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/internal/upgrade.js?")},"./node_modules/@companion-module/base/dist/manifest.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.validateManifest = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");\n// @ts-expect-error no typings\nconst validate_manifest_1 = tslib_1.__importDefault(__webpack_require__(/*! ../generated/validate_manifest */ "./node_modules/@companion-module/base/generated/validate_manifest.js"));\n/** Validate that a manifest looks correctly populated */\nfunction validateManifest(manifest) {\n    if (!(0, validate_manifest_1.default)(manifest)) {\n        const errors = validate_manifest_1.default.errors;\n        if (!errors)\n            throw new Error(`Manifest failed validation with unknown reason`);\n        throw new Error(`Manifest validation failed: ${JSON.stringify(errors)}`);\n    }\n}\nexports.validateManifest = validateManifest;\n//# sourceMappingURL=manifest.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/manifest.js?')},"./node_modules/@companion-module/base/dist/module-api/action.js":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n//# sourceMappingURL=action.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/module-api/action.js?')},"./node_modules/@companion-module/base/dist/module-api/base.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InstanceBase = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nconst util_1 = __webpack_require__(/*! ../util */ \"./node_modules/@companion-module/base/dist/util.js\");\nconst p_queue_1 = tslib_1.__importDefault(__webpack_require__(/*! p-queue */ \"./node_modules/p-queue/dist/index.js\"));\nconst base_1 = __webpack_require__(/*! ../internal/base */ \"./node_modules/@companion-module/base/dist/internal/base.js\");\nconst upgrade_1 = __webpack_require__(/*! ../internal/upgrade */ \"./node_modules/@companion-module/base/dist/internal/upgrade.js\");\nconst feedback_1 = __webpack_require__(/*! ../internal/feedback */ \"./node_modules/@companion-module/base/dist/internal/feedback.js\");\nconst ipc_wrapper_1 = __webpack_require__(/*! ../host-api/ipc-wrapper */ \"./node_modules/@companion-module/base/dist/host-api/ipc-wrapper.js\");\nconst actions_1 = __webpack_require__(/*! ../internal/actions */ \"./node_modules/@companion-module/base/dist/internal/actions.js\");\nclass InstanceBase {\n    #ipcWrapper;\n    #upgradeScripts;\n    id;\n    #lifecycleQueue = new p_queue_1.default({ concurrency: 1 });\n    #initialized = false;\n    #recordingActions = false;\n    #lastConfig = {};\n    #actionManager;\n    #feedbackManager;\n    #variableDefinitions = new Map();\n    #variableValues = new Map();\n    #options;\n    #label;\n    get instanceOptions() {\n        return this.#options;\n    }\n    /**\n     * The user chosen name for this instance.\n     * This can be changed just before `configUpdated` is called\n     */\n    get label() {\n        return this.#label;\n    }\n    /**\n     * Create an instance of the module\n     */\n    constructor(internal) {\n        if (!(0, base_1.isInstanceBaseProps)(internal) || !internal._isInstanceBaseProps)\n            throw new Error(`Module instance is being constructed incorrectly. Make sure you aren't trying to do this manually`);\n        this.#options = {\n            disableVariableValidation: false,\n        };\n        this.#ipcWrapper = new ipc_wrapper_1.IpcWrapper({\n            init: this._handleInit.bind(this),\n            destroy: this._handleDestroy.bind(this),\n            updateConfigAndLabel: this._handleConfigUpdateAndLabel.bind(this),\n            updateConfig: async () => undefined,\n            executeAction: this._handleExecuteAction.bind(this),\n            updateFeedbacks: this._handleUpdateFeedbacks.bind(this),\n            updateActions: this._handleUpdateActions.bind(this),\n            getConfigFields: this._handleGetConfigFields.bind(this),\n            handleHttpRequest: this._handleHttpRequest.bind(this),\n            learnAction: this._handleLearnAction.bind(this),\n            learnFeedback: this._handleLearnFeedback.bind(this),\n            startStopRecordActions: this._handleStartStopRecordActions.bind(this),\n            variablesChanged: this._handleVariablesChanged.bind(this),\n        }, (msg) => {\n            process.send(msg);\n        }, 5000);\n        process.on('message', (msg) => {\n            this.#ipcWrapper.receivedMessage(msg);\n        });\n        this.#actionManager = new actions_1.ActionManager(async (msg) => this.#ipcWrapper.sendWithCb('parseVariablesInString', msg), (msg) => this.#ipcWrapper.sendWithNoCb('setActionDefinitions', msg), this.log.bind(this));\n        this.#feedbackManager = new feedback_1.FeedbackManager(async (msg) => this.#ipcWrapper.sendWithCb('parseVariablesInString', msg), (msg) => this.#ipcWrapper.sendWithNoCb('updateFeedbackValues', msg), (msg) => this.#ipcWrapper.sendWithNoCb('setFeedbackDefinitions', msg), this.log.bind(this));\n        this.#upgradeScripts = internal.upgradeScripts;\n        this.id = internal.id;\n        this.#label = internal.id; // Temporary\n        this.log('debug', 'Initializing');\n    }\n    async _handleInit(msg) {\n        return this.#lifecycleQueue.add(async () => {\n            if (this.#initialized)\n                throw new Error('Already initialized');\n            const actions = msg.actions;\n            const feedbacks = msg.feedbacks;\n            this.#lastConfig = msg.config;\n            this.#label = msg.label;\n            // Create initial config object\n            if (msg.isFirstInit) {\n                const newConfig = {};\n                const fields = this.getConfigFields();\n                for (const field of fields) {\n                    if ('default' in field) {\n                        newConfig[field.id] = field.default;\n                    }\n                }\n                this.#lastConfig = newConfig;\n                this.saveConfig(this.#lastConfig);\n                // this is new, so there is no point attempting to run any upgrade scripts\n                msg.lastUpgradeIndex = this.#upgradeScripts.length - 1;\n            }\n            /**\n             * Performing upgrades during init requires a fair chunk of work.\n             * Some actions/feedbacks will be using the upgradeIndex of the instance, but some may have their own upgradeIndex on themselves if they are from an import.\n             */\n            const { updatedActions, updatedFeedbacks, updatedConfig } = (0, upgrade_1.runThroughUpgradeScripts)(actions, feedbacks, msg.lastUpgradeIndex, this.#upgradeScripts, this.#lastConfig, false);\n            this.#lastConfig = updatedConfig ?? this.#lastConfig;\n            // Send the upgraded data back to companion now. Just so that if the init crashes, this doesnt have to be repeated\n            const pSendUpgrade = this.#ipcWrapper.sendWithCb('upgradedItems', {\n                updatedActions,\n                updatedFeedbacks,\n            });\n            // Now we can initialise the module\n            try {\n                await this.init(this.#lastConfig, !!msg.isFirstInit);\n                this.#initialized = true;\n            }\n            catch (e) {\n                console.trace(`Init failed: ${e}`);\n                throw e;\n            }\n            finally {\n                // Only now do we need to await the upgrade\n                await pSendUpgrade;\n            }\n            setImmediate(() => {\n                // Subscribe all of the actions and feedbacks\n                this._handleUpdateActions({ actions }, true).catch((e) => {\n                    this.log('error', `Receive actions failed: ${e}`);\n                });\n                this._handleUpdateFeedbacks({ feedbacks }, true).catch((e) => {\n                    this.log('error', `Receive feedbacks failed: ${e}`);\n                });\n            });\n            return {\n                hasHttpHandler: typeof this.handleHttpRequest === 'function',\n                hasRecordActionsHandler: typeof this.handleStartStopRecordActions == 'function',\n                newUpgradeIndex: this.#upgradeScripts.length - 1,\n                updatedConfig: this.#lastConfig,\n            };\n        });\n    }\n    async _handleDestroy() {\n        await this.#lifecycleQueue.add(async () => {\n            if (!this.#initialized)\n                throw new Error('Not initialized');\n            await this.destroy();\n            this.#initialized = false;\n        });\n    }\n    async _handleConfigUpdateAndLabel(msg) {\n        await this.#lifecycleQueue.add(async () => {\n            if (!this.#initialized)\n                throw new Error('Not initialized');\n            this.#label = msg.label;\n            this.#lastConfig = msg.config;\n            await this.configUpdated(this.#lastConfig);\n        });\n    }\n    async _handleExecuteAction(msg) {\n        return this.#actionManager.handleExecuteAction(msg);\n    }\n    async _handleUpdateFeedbacks(msg, skipUpgrades) {\n        // Run through upgrade scripts if needed\n        if (!skipUpgrades) {\n            const res = (0, upgrade_1.runThroughUpgradeScripts)({}, msg.feedbacks, null, this.#upgradeScripts, this.#lastConfig, true);\n            this.#ipcWrapper\n                .sendWithCb('upgradedItems', {\n                updatedActions: res.updatedActions,\n                updatedFeedbacks: res.updatedFeedbacks,\n            })\n                .catch((e) => {\n                this.log('error', `Failed to save upgraded feedbacks: ${e}`);\n            });\n        }\n        this.#feedbackManager.handleUpdateFeedbacks(msg.feedbacks);\n    }\n    async _handleUpdateActions(msg, skipUpgrades) {\n        // Run through upgrade scripts if needed\n        if (!skipUpgrades) {\n            const res = (0, upgrade_1.runThroughUpgradeScripts)(msg.actions, {}, null, this.#upgradeScripts, this.#lastConfig, true);\n            this.#ipcWrapper\n                .sendWithCb('upgradedItems', {\n                updatedActions: res.updatedActions,\n                updatedFeedbacks: res.updatedFeedbacks,\n            })\n                .catch((e) => {\n                this.log('error', `Failed to save upgraded actions: ${e}`);\n            });\n        }\n        this.#actionManager.handleUpdateActions(msg.actions);\n    }\n    async _handleGetConfigFields(_msg) {\n        return {\n            fields: (0, base_1.serializeIsVisibleFn)(this.getConfigFields()),\n        };\n    }\n    async _handleHttpRequest(msg) {\n        if (!this.handleHttpRequest)\n            throw new Error(`handleHttpRequest is not supported!`);\n        const res = await this.handleHttpRequest(msg.request);\n        return { response: res };\n    }\n    async _handleLearnAction(msg) {\n        return this.#actionManager.handleLearnAction(msg);\n    }\n    async _handleLearnFeedback(msg) {\n        return this.#feedbackManager.handleLearnFeedback(msg);\n    }\n    async _handleStartStopRecordActions(msg) {\n        if (!msg.recording) {\n            if (!this.#recordingActions) {\n                // Already stopped\n                return;\n            }\n        }\n        else {\n            if (this.#recordingActions) {\n                // Already running\n                return;\n            }\n        }\n        if (!this.handleStartStopRecordActions) {\n            this.#recordingActions = false;\n            throw new Error('Recording actions is not supported by this module!');\n        }\n        this.#recordingActions = msg.recording;\n        this.handleStartStopRecordActions(this.#recordingActions);\n    }\n    async _handleVariablesChanged(msg) {\n        this.#feedbackManager.handleVariablesChanged(msg);\n    }\n    /**\n     * Save an updated configuration object\n     * @param newConfig The new config object\n     */\n    saveConfig(newConfig) {\n        this.#lastConfig = newConfig;\n        this.#ipcWrapper.sendWithNoCb('saveConfig', { config: newConfig });\n    }\n    /**\n     * Set the action definitions for this instance\n     * @param actions The action definitions\n     */\n    setActionDefinitions(actions) {\n        this.#actionManager.setActionDefinitions(actions);\n    }\n    /**\n     * Set the feedback definitions for this instance\n     * @param feedbacks The feedback definitions\n     */\n    setFeedbackDefinitions(feedbacks) {\n        this.#feedbackManager.setFeedbackDefinitions(feedbacks);\n    }\n    /**\n     * Set the peset definitions for this instance\n     * @param presets The preset definitions\n     */\n    setPresetDefinitions(presets) {\n        const hostPresets = [];\n        for (const [id, preset] of Object.entries(presets)) {\n            if (preset) {\n                hostPresets.push({\n                    ...preset,\n                    id,\n                });\n            }\n        }\n        this.#ipcWrapper.sendWithNoCb('setPresetDefinitions', { presets: hostPresets });\n    }\n    /**\n     * Set the variable definitions for this instance\n     * @param variables The variable definitions\n     */\n    setVariableDefinitions(variables) {\n        const hostVariables = [];\n        this.#variableDefinitions.clear();\n        for (const variable of variables) {\n            hostVariables.push({\n                id: variable.variableId,\n                name: variable.name,\n            });\n            // Remember the definition locally\n            this.#variableDefinitions.set(variable.variableId, variable);\n            if (!this.#variableValues.has(variable.variableId)) {\n                // Give us a local cached value of something\n                this.#variableValues.set(variable.variableId, '');\n            }\n        }\n        if (!this.#options.disableVariableValidation) {\n            const validIds = new Set(this.#variableDefinitions.keys());\n            for (const id of this.#variableValues.keys()) {\n                if (!validIds.has(id)) {\n                    // Delete any local cached value\n                    this.#variableValues.delete(id);\n                }\n            }\n        }\n        this.#ipcWrapper.sendWithNoCb('setVariableDefinitions', { variables: hostVariables });\n    }\n    /**\n     * Set the values of some variables\n     * @param values The new values for the variables\n     */\n    setVariableValues(values) {\n        const hostValues = [];\n        for (const [variableId, value] of Object.entries(values)) {\n            if (this.#options.disableVariableValidation) {\n                // update the cached value\n                if (value === undefined) {\n                    this.#variableValues.delete(variableId);\n                }\n                else {\n                    this.#variableValues.set(variableId, value);\n                }\n                hostValues.push({\n                    id: variableId,\n                    value: value,\n                });\n            }\n            else if (this.#variableDefinitions.has(variableId)) {\n                // update the cached value\n                this.#variableValues.set(variableId, value ?? '');\n                hostValues.push({\n                    id: variableId,\n                    value: value ?? '',\n                });\n            }\n            else {\n                // tell companion to delete the value\n                hostValues.push({\n                    id: variableId,\n                    value: undefined,\n                });\n            }\n        }\n        this.#ipcWrapper.sendWithNoCb('setVariableValues', { newValues: hostValues });\n    }\n    /**\n     * Get the last set value of a variable from this connection\n     * @param variableId id of the variable\n     * @returns The value\n     */\n    getVariableValue(variableId) {\n        return this.#variableValues.get(variableId);\n    }\n    /**\n     * Parse and replace all the variables in a string\n     * Note: You must not use this for feedbacks, as your feedback will not update when the variable changes.\n     * There is an alternate version of this supplied to each of the action/feedback callbacks that tracks\n     * usages properly and will retrigger the feedback when the variables change.\n     * @param text The text to parse\n     * @returns The string with variables replaced with their values\n     */\n    async parseVariablesInString(text) {\n        const currentContext = this.#feedbackManager.parseVariablesContext;\n        if (currentContext) {\n            this.log('debug', `parseVariablesInString called while in: ${currentContext}. You should use the parseVariablesInString provided to the callback instead`);\n        }\n        const res = await this.#ipcWrapper.sendWithCb('parseVariablesInString', {\n            text: text,\n            controlId: undefined,\n            actionInstanceId: undefined,\n            feedbackInstanceId: undefined,\n        });\n        return res.text;\n    }\n    /**\n     * Request all feedbacks of the specified types to be checked for changes\n     * @param feedbackTypes The feedback types to check\n     */\n    checkFeedbacks(...feedbackTypes) {\n        this.#feedbackManager.checkFeedbacks(feedbackTypes);\n    }\n    /**\n     * Request the specified feedback instances to be checked for changes\n     * @param feedbackIds The ids of the feedback instances to check\n     */\n    checkFeedbacksById(...feedbackIds) {\n        this.#feedbackManager.checkFeedbacksById(feedbackIds);\n    }\n    /** @deprecated */\n    _getAllActions() {\n        return this.#actionManager._getAllActions();\n    }\n    /**\n     * Call subscribe on all currently known placed actions.\n     * It can be useful to trigger this upon establishing a connection, to ensure all data is loaded.\n     * @param actionIds The actionIds to call subscribe for. If no values are provided, then all are called.\n     */\n    subscribeActions(...actionIds) {\n        this.#actionManager.subscribeActions(actionIds);\n    }\n    /**\n     * Call unsubscribe on all currently known placed actions.\n     * It can be useful to do some cleanup upon a connection closing.\n     * @param actionIds The actionIds to call subscribe for. If no values are provided, then all are called.\n     */\n    unsubscribeActions(...actionIds) {\n        this.#actionManager.unsubscribeActions(actionIds);\n    }\n    /** @deprecated */\n    _getAllFeedbacks() {\n        return this.#feedbackManager._getAllFeedbacks();\n    }\n    /**\n     * Call subscribe on all currently known placed feedbacks.\n     * It can be useful to trigger this upon establishing a connection, to ensure all data is loaded.\n     * @param feedbackIds The feedbackIds to call subscribe for. If no values are provided, then all are called.\n     */\n    subscribeFeedbacks(...feedbackIds) {\n        this.#feedbackManager.subscribeFeedbacks(feedbackIds);\n    }\n    /**\n     * Call unsubscribe on all currently known placed feedbacks.\n     * It can be useful to do some cleanup upon a connection closing.\n     * @param feedbackIds The feedbackIds to call subscribe for. If no values are provided, then all are called.\n     */\n    unsubscribeFeedbacks(...feedbackIds) {\n        this.#feedbackManager.unsubscribeFeedbacks(feedbackIds);\n    }\n    /**\n     * Add an action to the current recording session\n     * @param action The action to be added to the recording session\n     * @param uniquenessId A unique id for the action being recorded. This should be different for each action, but by passing the same as a previous call will replace the previous value.\n     */\n    recordAction(action, uniquenessId) {\n        if (!this.#recordingActions)\n            throw new Error('Not currently recording actions');\n        this.#ipcWrapper.sendWithNoCb('recordAction', {\n            uniquenessId: uniquenessId ?? null,\n            actionId: action.actionId,\n            options: action.options,\n        });\n    }\n    /**\n     * Experimental: This method may change without notice. Do not use!\n     * Set the value of a custom variable\n     * @param variableName\n     * @param value\n     * @returns Promise which resolves upon success, or rejects if the variable no longer exists\n     */\n    setCustomVariableValue(variableName, value) {\n        this.#ipcWrapper.sendWithNoCb('setCustomVariable', {\n            customVariableId: variableName,\n            value,\n        });\n    }\n    /**\n     * Send an osc message from the system osc sender\n     * @param host destination ip address\n     * @param port destination port number\n     * @param path message path\n     * @param args mesage arguments\n     */\n    oscSend(host, port, path, args) {\n        this.#ipcWrapper.sendWithNoCb('send-osc', (0, util_1.literal)({\n            host,\n            port,\n            path,\n            args,\n        }));\n    }\n    /**\n     * Update the status of this connection\n     * @param status The status level\n     * @param message Additional information about the status\n     *\n     * ### Example\n     * ```js\n     * this.updateStatus(InstanceStatus.Ok)\n     * ```\n     */\n    updateStatus(status, message) {\n        this.#ipcWrapper.sendWithNoCb('set-status', (0, util_1.literal)({\n            status,\n            message: message ?? null,\n        }));\n    }\n    /**\n     * Write a line to the log\n     * @param level The level of the message\n     * @param message The message text to write\n     */\n    log(level, message) {\n        this.#ipcWrapper.sendWithNoCb('log-message', (0, util_1.literal)({\n            level,\n            message,\n        }));\n    }\n}\nexports.InstanceBase = InstanceBase;\n//# sourceMappingURL=base.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/module-api/base.js?")},"./node_modules/@companion-module/base/dist/module-api/config.js":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n//# sourceMappingURL=config.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/module-api/config.js?')},"./node_modules/@companion-module/base/dist/module-api/enums.js":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Regex = exports.InstanceStatus = void 0;\n/**\n * All the possible status levels that an instance can use.\n * Note: When adding more, companion needs to be updated to know how they should be displayed\n */\nvar InstanceStatus;\n(function (InstanceStatus) {\n    InstanceStatus["Ok"] = "ok";\n    InstanceStatus["Connecting"] = "connecting";\n    InstanceStatus["Disconnected"] = "disconnected";\n    InstanceStatus["ConnectionFailure"] = "connection_failure";\n    InstanceStatus["BadConfig"] = "bad_config";\n    InstanceStatus["UnknownError"] = "unknown_error";\n    InstanceStatus["UnknownWarning"] = "unknown_warning";\n})(InstanceStatus = exports.InstanceStatus || (exports.InstanceStatus = {}));\n// eslint-disable-next-line @typescript-eslint/no-namespace\nvar Regex;\n(function (Regex) {\n    // TODO - are all of these needed?\n    Regex.IP = \'/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/\';\n    Regex.HOSTNAME = \'/^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])\\\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9])$/\';\n    Regex.BOOLEAN = \'/^(true|false|0|1)$/i\';\n    Regex.PORT = \'/^([1-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-8][0-9]{3}|9[0-8][0-9]{2}|99[0-8][0-9]|999[0-9]|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-4])$/\';\n    Regex.PERCENT = \'/^(100|[0-9]|[0-9][0-9])$/\';\n    Regex.FLOAT = \'/^([0-9]*\\\\.)?[0-9]+$/\';\n    Regex.SIGNED_FLOAT = \'/^[+-]?([0-9]*\\\\.)?[0-9]+$/\';\n    Regex.FLOAT_OR_INT = \'/^([0-9]+)(\\\\.[0-9]+)?$/\';\n    Regex.NUMBER = \'/^\\\\d+$/\';\n    Regex.SIGNED_NUMBER = \'/^[+-]?\\\\d+$/\';\n    Regex.SOMETHING = \'/^.+$/\';\n    Regex.TIMECODE = \'/^(0*[0-9]|1[0-9]|2[0-4]):(0*[0-9]|[1-5][0-9]|60):(0*[0-9]|[1-5][0-9]|60):(0*[0-9]|[12][0-9]|30)$/\';\n})(Regex = exports.Regex || (exports.Regex = {}));\n//# sourceMappingURL=enums.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/module-api/enums.js?')},"./node_modules/@companion-module/base/dist/module-api/feedback.js":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n//# sourceMappingURL=feedback.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/module-api/feedback.js?')},"./node_modules/@companion-module/base/dist/module-api/http.js":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n//# sourceMappingURL=http.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/module-api/http.js?')},"./node_modules/@companion-module/base/dist/module-api/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");\ntslib_1.__exportStar(__webpack_require__(/*! ./action */ "./node_modules/@companion-module/base/dist/module-api/action.js"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./base */ "./node_modules/@companion-module/base/dist/module-api/base.js"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./config */ "./node_modules/@companion-module/base/dist/module-api/config.js"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./enums */ "./node_modules/@companion-module/base/dist/module-api/enums.js"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./feedback */ "./node_modules/@companion-module/base/dist/module-api/feedback.js"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./http */ "./node_modules/@companion-module/base/dist/module-api/http.js"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./input */ "./node_modules/@companion-module/base/dist/module-api/input.js"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./preset */ "./node_modules/@companion-module/base/dist/module-api/preset.js"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./style */ "./node_modules/@companion-module/base/dist/module-api/style.js"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./upgrade */ "./node_modules/@companion-module/base/dist/module-api/upgrade.js"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./variable */ "./node_modules/@companion-module/base/dist/module-api/variable.js"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/module-api/index.js?')},"./node_modules/@companion-module/base/dist/module-api/input.js":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n//# sourceMappingURL=input.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/module-api/input.js?')},"./node_modules/@companion-module/base/dist/module-api/preset.js":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n//# sourceMappingURL=preset.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/module-api/preset.js?')},"./node_modules/@companion-module/base/dist/module-api/style.js":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n//# sourceMappingURL=style.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/module-api/style.js?')},"./node_modules/@companion-module/base/dist/module-api/upgrade.js":(__unused_webpack_module,exports)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CreateConvertToBooleanFeedbackUpgradeScript = exports.EmptyUpgradeScript = void 0;\n/**\n * A helper upgrade script, which does nothing.\n * Useful to replace a script which is no longer needed\n */\nconst EmptyUpgradeScript = () => ({\n    updatedConfig: null,\n    updatedActions: [],\n    updatedFeedbacks: [],\n});\nexports.EmptyUpgradeScript = EmptyUpgradeScript;\n/**\n * A helper script to automate the bulk of the process to upgrade feedbacks from 'advanced' to 'boolean'.\n * There are some built-in rules for properties names based on the most common cases.\n * @param upgradeMap The feedbacks to upgrade and the properties to convert\n */\nfunction CreateConvertToBooleanFeedbackUpgradeScript(upgradeMap) {\n    // Warning: the unused parameters will often be null\n    return (_context, props) => {\n        const changedFeedbacks = [];\n        for (const feedback of props.feedbacks) {\n            let upgrade_rules = upgradeMap[feedback.feedbackId];\n            if (upgrade_rules === true) {\n                // These are some automated built in rules. They can help make it easier to migrate\n                upgrade_rules = {\n                    bg: 'bgcolor',\n                    bgcolor: 'bgcolor',\n                    fg: 'color',\n                    color: 'color',\n                    png64: 'png64',\n                    png: 'png64',\n                };\n            }\n            if (upgrade_rules) {\n                if (!feedback.style)\n                    feedback.style = {};\n                for (const [option_key, style_key] of Object.entries(upgrade_rules)) {\n                    if (feedback.options[option_key] !== undefined) {\n                        feedback.style[style_key] = feedback.options[option_key];\n                        delete feedback.options[option_key];\n                        changedFeedbacks.push(feedback);\n                    }\n                }\n            }\n        }\n        return {\n            updatedConfig: null,\n            updatedActions: [],\n            updatedFeedbacks: changedFeedbacks,\n        };\n    };\n}\nexports.CreateConvertToBooleanFeedbackUpgradeScript = CreateConvertToBooleanFeedbackUpgradeScript;\n//# sourceMappingURL=upgrade.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/module-api/upgrade.js?")},"./node_modules/@companion-module/base/dist/module-api/variable.js":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n//# sourceMappingURL=variable.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/module-api/variable.js?')},"./node_modules/@companion-module/base/dist/util.js":(__unused_webpack_module,exports)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.splitRgb = exports.combineRgb = exports.assertNever = exports.literal = void 0;\n/**\n * Assert a certain type for a literal.\n * This can be used to correctly type parts of an object in TypeScript.\n *\n * ### Example\n *  ```ts\n * {\n *  [ActionId.MyAction]: literal<CompanionActionDefinition>({\n *   name: 'My Action',\n *   // ...\n *  })\n * }\n * ```\n *\n * instead of this\n * ```ts\n * {\n *  [ActionId.MyAction]: {\n *   name: 'My Action',\n *   // ...\n *  }\n * }\n * ```\n */\nfunction literal(v) {\n    return v;\n}\nexports.literal = literal;\n/** Type assert that a value is never */\nfunction assertNever(_val) {\n    // Nothing to do\n}\nexports.assertNever = assertNever;\n/**\n * Combine separate RGB component to one single value to be used in feedback styles\n *\n * ### Example\n *\n * ```js\n * defaultStyle: {\n *  bgcolor: combineRgb(255, 0, 0),\n *  color: combineRgb(255, 255, 255),\n * }\n * ```\n */\nfunction combineRgb(r, g, b) {\n    return ((r & 0xff) << 16) | ((g & 0xff) << 8) | (b & 0xff);\n}\nexports.combineRgb = combineRgb;\n/**\n * Split a combined color value to separate RGB component values\n */\nfunction splitRgb(dec) {\n    return {\n        r: (dec & 0xff0000) >> 16,\n        g: (dec & 0x00ff00) >> 8,\n        b: dec & 0x0000ff,\n    };\n}\nexports.splitRgb = splitRgb;\n//# sourceMappingURL=util.js.map\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/dist/util.js?")},"./node_modules/@companion-module/base/generated/validate_manifest.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval('module.exports = validate20;module.exports["default"] = validate20;const schema22 = {"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"ModuleManifest","properties":{"id":{"type":"string","description":"Unique identifier for the module"},"name":{"type":"string","description":"Name of the module"},"shortname":{"type":"string"},"description":{"type":"string","description":"Description of the module "},"version":{"type":"string","description":"Current version of the module"},"license":{"type":"string","description":"SPDX identifier for license of the module"},"repository":{"type":"string","description":"URL to the source repository"},"bugs":{"type":"string","description":"URL to bug tracker"},"maintainers":{"type":"array","description":"List of active maintiners","uniqueItems":true,"items":{"type":"object","title":"ModuleManifestMaintainer","properties":{"name":{"type":"string"},"email":{"type":"string"},"github":{"type":"string"}},"required":["name"]}},"legacyIds":{"type":"array","description":"If the module had a different unique identifier previously, then specify it here","uniqueItems":true,"items":{"type":"string"}},"runtime":{"type":"object","title":"ModuleManifestRuntime","description":"Information on how to execute the module","properties":{"type":{"type":"string","description":"Type of the module. Must be: node18"},"api":{"type":"string","description":"Which host-api does it use. In the future alternate options will be allowed","enum":["nodejs-ipc"]},"apiVersion":{"type":"string","description":"The version of the host-api used"},"entrypoint":{"type":"string","description":"Entrypoint to pass to the runtime. eg index.js"}},"required":["type","api","apiVersion","entrypoint"]},"manufacturer":{"type":"string"},"products":{"type":"array","uniqueItems":true,"items":{"type":"string"}},"keywords":{"type":"array","uniqueItems":true,"items":{"type":"string"}}},"required":["id","name","shortname","description","version","license","repository","bugs","maintainers","legacyIds","runtime","manufacturer","products","keywords"]};const func0 = (__webpack_require__(/*! ajv/dist/runtime/equal */ "./node_modules/@companion-module/base/node_modules/ajv/dist/runtime/equal.js")["default"]);function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((((((((((((((data.id === undefined) && (missing0 = "id")) || ((data.name === undefined) && (missing0 = "name"))) || ((data.shortname === undefined) && (missing0 = "shortname"))) || ((data.description === undefined) && (missing0 = "description"))) || ((data.version === undefined) && (missing0 = "version"))) || ((data.license === undefined) && (missing0 = "license"))) || ((data.repository === undefined) && (missing0 = "repository"))) || ((data.bugs === undefined) && (missing0 = "bugs"))) || ((data.maintainers === undefined) && (missing0 = "maintainers"))) || ((data.legacyIds === undefined) && (missing0 = "legacyIds"))) || ((data.runtime === undefined) && (missing0 = "runtime"))) || ((data.manufacturer === undefined) && (missing0 = "manufacturer"))) || ((data.products === undefined) && (missing0 = "products"))) || ((data.keywords === undefined) && (missing0 = "keywords"))){validate20.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property \'"+missing0+"\'"}];return false;}else {if(data.id !== undefined){const _errs1 = errors;if(typeof data.id !== "string"){validate20.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs3 = errors;if(typeof data.name !== "string"){validate20.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.shortname !== undefined){const _errs5 = errors;if(typeof data.shortname !== "string"){validate20.errors = [{instancePath:instancePath+"/shortname",schemaPath:"#/properties/shortname/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.description !== undefined){const _errs7 = errors;if(typeof data.description !== "string"){validate20.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.version !== undefined){const _errs9 = errors;if(typeof data.version !== "string"){validate20.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs9 === errors;}else {var valid0 = true;}if(valid0){if(data.license !== undefined){const _errs11 = errors;if(typeof data.license !== "string"){validate20.errors = [{instancePath:instancePath+"/license",schemaPath:"#/properties/license/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.repository !== undefined){const _errs13 = errors;if(typeof data.repository !== "string"){validate20.errors = [{instancePath:instancePath+"/repository",schemaPath:"#/properties/repository/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.bugs !== undefined){const _errs15 = errors;if(typeof data.bugs !== "string"){validate20.errors = [{instancePath:instancePath+"/bugs",schemaPath:"#/properties/bugs/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.maintainers !== undefined){let data8 = data.maintainers;const _errs17 = errors;if(errors === _errs17){if(Array.isArray(data8)){var valid1 = true;const len0 = data8.length;for(let i0=0; i0<len0; i0++){let data9 = data8[i0];const _errs19 = errors;if(errors === _errs19){if(data9 && typeof data9 == "object" && !Array.isArray(data9)){let missing1;if((data9.name === undefined) && (missing1 = "name")){validate20.errors = [{instancePath:instancePath+"/maintainers/" + i0,schemaPath:"#/properties/maintainers/items/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property \'"+missing1+"\'"}];return false;}else {if(data9.name !== undefined){const _errs21 = errors;if(typeof data9.name !== "string"){validate20.errors = [{instancePath:instancePath+"/maintainers/" + i0+"/name",schemaPath:"#/properties/maintainers/items/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs21 === errors;}else {var valid2 = true;}if(valid2){if(data9.email !== undefined){const _errs23 = errors;if(typeof data9.email !== "string"){validate20.errors = [{instancePath:instancePath+"/maintainers/" + i0+"/email",schemaPath:"#/properties/maintainers/items/properties/email/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs23 === errors;}else {var valid2 = true;}if(valid2){if(data9.github !== undefined){const _errs25 = errors;if(typeof data9.github !== "string"){validate20.errors = [{instancePath:instancePath+"/maintainers/" + i0+"/github",schemaPath:"#/properties/maintainers/items/properties/github/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs25 === errors;}else {var valid2 = true;}}}}}else {validate20.errors = [{instancePath:instancePath+"/maintainers/" + i0,schemaPath:"#/properties/maintainers/items/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs19 === errors;if(!valid1){break;}}if(valid1){let i1 = data8.length;let j0;if(i1 > 1){outer0:for(;i1--;){for(j0 = i1; j0--;){if(func0(data8[i1], data8[j0])){validate20.errors = [{instancePath:instancePath+"/maintainers",schemaPath:"#/properties/maintainers/uniqueItems",keyword:"uniqueItems",params:{i: i1, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i1+" are identical)"}];return false;break outer0;}}}}}}else {validate20.errors = [{instancePath:instancePath+"/maintainers",schemaPath:"#/properties/maintainers/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs17 === errors;}else {var valid0 = true;}if(valid0){if(data.legacyIds !== undefined){let data13 = data.legacyIds;const _errs27 = errors;if(errors === _errs27){if(Array.isArray(data13)){var valid4 = true;const len1 = data13.length;for(let i2=0; i2<len1; i2++){const _errs29 = errors;if(typeof data13[i2] !== "string"){validate20.errors = [{instancePath:instancePath+"/legacyIds/" + i2,schemaPath:"#/properties/legacyIds/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs29 === errors;if(!valid4){break;}}if(valid4){let i3 = data13.length;let j1;if(i3 > 1){const indices0 = {};for(;i3--;){let item0 = data13[i3];if(typeof item0 !== "string"){continue;}if(typeof indices0[item0] == "number"){j1 = indices0[item0];validate20.errors = [{instancePath:instancePath+"/legacyIds",schemaPath:"#/properties/legacyIds/uniqueItems",keyword:"uniqueItems",params:{i: i3, j: j1},message:"must NOT have duplicate items (items ## "+j1+" and "+i3+" are identical)"}];return false;break;}indices0[item0] = i3;}}}}else {validate20.errors = [{instancePath:instancePath+"/legacyIds",schemaPath:"#/properties/legacyIds/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs27 === errors;}else {var valid0 = true;}if(valid0){if(data.runtime !== undefined){let data15 = data.runtime;const _errs31 = errors;if(errors === _errs31){if(data15 && typeof data15 == "object" && !Array.isArray(data15)){let missing2;if(((((data15.type === undefined) && (missing2 = "type")) || ((data15.api === undefined) && (missing2 = "api"))) || ((data15.apiVersion === undefined) && (missing2 = "apiVersion"))) || ((data15.entrypoint === undefined) && (missing2 = "entrypoint"))){validate20.errors = [{instancePath:instancePath+"/runtime",schemaPath:"#/properties/runtime/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property \'"+missing2+"\'"}];return false;}else {if(data15.type !== undefined){const _errs33 = errors;if(typeof data15.type !== "string"){validate20.errors = [{instancePath:instancePath+"/runtime/type",schemaPath:"#/properties/runtime/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs33 === errors;}else {var valid6 = true;}if(valid6){if(data15.api !== undefined){let data17 = data15.api;const _errs35 = errors;if(typeof data17 !== "string"){validate20.errors = [{instancePath:instancePath+"/runtime/api",schemaPath:"#/properties/runtime/properties/api/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(data17 === "nodejs-ipc")){validate20.errors = [{instancePath:instancePath+"/runtime/api",schemaPath:"#/properties/runtime/properties/api/enum",keyword:"enum",params:{allowedValues: schema22.properties.runtime.properties.api.enum},message:"must be equal to one of the allowed values"}];return false;}var valid6 = _errs35 === errors;}else {var valid6 = true;}if(valid6){if(data15.apiVersion !== undefined){const _errs37 = errors;if(typeof data15.apiVersion !== "string"){validate20.errors = [{instancePath:instancePath+"/runtime/apiVersion",schemaPath:"#/properties/runtime/properties/apiVersion/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs37 === errors;}else {var valid6 = true;}if(valid6){if(data15.entrypoint !== undefined){const _errs39 = errors;if(typeof data15.entrypoint !== "string"){validate20.errors = [{instancePath:instancePath+"/runtime/entrypoint",schemaPath:"#/properties/runtime/properties/entrypoint/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs39 === errors;}else {var valid6 = true;}}}}}}else {validate20.errors = [{instancePath:instancePath+"/runtime",schemaPath:"#/properties/runtime/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs31 === errors;}else {var valid0 = true;}if(valid0){if(data.manufacturer !== undefined){const _errs41 = errors;if(typeof data.manufacturer !== "string"){validate20.errors = [{instancePath:instancePath+"/manufacturer",schemaPath:"#/properties/manufacturer/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs41 === errors;}else {var valid0 = true;}if(valid0){if(data.products !== undefined){let data21 = data.products;const _errs43 = errors;if(errors === _errs43){if(Array.isArray(data21)){var valid7 = true;const len2 = data21.length;for(let i4=0; i4<len2; i4++){const _errs45 = errors;if(typeof data21[i4] !== "string"){validate20.errors = [{instancePath:instancePath+"/products/" + i4,schemaPath:"#/properties/products/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid7 = _errs45 === errors;if(!valid7){break;}}if(valid7){let i5 = data21.length;let j2;if(i5 > 1){const indices1 = {};for(;i5--;){let item1 = data21[i5];if(typeof item1 !== "string"){continue;}if(typeof indices1[item1] == "number"){j2 = indices1[item1];validate20.errors = [{instancePath:instancePath+"/products",schemaPath:"#/properties/products/uniqueItems",keyword:"uniqueItems",params:{i: i5, j: j2},message:"must NOT have duplicate items (items ## "+j2+" and "+i5+" are identical)"}];return false;break;}indices1[item1] = i5;}}}}else {validate20.errors = [{instancePath:instancePath+"/products",schemaPath:"#/properties/products/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs43 === errors;}else {var valid0 = true;}if(valid0){if(data.keywords !== undefined){let data23 = data.keywords;const _errs47 = errors;if(errors === _errs47){if(Array.isArray(data23)){var valid9 = true;const len3 = data23.length;for(let i6=0; i6<len3; i6++){const _errs49 = errors;if(typeof data23[i6] !== "string"){validate20.errors = [{instancePath:instancePath+"/keywords/" + i6,schemaPath:"#/properties/keywords/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid9 = _errs49 === errors;if(!valid9){break;}}if(valid9){let i7 = data23.length;let j3;if(i7 > 1){const indices2 = {};for(;i7--;){let item2 = data23[i7];if(typeof item2 !== "string"){continue;}if(typeof indices2[item2] == "number"){j3 = indices2[item2];validate20.errors = [{instancePath:instancePath+"/keywords",schemaPath:"#/properties/keywords/uniqueItems",keyword:"uniqueItems",params:{i: i7, j: j3},message:"must NOT have duplicate items (items ## "+j3+" and "+i7+" are identical)"}];return false;break;}indices2[item2] = i7;}}}}else {validate20.errors = [{instancePath:instancePath+"/keywords",schemaPath:"#/properties/keywords/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs47 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}else {validate20.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate20.errors = vErrors;return errors === 0;}\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/generated/validate_manifest.js?')},"./node_modules/@companion-module/base/lib/debounce-fn/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\nconst mimicFn = __webpack_require__(/*! mimic-fn */ \"./node_modules/mimic-fn/index.js\");\n\nmodule.exports = (inputFunction, options = {}) => {\n\tif (typeof inputFunction !== 'function') {\n\t\tthrow new TypeError(`Expected the first argument to be a function, got \\`${typeof inputFunction}\\``);\n\t}\n\n\tconst {\n\t\twait = 0,\n\t\tmaxWait = 0,\n\t\tbefore = false,\n\t\tafter = true\n\t} = options;\n\n\tif (!before && !after) {\n\t\tthrow new Error('Both `before` and `after` are false, function wouldn\\'t be called.');\n\t}\n\n\tlet timeout;\n\tlet maxTimeout;\n\tlet result;\n\n\tconst debouncedFunction = function (...arguments_) {\n\t\tconst context = this;\n\n\t\tconst later = () => {\n\t\t\ttimeout = undefined;\n\n\t\t\tif (maxTimeout) {\n\t\t\t\tclearTimeout(maxTimeout);\n\t\t\t\tmaxTimeout = undefined;\n\t\t\t}\n\n\t\t\tif (after) {\n\t\t\t\tresult = inputFunction.apply(context, arguments_);\n\t\t\t}\n\t\t};\n\n\t\tconst maxLater = () => {\n\t\t\tmaxTimeout = undefined;\n\n\t\t\tif (timeout) {\n\t\t\t\tclearTimeout(timeout);\n\t\t\t\ttimeout = undefined;\n\t\t\t}\n\n\t\t\tresult = inputFunction.apply(context, arguments_);\n\t\t};\n\n\t\tconst shouldCallNow = before && !timeout;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\n\t\tif (maxWait > 0 && !maxTimeout && after) {\n\t\t\tmaxTimeout = setTimeout(maxLater, maxWait);\n\t\t}\n\n\t\tif (shouldCallNow) {\n\t\t\tresult = inputFunction.apply(context, arguments_);\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tmimicFn(debouncedFunction, inputFunction);\n\n\tdebouncedFunction.cancel = () => {\n\t\tif (timeout) {\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = undefined;\n\t\t}\n\n\t\tif (maxTimeout) {\n\t\t\tclearTimeout(maxTimeout);\n\t\t\tmaxTimeout = undefined;\n\t\t}\n\t};\n\n\treturn debouncedFunction;\n};\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/@companion-module/base/lib/debounce-fn/index.js?")},"./node_modules/nanoid/index.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{eval("let crypto = __webpack_require__(/*! crypto */ \"crypto\")\nlet { urlAlphabet } = __webpack_require__(/*! ./url-alphabet/index.cjs */ \"./node_modules/nanoid/url-alphabet/index.cjs\")\nconst POOL_SIZE_MULTIPLIER = 128\nlet pool, poolOffset\nlet fillPool = bytes => {\n  if (!pool || pool.length < bytes) {\n    pool = Buffer.allocUnsafe(bytes * POOL_SIZE_MULTIPLIER)\n    crypto.randomFillSync(pool)\n    poolOffset = 0\n  } else if (poolOffset + bytes > pool.length) {\n    crypto.randomFillSync(pool)\n    poolOffset = 0\n  }\n  poolOffset += bytes\n}\nlet random = bytes => {\n  fillPool((bytes -= 0))\n  return pool.subarray(poolOffset - bytes, poolOffset)\n}\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (31 - Math.clz32((alphabet.length - 1) | 1))) - 1\n  let step = Math.ceil((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let i = step\n      while (i--) {\n        id += alphabet[bytes[i] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  fillPool((size -= 0))\n  let id = ''\n  for (let i = poolOffset - size; i < poolOffset; i++) {\n    id += urlAlphabet[pool[i] & 63]\n  }\n  return id\n}\nmodule.exports = { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/nanoid/index.cjs?")},"./node_modules/nanoid/url-alphabet/index.cjs":module=>{eval("let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nmodule.exports = { urlAlphabet }\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/nanoid/url-alphabet/index.cjs?")},"./node_modules/tslib/tslib.es6.mjs":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __addDisposableResource: () => (/* binding */ __addDisposableResource),\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldIn: () => (/* binding */ __classPrivateFieldIn),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __disposeResources: () => (/* binding */ __disposeResources),\n/* harmony export */   __esDecorate: () => (/* binding */ __esDecorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __propKey: () => (/* binding */ __propKey),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __runInitializers: () => (/* binding */ __runInitializers),\n/* harmony export */   __setFunctionName: () => (/* binding */ __setFunctionName),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArray: () => (/* binding */ __spreadArray),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values),\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  if (typeof b !== "function" && b !== null)\n      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === "function")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nfunction __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nfunction __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nfunction __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }\n  var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";\n  var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === "accessor") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== "object") throw new TypeError("Object expected");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === "field") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nfunction __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nfunction __propKey(x) {\n  return typeof x === "symbol" ? x : "".concat(x);\n};\n\nfunction __setFunctionName(f, name, prefix) {\n  if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";\n  return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });\n};\n\nfunction __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError("Generator is already executing.");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nvar __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nfunction __exportStar(m, o) {\n  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nfunction __values(o) {\n  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === "number") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");\n}\n\nfunction __read(o, n) {\n  var m = typeof Symbol === "function" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i["return"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nfunction __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nfunction __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nfunction __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume("next", value); }\n  function reject(value) { resume("throw", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nfunction __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nfunction __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nfunction __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, "default", { enumerable: true, value: v });\n}) : function(o, v) {\n  o["default"] = v;\n};\n\nfunction __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nfunction __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");\n  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");\n  return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === "m") throw new TypeError("Private method is not writable");\n  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");\n  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");\n  return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nfunction __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use \'in\' operator on non-object");\n  return typeof state === "function" ? receiver === state : state.has(receiver);\n}\n\nfunction __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== "function") throw new TypeError("Object not disposable.");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;\n};\n\nfunction __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n});\n\n\n//# sourceURL=webpack://spx-grapics-controller/./node_modules/tslib/tslib.es6.mjs?')}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={id:e,loaded:!1,exports:{}};return __webpack_modules__[e].call(t.exports,t,t.exports,__webpack_require__),t.loaded=!0,t.exports}__webpack_require__.c=__webpack_module_cache__,__webpack_require__.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(n,{a:n}),n},__webpack_require__.d=(e,n)=>{for(var t in n)__webpack_require__.o(n,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},__webpack_require__.hmd=e=>((e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e),__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__(__webpack_require__.s="./main.js")})();